;; This file is generated by GNU cflow 1.4. -*- cflow -*-
+-main() <int main (int argc, char **argv) at emacs.c:699>
  +-xputenv() <void xputenv (char const *string) at alloc.c:871>
  | +-putenv()
  | \-memory_full() <void memory_full (size_t nbytes) at alloc.c:3717> (R)
  |   +-malloc()
  |   +-free()
  |   +-lisp_align_free() <void lisp_align_free (void *block) at alloc.c:1160>
  |   | +-ABLOCK_ABASE()
  |   | +-mem_delete() <void mem_delete (struct mem_node z) at alloc.c:4073>
  |   | | +-mem_delete_fixup() <void mem_delete_fixup (struct mem_node x) at alloc.c:4127>
  |   | | | +-mem_rotate_left() <void mem_rotate_left (struct mem_node x) at alloc.c:4005>
  |   | | | \-mem_rotate_right() <void mem_rotate_right (struct mem_node x) at alloc.c:4044>
  |   | | +-free()
  |   | | \-xfree() <void xfree (void *block) at alloc.c:730>
  |   | |   \-free()
  |   | +-mem_find() <struct mem_node mem_find (void *start) at alloc.c:3832>
  |   | +-ABLOCKS_BUSY()
  |   | +-eassert()
  |   | +-ABLOCKS_BASE()
  |   | \-free()
  |   +-lisp_free() <void lisp_free (void *block) at alloc.c:942>
  |   | +-free()
  |   | +-mem_delete() <void mem_delete (struct mem_node z) at alloc.c:4073> [see 10]
  |   | \-mem_find() <struct mem_node mem_find (void *start) at alloc.c:3832>
  |   \-xsignal() <void xsignal (Lisp_Object error_symbol, Lisp_Object data) at eval.c:1579> (R)
  |     +-Fsignal()
  |     \-emacs_abort() <void emacs_abort (void) at sysdep.c:2129> (R)
  |       \-terminate_due_to_signal() <_Noreturn void terminate_due_to_signal (int sig, int backtrace_limit) at emacs.c:347> (R)
  |         +-signal()
  |         +-totally_unblock_input() <void totally_unblock_input (void) at keyboard.c:7146> (R)
  |         | \-unblock_input_to() <void unblock_input_to (int level) at keyboard.c:7114> (R)
  |         +-Fkill_emacs()
  |         +-make_number()
  |         +-shut_down_emacs() <void shut_down_emacs (int sig, Lisp_Object stuff) at emacs.c:1986> (R)
  |         | +-getpgrp()
  |         | +-tcgetpgrp()
  |         | +-reset_all_sys_modes() <void reset_all_sys_modes (void) at sysdep.c:1210> (R)
  |         | +-sprintf()
  |         | +-safe_strsignal() <char const *safe_strsignal (int code) at sysdep.c:2408>
  |         | +-emacs_write() <ptrdiff_t emacs_write (int fildes, void const *buf, ptrdiff_t nbyte) at sysdep.c:2325> (R)
  |         | +-strlen()
  |         | +-fflush()
  |         | +-stuff_buffered_input() <void stuff_buffered_input (Lisp_Object stuffstring) at keyboard.c:10200> (R)
  |         | +-kill_buffer_processes() <void kill_buffer_processes (Lisp_Object buffer) at process.c:6938> (R)
  |         | +-Fdo_auto_save()
  |         | +-unlock_all_files() <void unlock_all_files (void) at filelock.c:758> (R)
  |         | +-unrequest_sigio() <void unrequest_sigio (void) at sysdep.c:635>
  |         | +-ignore_sigio() <void ignore_sigio (void) at sysdep.c:654>
  |         | +-check_glyph_memory() <void check_glyph_memory (void) at dispnew.c:2259> (R)
  |         | +-check_message_stack() <void check_message_stack (void) at xdisp.c:11113> (R)
  |         | +-dos_cleanup()
  |         | +-ns_term_shutdown()
  |         | +-xml_cleanup_parser() <void xml_cleanup_parser (void) at xml.c:246>
  |         | \-term_ntproc()
  |         +-emacs_backtrace() <void emacs_backtrace (int backtrace_limit) at sysdep.c:2100> (R)
  |         | +-min()
  |         | +-backtrace()
  |         | +-emacs_write() <ptrdiff_t emacs_write (int fildes, void const *buf, ptrdiff_t nbyte) at sysdep.c:2325> (R) [see 41]
  |         | \-backtrace_symbols_fd()
  |         +-sigemptyset()
  |         +-sigaddset()
  |         +-pthread_sigmask()
  |         +-emacs_raise()
  |         \-exit()
  +-sbrk()
  +-max()
  +-cache_system_info()
  +-maybe_load_unicows_dll()
  +-run_time_remap()
  +-unexec_init_emacs_zone()
  +-atexit()
  +-close_output_streams() <void close_output_streams (void) at emacs.c:685>
  | +-close_stream()
  | \-emacs_perror() <void emacs_perror (char const *message) at sysdep.c:2341> (R)
  |   +-strerror()
  |   +-snprintf() <int snprintf (char *buf, size_t bufsize, char const *format, ...) at sysdep.c:2055> (R)
  |   | +-min()
  |   | +-va_start()
  |   | +-doprnt() <ptrdiff_t doprnt (char *buffer, ptrdiff_t bufsize, const char *format, const char *format_end, va_list ap) at doprnt.c:129> (R)
  |   | | +-strlen()
  |   | | +-SAFE_ALLOCA()
  |   | | +-max()
  |   | | +-min()
  |   | | +-error() <void error (const char *m, ...) at eval.c:1782> (R)
  |   | | | +-va_start()
  |   | | | \-verror() <void verror (const char *m, va_list ap) at eval.c:1760> (R)
  |   | | |   +-evxprintf() <ptrdiff_t evxprintf (char **buf, ptrdiff_t *bufsize, char const *nonheapbuf, ptrdiff_t bufsize_max, char const *format, va_list ap) at doprnt.c:510> (R)
  |   | | |   +-make_string() <Lisp_Object make_string (const char *contents, ptrdiff_t nbytes) at alloc.c:2145> (R)
  |   | | |   +-xfree() <void xfree (void *block) at alloc.c:730> [see 15]
  |   | | |   \-xsignal1() <void xsignal1 (Lisp_Object error_symbol, Lisp_Object arg) at eval.c:1594> (R)
  |   | | +-memcmp()
  |   | | +-memcpy()
  |   | | +-xfree() <void xfree (void *block) at alloc.c:730> [see 15]
  |   | | +-xmalloc() <void *xmalloc (size_t size) at alloc.c:672> (R)
  |   | | | +-malloc()
  |   | | | +-memory_full() <void memory_full (size_t nbytes) at alloc.c:3717> (R) [see 5]
  |   | | | \-MALLOC_PROBE()
  |   | | +-va_arg()
  |   | | +-sprintf()
  |   | | +-atoi()
  |   | | +-strwidth() <ptrdiff_t strwidth (const char *str, ptrdiff_t len) at character.c:413> (R)
  |   | | | \-c_string_width() <ptrdiff_t c_string_width (const unsigned char *str, ptrdiff_t len, int precision, ptrdiff_t *nchars, ptrdiff_t *nbytes) at character.c:370> (R)
  |   | | |   +-buffer_display_table() <struct Lisp_Char_Table buffer_display_table (void) at indent.c:62>
  |   | | |   +-STRING_CHAR_AND_LENGTH()
  |   | | |   +-char_width() <ptrdiff_t char_width (int c, struct Lisp_Char_Table dp) at character.c:320> (R)
  |   | | |   +-INT_ADD_OVERFLOW()
  |   | | |   \-string_overflow() <void string_overflow (void) at alloc.c:2028> (R)
  |   | | +-eassert()
  |   | | +-CHAR_HEAD_P()
  |   | | +-BYTES_BY_CHAR_HEAD()
  |   | | +-CHAR_STRING()
  |   | | \-SAFE_FREE()
  |   | +-va_end()
  |   | +-evxprintf() <ptrdiff_t evxprintf (char **buf, ptrdiff_t *bufsize, char const *nonheapbuf, ptrdiff_t bufsize_max, char const *format, va_list ap) at doprnt.c:510> (R) [see 88]
  |   | \-xfree() <void xfree (void *block) at alloc.c:730> [see 15]
  |   +-emacs_write() <ptrdiff_t emacs_write (int fildes, void const *buf, ptrdiff_t nbyte) at sysdep.c:2325> (R) [see 41]
  |   \-strlen()
  +-sort_args() <void sort_args (int argc, char **argv) at emacs.c:1769>
  | +-xmalloc() <void *xmalloc (size_t size) at regex.c:213>
  | | +-malloc()
  | | +-write()
  | | \-exit()
  | +-xnmalloc() <void *xnmalloc (ptrdiff_t nitems, ptrdiff_t item_size) at alloc.c:752> (R)
  | | +-eassert()
  | | +-min()
  | | +-memory_full() <void memory_full (size_t nbytes) at alloc.c:3717> (R) [see 5]
  | | \-xmalloc() <void *xmalloc (size_t size) at alloc.c:672> (R) [see 95]
  | +-strcmp()
  | +-fatal() <void fatal (const char *str, ...) at term.c:4460>
  | | +-va_start()
  | | \-vfatal() <void vfatal (const char *str, va_list ap) at term.c:4429>
  | |   +-fprintf()
  | |   +-vfprintf()
  | |   +-strlen()
  | |   +-fflush()
  | |   \-exit()
  | +-strchr()
  | +-strlen()
  | +-strncmp()
  | +-emacs_abort() <void emacs_abort (void) at sysdep.c:2129> (R) [see 28]
  | +-memcpy()
  | \-xfree() <void xfree (void *block) at alloc.c:730> [see 15]
  +-argmatch() <bool argmatch (char **argv, int argc, const char *sstr, const char *lstr, int minlen, char **valptr, int *skipptr) at emacs.c:585>
  | +-strcmp()
  | +-strchr()
  | +-strlen()
  | \-strncmp()
  +-Fsymbol_value()
  +-intern_c_string()
  +-STRINGP()
  +-fprintf()
  +-exit()
  +-SSDATA()
  +-printf()
  +-filename_from_ansi()
  +-get_current_dir_name() <char *get_current_dir_name (void) at sysdep.c:132>
  | +-getenv()
  | +-IS_DIRECTORY_SEP()
  | +-IS_DEVICE_SEP()
  | +-stat()
  | +-strlen()
  | +-malloc()
  | +-strcpy()
  | +-getcwd()
  | +-free()
  | \-realloc()
  +-chdir()
  +-strerror()
  +-strcmp()
  +-getenv()
  +-personality()
  +-execvp()
  +-emacs_perror() <void emacs_perror (char const *message) at sysdep.c:2341> (R) [see 75]
  +-getrlimit()
  +-getpagesize()
  +-setrlimit()
  +-clearerr()
  +-memory_warnings() <void memory_warnings (void *start, void (*warnfun) (const char *)) at vm-limit.c:235>
  | \-check_memory_limits() <void check_memory_limits (void) at vm-limit.c:159>
  |   +-get_lim_data() <void get_lim_data (void) at vm-limit.c:116>
  |   | \-getrlimit()
  |   \-exceeds_lisp_ptr() <bool exceeds_lisp_ptr (void *ptr) at vm-limit.c:76>
  +-malloc_warning() <void malloc_warning (const char *str) at alloc.c:414>
  +-free()
  +-realloc()
  +-malloc()
  +-isatty()
  +-fileno()
  +-setmode()
  +-fflush()
  +-setlocale() <char *setlocale (int cat, char const *locale) at emacs.c:337>
  +-emacs_close() <int emacs_close (int fd) at sysdep.c:2242>
  | +-posix_close() <int posix_close (int fd, int flag) at sysdep.c:2209>
  | | +-eassert()
  | | \-close()
  | \-eassert()
  +-emacs_open() <int emacs_open (const char *file, int oflags, int mode) at sysdep.c:2142>
  | +-open()
  | \-fcntl()
  +-fcntl()
  +-fputs()
  +-emacs_pipe() <int emacs_pipe (int fd[2]) at sysdep.c:2187>
  | +-pipe()
  | +-pipe2()
  | \-fcntl()
  +-fork()
  +-strchr()
  +-read()
  +-snprintf() <int snprintf (char *buf, size_t bufsize, char const *format, ...) at sysdep.c:2055> (R) [see 77]
  +-strlen()
  +-sscanf()
  +-xstrdup() <char *xstrdup (const char *s) at alloc.c:836> (R)
  | +-eassert()
  | +-strlen()
  | +-memcpy()
  | \-xmalloc() <void *xmalloc (size_t size) at alloc.c:672> (R) [see 95]
  +-setsid()
  +-malloc_enable_thread()
  +-init_signals() <void init_signals (bool dumping) at sysdep.c:1694>
  | +-sigemptyset()
  | +-pthread_self()
  | +-sigfillset()
  | +-deliver_fatal_signal() <void deliver_fatal_signal (int sig) at sysdep.c:1634>
  | | +-deliver_process_signal() <void deliver_process_signal (int sig, signal_handler_t handler) at sysdep.c:1551>
  | | | +-pthread_equal()
  | | | +-pthread_self()
  | | | +-sigemptyset()
  | | | +-sigaddset()
  | | | +-pthread_sigmask()
  | | | \-pthread_kill()
  | | \-handle_fatal_signal() <void handle_fatal_signal (int sig) at sysdep.c:1628>
  | |   \-terminate_due_to_signal() <_Noreturn void terminate_due_to_signal (int sig, int backtrace_limit) at emacs.c:347> (R) [see 29]
  | +-emacs_sigaction_flags() <int emacs_sigaction_flags (void) at sysdep.c:1481>
  | +-deliver_fatal_thread_signal() <void deliver_fatal_thread_signal (int sig) at sysdep.c:1640>
  | | +-deliver_thread_signal() <void deliver_thread_signal (int sig, signal_handler_t handler) at sysdep.c:1586>
  | | | +-pthread_equal()
  | | | +-pthread_self()
  | | | +-backtrace()
  | | | +-sigaction()
  | | | +-pthread_kill()
  | | | \-sigsuspend()
  | | \-handle_fatal_signal() <void handle_fatal_signal (int sig) at sysdep.c:1628> [see 232]
  | +-maybe_fatal_sig() <void maybe_fatal_sig (int sig) at sysdep.c:1680>
  | | \-sigaction()
  | +-signal()
  | +-sigaction()
  | +-emacs_sigaction_init() <void emacs_sigaction_init (struct sigaction action, signal_handler_t handler) at sysdep.c:1502>
  | | +-sigemptyset()
  | | +-sigaddset()
  | | \-emacs_sigaction_flags() <int emacs_sigaction_flags (void) at sysdep.c:1481> [see 234]
  | +-deliver_arith_signal() <void deliver_arith_signal (int sig) at sysdep.c:1653>
  | | +-deliver_thread_signal() <void deliver_thread_signal (int sig, signal_handler_t handler) at sysdep.c:1586> [see 236]
  | | \-handle_arith_signal() <_Noreturn void handle_arith_signal (int sig) at sysdep.c:1646>
  | |   +-pthread_sigmask()
  | |   \-xsignal0() <void xsignal0 (Lisp_Object error_symbol) at eval.c:1588> (R)
  | |     \-xsignal() <void xsignal (Lisp_Object error_symbol, Lisp_Object data) at eval.c:1579> (R) [see 26]
  | +-add_user_signal() <void add_user_signal (int sig, const char *name) at keyboard.c:7190>
  | | +-xmalloc() <void *xmalloc (size_t size) at regex.c:213> [see 120]
  | | +-xstrdup() <char *xstrdup (const char *s) at alloc.c:836> (R) [see 213]
  | | +-emacs_sigaction_init() <void emacs_sigaction_init (struct sigaction action, signal_handler_t handler) at sysdep.c:1502> [see 248]
  | | +-deliver_user_signal() <void deliver_user_signal (int sig) at keyboard.c:7253>
  | | | +-deliver_process_signal() <void deliver_process_signal (int sig, signal_handler_t handler) at sysdep.c:1551> [see 225]
  | | | \-handle_user_signal() <void handle_user_signal (int sig) at keyboard.c:7212>
  | | |   +-SYMBOLP()
  | | |   +-SSDATA()
  | | |   +-SYMBOL_NAME()
  | | |   +-strcmp()
  | | |   +-handle_input_available_signal() <void handle_input_available_signal (int sig) at keyboard.c:7154>
  | | |   | \-make_timespec()
  | | |   \-make_timespec()
  | | \-sigaction()
  | \-deliver_danger_signal() <void deliver_danger_signal (int sig) at sysdep.c:1671>
  |   +-deliver_process_signal() <void deliver_process_signal (int sig, signal_handler_t handler) at sysdep.c:1551> [see 225]
  |   \-handle_danger_signal() <void handle_danger_signal (int sig) at sysdep.c:1662>
  |     +-malloc_warning() <void malloc_warning (const char *str) at alloc.c:414> [see 184]
  |     \-force_auto_save_soon() <void force_auto_save_soon (void) at keyboard.c:801>
  |       \-record_asynch_buffer_change() <void record_asynch_buffer_change (void) at keyboard.c:6783> (R)
  |         +-NILP()
  |         +-Fwaiting_for_user_input_p()
  |         +-EVENT_INIT()
  |         +-kbd_buffer_store_event() <void kbd_buffer_store_event (register struct input_event *event) at keyboard.c:3547> (R)
  |         | \-kbd_buffer_store_event_hold() <void kbd_buffer_store_event_hold (register struct input_event *event, struct input_event hold_quit) at keyboard.c:3563> (R)
  |         +-stop_polling() <void stop_polling (void) at keyboard.c:2042>
  |         \-start_polling() <void start_polling (void) at keyboard.c:1990>
  |           +-turn_on_atimers() <void turn_on_atimers (bool on) at atimer.c:395>
  |           +-max()
  |           +-min()
  |           +-TYPE_MAXIMUM()
  |           +-make_timespec()
  |           +-cancel_atimer() <void cancel_atimer (struct atimer timer) at atimer.c:158>
  |           +-start_atimer() <struct atimer start_atimer (enum atimer_type type, struct timespec timestamp, atimer_callback fn, void *client_data) at atimer.c:97>
  |           \-poll_for_input() <void poll_for_input (struct atimer timer) at keyboard.c:1978>
  +-init_alloc_once() <void init_alloc_once (void) at alloc.c:6840>
  | +-mem_init() <void mem_init (void) at alloc.c:3818>
  | +-make_pure_string() <Lisp_Object make_pure_string (const char *data, ptrdiff_t nchars, ptrdiff_t nbytes, bool multibyte) at alloc.c:5162>
  | | +-pure_alloc() <void *pure_alloc (size_t size, int type) at alloc.c:5030>
  | | | +-alignof()
  | | | +-ALIGN() <void *ALIGN (void *ptr, int alignment) at alloc.c:395>
  | | | | \-ROUNDUP()
  | | | \-xmalloc() <void *xmalloc (size_t size) at alloc.c:672> (R) [see 95]
  | | +-find_string_data_in_pure() <char *find_string_data_in_pure (const char *data, ptrdiff_t nbytes) at alloc.c:5092>
  | | | \-memcmp()
  | | +-memcpy()
  | | \-XSETSTRING()
  | +-mallopt()
  | +-init_strings() <void init_strings (void) at alloc.c:1535>
  | | \-make_pure_string() <Lisp_Object make_pure_string (const char *data, ptrdiff_t nchars, ptrdiff_t nbytes, bool multibyte) at alloc.c:5162> [see 296]
  | +-init_vectors() <void init_vectors (void) at alloc.c:2816>
  | | \-make_pure_vector() <Lisp_Object make_pure_vector (ptrdiff_t len) at alloc.c:5231>
  | |   +-pure_alloc() <void *pure_alloc (size_t size, int type) at alloc.c:5030> [see 297]
  | |   +-XSETVECTOR()
  | |   \-XVECTOR()
  | \-refill_memory_reserve() <void refill_memory_reserve (void) at alloc.c:3770>
  |   +-malloc()
  |   +-lisp_align_malloc() <void *lisp_align_malloc (size_t nbytes, enum mem_type type) at alloc.c:1057> (R)
  |   | +-eassert()
  |   | +-mallopt()
  |   | +-aligned_alloc() <void *aligned_alloc (size_t alignment, size_t size) at alloc.c:971>
  |   | | \-posix_memalign()
  |   | +-malloc()
  |   | +-ALIGN() <void *ALIGN (void *ptr, int alignment) at alloc.c:395> [see 299]
  |   | +-memory_full() <void memory_full (size_t nbytes) at alloc.c:3717> (R) [see 5]
  |   | +-XSETCONS()
  |   | +-XCONS()
  |   | +-free()
  |   | +-ABLOCKS_BUSY()
  |   | +-ABLOCK_ABASE()
  |   | +-ABLOCKS_BASE()
  |   | +-mem_insert() <struct mem_node mem_insert (void *start, void *end, enum mem_type type) at alloc.c:3855>
  |   | \-MALLOC_PROBE()
  |   \-lisp_malloc() <void *lisp_malloc (size_t nbytes, enum mem_type type) at alloc.c:897> (R)
  |     +-malloc()
  |     +-XSETCONS()
  |     +-XCONS()
  |     +-free()
  |     +-mem_insert() <struct mem_node mem_insert (void *start, void *end, enum mem_type type) at alloc.c:3855>
  |     +-memory_full() <void memory_full (size_t nbytes) at alloc.c:3717> (R) [see 5]
  |     \-MALLOC_PROBE()
  +-init_obarray() <void init_obarray (void) at lread.c:4022>
  | +-XSETFASTINT()
  | +-Fmake_vector()
  | +-make_number()
  | +-staticpro() <void staticpro (Lisp_Object *varaddress) at alloc.c:5333>
  | | \-fatal() <void fatal (const char *str, ...) at term.c:4460> [see 130]
  | +-Fmake_symbol()
  | +-build_pure_c_string()
  | +-intern_c_string()
  | +-SET_SYMBOL_VAL()
  | +-XSYMBOL()
  | +-set_symbol_function()
  | +-set_symbol_plist()
  | +-DEFSYM()
  | \-xmalloc() <void *xmalloc (size_t size) at alloc.c:672> (R) [see 95]
  +-init_eval_once() <void init_eval_once (void) at eval.c:222>
  | \-xmalloc() <void *xmalloc (size_t size) at alloc.c:672> (R) [see 95]
  +-init_charset_once() <void init_charset_once (void) at charset.c:2321>
  +-init_coding_once() <void init_coding_once (void) at coding.c:10777>
  +-init_syntax_once() <void init_syntax_once (void) at regex.c:401>
  | +-memset()
  | \-ISALNUM()
  +-init_category_once() <void init_category_once (void) at category.c:442>
  | +-DEFSYM()
  | +-Fput()
  | +-make_number()
  | +-Fmake_char_table()
  | +-set_char_table_defalt()
  | +-Fset_char_table_extra_slot()
  | \-Fmake_vector()
  +-init_casetab_once() <void init_casetab_once (void) at casetab.c:244>
  | +-DEFSYM()
  | +-Fput()
  | +-make_number()
  | +-Fmake_char_table()
  | +-set_char_table_purpose()
  | +-CHAR_TABLE_SET()
  | +-set_char_table_extras()
  | +-Fcopy_sequence()
  | \-set_case_table() <Lisp_Object set_case_table (Lisp_Object table, bool standard) at casetab.c:116>
  |   +-check_case_table() <Lisp_Object check_case_table (Lisp_Object obj) at casetab.c:61>
  |   | +-CHECK_TYPE()
  |   | +-NILP()
  |   | \-Fcase_table_p()
  |   +-XCHAR_TABLE()
  |   +-NILP()
  |   +-Fmake_char_table()
  |   +-map_char_table() <void map_char_table (void (*c_function) (Lisp_Object, Lisp_Object, Lisp_Object), Lisp_Object function, Lisp_Object table, Lisp_Object arg) at chartab.c:888>
  |   | +-decoder()
  |   | +-UNIPROP_GET_DECODER()
  |   | +-Fcons()
  |   | +-make_number()
  |   | +-XCHAR_TABLE()
  |   | +-GCPRO4()
  |   | +-SUB_CHAR_TABLE_P()
  |   | +-XSUB_CHAR_TABLE()
  |   | +-map_sub_char_table() <Lisp_Object map_sub_char_table (void (*c_function) (Lisp_Object, Lisp_Object, Lisp_Object), Lisp_Object function, Lisp_Object table, Lisp_Object arg, Lisp_Object val, Lisp_Object range, Lisp_Object top) at chartab.c:762> (R)
  |   | | +-XINT()
  |   | | +-XCAR()
  |   | | +-XCDR()
  |   | | +-UNIPROP_TABLE_P()
  |   | | +-decoder()
  |   | | +-UNIPROP_GET_DECODER()
  |   | | +-SUB_CHAR_TABLE_P()
  |   | | +-XSUB_CHAR_TABLE()
  |   | | +-XCHAR_TABLE()
  |   | | +-UNIPROP_COMPRESSED_FORM_P()
  |   | | +-uniprop_table_uncompress() <Lisp_Object uniprop_table_uncompress (Lisp_Object table, int idx) at chartab.c:1147>
  |   | | | +-XSUB_CHAR_TABLE()
  |   | | | +-XINT()
  |   | | | +-make_sub_char_table() <Lisp_Object make_sub_char_table (int depth, int min_char, Lisp_Object defalt) at chartab.c:141>
  |   | | | | +-PSEUDOVECSIZE()
  |   | | | | +-Fmake_vector()
  |   | | | | +-make_number()
  |   | | | | +-XSETPVECTYPE()
  |   | | | | +-XVECTOR()
  |   | | | | \-XSUB_CHAR_TABLE()
  |   | | | +-set_sub_char_table_contents()
  |   | | | +-SDATA()
  |   | | | +-SBYTES()
  |   | | | +-STRING_CHAR_ADVANCE()
  |   | | | +-make_number()
  |   | | | \-STRING_CHAR_AND_LENGTH()
  |   | | +-XSETCDR()
  |   | | +-make_number()
  |   | | +-map_sub_char_table() <Lisp_Object map_sub_char_table (void (*c_function) (Lisp_Object, Lisp_Object, Lisp_Object), Lisp_Object function, Lisp_Object table, Lisp_Object arg, Lisp_Object val, Lisp_Object range, Lisp_Object top) at chartab.c:762> (recursive: see 396) [see 396]
  |   | | +-NILP()
  |   | | +-EQ()
  |   | | +-set_char_table_parent() <void set_char_table_parent (Lisp_Object table, Lisp_Object val) at chartab.c:99>
  |   | | | \-XCHAR_TABLE()
  |   | | +-CHAR_TABLE_REF()
  |   | | +-call2() <Lisp_Object call2 (Lisp_Object fn, Lisp_Object arg1, Lisp_Object arg2) at eval.c:2616>
  |   | | | +-GCPRO1()
  |   | | | +-RETURN_UNGCPRO()
  |   | | | \-Ffuncall()
  |   | | \-XSETCAR()
  |   | +-NILP()
  |   | +-XINT()
  |   | +-XCAR()
  |   | +-set_char_table_parent() <void set_char_table_parent (Lisp_Object table, Lisp_Object val) at chartab.c:99> [see 428]
  |   | +-CHAR_TABLE_REF()
  |   | +-EQ()
  |   | +-XCDR()
  |   | \-call2() <Lisp_Object call2 (Lisp_Object fn, Lisp_Object arg1, Lisp_Object arg2) at eval.c:2616> [see 431]
  |   +-set_identity() <void set_identity (Lisp_Object table, Lisp_Object c, Lisp_Object elt) at casetab.c:193>
  |   | +-NATNUMP()
  |   | +-CONSP()
  |   | +-XINT()
  |   | +-XCAR()
  |   | +-XCDR()
  |   | +-CHAR_TABLE_SET()
  |   | \-make_number()
  |   +-shuffle() <void shuffle (Lisp_Object table, Lisp_Object c, Lisp_Object elt) at casetab.c:219>
  |   | +-NATNUMP()
  |   | +-CONSP()
  |   | +-XINT()
  |   | +-XCAR()
  |   | +-XCDR()
  |   | +-Faref()
  |   | +-Faset()
  |   | \-make_number()
  |   +-set_char_table_extras()
  |   +-set_canon() <void set_canon (Lisp_Object case_table, Lisp_Object range, Lisp_Object elt) at casetab.c:178>
  |   | +-XCHAR_TABLE()
  |   | +-NATNUMP()
  |   | +-Fset_char_table_range()
  |   | \-Faref()
  |   +-bset_downcase_table()
  |   +-bset_upcase_table()
  |   +-bset_case_canon_table()
  |   \-bset_case_eqv_table()
  +-init_buffer_once() <void init_buffer_once (void) at buffer.c:5151>
  | +-memset()
  | +-reset_buffer() <void reset_buffer (register struct buffer *b) at buffer.c:929>
  | | +-bset_filename()
  | | +-bset_file_truename() <void bset_file_truename (struct buffer b, Lisp_Object val) at buffer.c:240>
  | | +-bset_directory()
  | | +-BVAR()
  | | +-make_timespec()
  | | +-XSETFASTINT()
  | | +-bset_backed_up() <void bset_backed_up (struct buffer b, Lisp_Object val) at buffer.c:185>
  | | +-BUF_AUTOSAVE_MODIFF()
  | | +-bset_auto_save_file_name() <void bset_auto_save_file_name (struct buffer b, Lisp_Object val) at buffer.c:180>
  | | +-bset_read_only()
  | | +-set_buffer_overlays_before() <void set_buffer_overlays_before (struct buffer b, struct Lisp_Overlay o) at buffer.c:650>
  | | +-set_buffer_overlays_after() <void set_buffer_overlays_after (struct buffer b, struct Lisp_Overlay o) at buffer.c:656>
  | | +-bset_mark_active()
  | | +-bset_point_before_scroll()
  | | +-bset_file_format() <void bset_file_format (struct buffer b, Lisp_Object val) at buffer.c:235>
  | | +-bset_auto_save_file_format() <void bset_auto_save_file_format (struct buffer b, Lisp_Object val) at buffer.c:175>
  | | +-bset_last_selected_window()
  | | +-bset_display_count()
  | | +-make_number()
  | | +-bset_display_time()
  | | +-bset_enable_multibyte_characters()
  | | +-bset_cursor_type() <void bset_cursor_type (struct buffer b, Lisp_Object val) at buffer.c:220>
  | | \-bset_extra_line_spacing() <void bset_extra_line_spacing (struct buffer b, Lisp_Object val) at buffer.c:230>
  | +-eassert()
  | +-EQ()
  | +-BVAR()
  | +-make_number()
  | +-reset_buffer_local_variables() <void reset_buffer_local_variables (struct buffer b, bool permanent_too) at buffer.c:973>
  | | +-bset_major_mode() <void bset_major_mode (struct buffer b, Lisp_Object val) at buffer.c:285>
  | | +-bset_keymap()
  | | +-bset_mode_name() <void bset_mode_name (struct buffer b, Lisp_Object val) at buffer.c:305>
  | | +-bset_minor_modes() <void bset_minor_modes (struct buffer b, Lisp_Object val) at buffer.c:295>
  | | +-CHAR_TABLE_P()
  | | +-XCHAR_TABLE()
  | | +-Fset_standard_case_table()
  | | +-bset_downcase_table()
  | | +-bset_upcase_table()
  | | +-bset_case_canon_table()
  | | +-bset_case_eqv_table()
  | | +-bset_invisibility_spec() <void bset_invisibility_spec (struct buffer b, Lisp_Object val) at buffer.c:275>
  | | +-bset_local_var_alist()
  | | +-BVAR()
  | | +-CONSP()
  | | +-XCDR()
  | | +-NILP()
  | | +-Fget()
  | | +-XCAR()
  | | +-EQ()
  | | +-list()
  | | +-SYMBOLP()
  | | +-Fcons()
  | | +-XSETCDR()
  | | +-Fnreverse()
  | | +-SET_PER_BUFFER_VALUE_P()
  | | +-FOR_EACH_PER_BUFFER_OBJECT_AT()
  | | +-PER_BUFFER_IDX()
  | | +-set_per_buffer_value()
  | | \-per_buffer_default()
  | +-set_buffer_intervals()
  | +-bset_name() <void bset_name (struct buffer b, Lisp_Object val) at buffer.c:310>
  | +-build_pure_c_string()
  | +-BUFFER_PVEC_INIT()
  | +-bset_mode_line_format() <void bset_mode_line_format (struct buffer b, Lisp_Object val) at buffer.c:300>
  | +-bset_header_line_format() <void bset_header_line_format (struct buffer b, Lisp_Object val) at buffer.c:260>
  | +-bset_abbrev_mode() <void bset_abbrev_mode (struct buffer b, Lisp_Object val) at buffer.c:160>
  | +-bset_overwrite_mode() <void bset_overwrite_mode (struct buffer b, Lisp_Object val) at buffer.c:315>
  | +-bset_case_fold_search() <void bset_case_fold_search (struct buffer b, Lisp_Object val) at buffer.c:205>
  | +-bset_auto_fill_function() <void bset_auto_fill_function (struct buffer b, Lisp_Object val) at buffer.c:170>
  | +-bset_selective_display() <void bset_selective_display (struct buffer b, Lisp_Object val) at buffer.c:350>
  | +-bset_selective_display_ellipses() <void bset_selective_display_ellipses (struct buffer b, Lisp_Object val) at buffer.c:355>
  | +-bset_abbrev_table() <void bset_abbrev_table (struct buffer b, Lisp_Object val) at buffer.c:165>
  | +-bset_display_table() <void bset_display_table (struct buffer b, Lisp_Object val) at buffer.c:225>
  | +-bset_undo_list()
  | +-bset_mark_active()
  | +-bset_file_format() <void bset_file_format (struct buffer b, Lisp_Object val) at buffer.c:235> [see 488]
  | +-bset_auto_save_file_format() <void bset_auto_save_file_format (struct buffer b, Lisp_Object val) at buffer.c:175> [see 489]
  | +-set_buffer_overlays_before() <void set_buffer_overlays_before (struct buffer b, struct Lisp_Overlay o) at buffer.c:650>
  | +-set_buffer_overlays_after() <void set_buffer_overlays_after (struct buffer b, struct Lisp_Overlay o) at buffer.c:656>
  | +-XSETFASTINT()
  | +-bset_truncate_lines()
  | +-bset_word_wrap() <void bset_word_wrap (struct buffer b, Lisp_Object val) at buffer.c:365>
  | +-bset_ctl_arrow() <void bset_ctl_arrow (struct buffer b, Lisp_Object val) at buffer.c:210>
  | +-bset_bidi_display_reordering() <void bset_bidi_display_reordering (struct buffer b, Lisp_Object val) at buffer.c:195>
  | +-bset_bidi_paragraph_direction()
  | +-bset_cursor_type() <void bset_cursor_type (struct buffer b, Lisp_Object val) at buffer.c:220> [see 495]
  | +-bset_extra_line_spacing() <void bset_extra_line_spacing (struct buffer b, Lisp_Object val) at buffer.c:230> [see 496]
  | +-bset_cursor_in_non_selected_windows() <void bset_cursor_in_non_selected_windows (struct buffer b, Lisp_Object val) at buffer.c:215>
  | +-bset_enable_multibyte_characters()
  | +-bset_buffer_file_coding_system() <void bset_buffer_file_coding_system (struct buffer b, Lisp_Object val) at buffer.c:200>
  | +-bset_cache_long_scans()
  | +-bset_file_truename() <void bset_file_truename (struct buffer b, Lisp_Object val) at buffer.c:240> [see 475]
  | +-bset_left_fringe_width() <void bset_left_fringe_width (struct buffer b, Lisp_Object val) at buffer.c:280>
  | +-bset_right_fringe_width() <void bset_right_fringe_width (struct buffer b, Lisp_Object val) at buffer.c:325>
  | +-bset_fringes_outside_margins() <void bset_fringes_outside_margins (struct buffer b, Lisp_Object val) at buffer.c:255>
  | +-bset_scroll_bar_width() <void bset_scroll_bar_width (struct buffer b, Lisp_Object val) at buffer.c:335>
  | +-bset_vertical_scroll_bar_type() <void bset_vertical_scroll_bar_type (struct buffer b, Lisp_Object val) at buffer.c:360>
  | +-bset_indicate_empty_lines() <void bset_indicate_empty_lines (struct buffer b, Lisp_Object val) at buffer.c:270>
  | +-bset_indicate_buffer_boundaries() <void bset_indicate_buffer_boundaries (struct buffer b, Lisp_Object val) at buffer.c:265>
  | +-bset_fringe_indicator_alist() <void bset_fringe_indicator_alist (struct buffer b, Lisp_Object val) at buffer.c:250>
  | +-bset_fringe_cursor_alist() <void bset_fringe_cursor_alist (struct buffer b, Lisp_Object val) at buffer.c:245>
  | +-bset_scroll_up_aggressively() <void bset_scroll_up_aggressively (struct buffer b, Lisp_Object val) at buffer.c:345>
  | +-bset_scroll_down_aggressively() <void bset_scroll_down_aggressively (struct buffer b, Lisp_Object val) at buffer.c:340>
  | +-bset_display_time()
  | +-verify()
  | +-bset_filename()
  | +-bset_directory()
  | +-bset_backed_up() <void bset_backed_up (struct buffer b, Lisp_Object val) at buffer.c:185> [see 480]
  | +-bset_save_length() <void bset_save_length (struct buffer b, Lisp_Object val) at buffer.c:330>
  | +-bset_auto_save_file_name() <void bset_auto_save_file_name (struct buffer b, Lisp_Object val) at buffer.c:180> [see 482]
  | +-bset_read_only()
  | +-bset_major_mode() <void bset_major_mode (struct buffer b, Lisp_Object val) at buffer.c:285> [see 502]
  | +-bset_mode_name() <void bset_mode_name (struct buffer b, Lisp_Object val) at buffer.c:305> [see 504]
  | +-bset_point_before_scroll()
  | +-bset_invisibility_spec() <void bset_invisibility_spec (struct buffer b, Lisp_Object val) at buffer.c:275> [see 513]
  | +-bset_display_count()
  | +-emacs_abort() <void emacs_abort (void) at sysdep.c:2129> (R) [see 28]
  | +-intern_c_string()
  | +-Fput()
  | +-Fget_buffer_create()
  | \-Fset_buffer()
  +-init_minibuf_once() <void init_minibuf_once (void) at minibuf.c:1898>
  | \-staticpro() <void staticpro (Lisp_Object *varaddress) at alloc.c:5333> [see 344]
  +-syms_of_xfaces() <void syms_of_xfaces (void) at xfaces.c:6395>
  | +-DEFSYM()
  | +-list1() <Lisp_Object list1 (Lisp_Object arg1) at alloc.c:2513>
  | | \-Fcons()
  | +-Fcons()
  | +-staticpro() <void staticpro (Lisp_Object *varaddress) at alloc.c:5333> [see 344]
  | +-defsubr() <void defsubr (struct Lisp_Subr sname) at lread.c:4065>
  | | +-intern_c_string()
  | | +-XSETPVECTYPE()
  | | +-XSETSUBR()
  | | \-set_symbol_function()
  | +-DEFVAR_LISP()
  | \-build_pure_c_string()
  +-syms_of_keymap() <void syms_of_keymap (void) at keymap.c:3683>
  | +-DEFSYM()
  | +-staticpro() <void staticpro (Lisp_Object *varaddress) at alloc.c:5333> [see 344]
  | +-Fput()
  | +-make_number()
  | +-Fmake_keymap()
  | +-Fset()
  | +-intern_c_string()
  | +-Ffset()
  | +-listn() <Lisp_Object listn (enum constype type, ptrdiff_t count, Lisp_Object arg, ...) at alloc.c:2551>
  | | +-eassert()
  | | +-alloca()
  | | +-va_start()
  | | +-va_arg()
  | | +-va_end()
  | | +-pure_cons() <Lisp_Object pure_cons (Lisp_Object car, Lisp_Object cdr) at alloc.c:5203> (R)
  | | | +-pure_alloc() <void *pure_alloc (size_t size, int type) at alloc.c:5030> [see 297]
  | | | +-XSETCONS()
  | | | +-XSETCAR()
  | | | +-purecopy() <Lisp_Object purecopy (Lisp_Object obj) at alloc.c:5259> (R)
  | | | | +-PURE_POINTER_P()
  | | | | +-XPNTR()
  | | | | +-INTEGERP()
  | | | | +-SUBRP()
  | | | | +-HASH_TABLE_P()
  | | | | +-Fgethash()
  | | | | +-NILP()
  | | | | +-CONSP()
  | | | | +-pure_cons() <Lisp_Object pure_cons (Lisp_Object car, Lisp_Object cdr) at alloc.c:5203> (recursive: see 624) [see 624]
  | | | | +-XCAR()
  | | | | +-XCDR()
  | | | | +-FLOATP()
  | | | | +-make_pure_float() <Lisp_Object make_pure_float (double num) at alloc.c:5217>
  | | | | | +-pure_alloc() <void *pure_alloc (size_t size, int type) at alloc.c:5030> [see 297]
  | | | | | +-XSETFLOAT()
  | | | | | \-XFLOAT_INIT() <void XFLOAT_INIT (Lisp_Object f, double n) at alloc.c:401>
  | | | | |   \-XFLOAT()
  | | | | +-XFLOAT_DATA()
  | | | | +-STRINGP()
  | | | | +-make_pure_string() <Lisp_Object make_pure_string (const char *data, ptrdiff_t nchars, ptrdiff_t nbytes, bool multibyte) at alloc.c:5162> [see 296]
  | | | | +-SSDATA()
  | | | | +-SCHARS()
  | | | | +-SBYTES()
  | | | | +-STRING_MULTIBYTE()
  | | | | +-COMPILEDP()
  | | | | +-VECTORP()
  | | | | +-ASIZE()
  | | | | +-XVECTOR()
  | | | | +-make_pure_vector() <Lisp_Object make_pure_vector (ptrdiff_t len) at alloc.c:5231> [see 310]
  | | | | +-purecopy() <Lisp_Object purecopy (Lisp_Object obj) at alloc.c:5259> (recursive: see 628) [see 628]
  | | | | +-AREF()
  | | | | +-XSETPVECTYPE()
  | | | | +-XSETCOMPILED()
  | | | | +-XSETVECTOR()
  | | | | +-SYMBOLP()
  | | | | +-XSYMBOL()
  | | | | +-build_pure_c_string()
  | | | | +-Fsignal()
  | | | | +-Fcons()
  | | | | +-Fformat()
  | | | | \-Fputhash()
  | | | \-XSETCDR()
  | | +-Fcons()
  | | \-emacs_abort() <void emacs_abort (void) at sysdep.c:2129> (R) [see 28]
  | +-pure_cons() <Lisp_Object pure_cons (Lisp_Object car, Lisp_Object cdr) at alloc.c:5203> (R) [see 624]
  | +-build_pure_c_string()
  | +-DEFVAR_LISP()
  | +-Fmake_sparse_keymap()
  | +-Fset_keymap_parent()
  | +-Fmake_vector()
  | \-defsubr() <void defsubr (struct Lisp_Subr sname) at lread.c:4065> [see 602]
  +-syms_of_keyboard() <void syms_of_keyboard (void) at keyboard.c:10955>
  | +-staticpro() <void staticpro (Lisp_Object *varaddress) at alloc.c:5333> [see 344]
  | +-build_pure_c_string()
  | +-DEFSYM()
  | +-Fset()
  | +-intern_c_string()
  | +-Fput()
  | +-list1() <Lisp_Object list1 (Lisp_Object arg1) at alloc.c:2513> [see 598]
  | +-Fmake_vector()
  | +-make_number()
  | +-ASET()
  | +-defsubr() <void defsubr (struct Lisp_Subr sname) at lread.c:4065> [see 602]
  | +-DEFVAR_LISP()
  | +-XSETINT()
  | +-DEFVAR_KBOARD()
  | +-DEFVAR_INT()
  | +-XSETFASTINT()
  | +-Ctl()
  | +-DEFVAR_BOOL()
  | +-...() <... at ccl.c:433>
  | +-Fmake_sparse_keymap()
  | +-intern()
  | +-list2() <Lisp_Object list2 (Lisp_Object arg1, Lisp_Object arg2) at alloc.c:2519>
  | | \-Fcons()
  | \-allocate_kboard() <KBOARD *allocate_kboard (Lisp_Object type) at keyboard.c:10806>
  |   +-xmalloc() <void *xmalloc (size_t size) at regex.c:213> [see 120]
  |   \-init_kboard() <void init_kboard (KBOARD *kb, Lisp_Object type) at keyboard.c:10774>
  |     +-kset_overriding_terminal_local_map() <void kset_overriding_terminal_local_map (struct kboard kb, Lisp_Object val) at keyboard.c:476>
  |     +-kset_last_command()
  |     +-kset_real_last_command() <void kset_real_last_command (struct kboard kb, Lisp_Object val) at keyboard.c:481>
  |     +-kset_keyboard_translate_table() <void kset_keyboard_translate_table (struct kboard kb, Lisp_Object val) at keyboard.c:456>
  |     +-kset_last_repeatable_command() <void kset_last_repeatable_command (struct kboard kb, Lisp_Object val) at keyboard.c:466>
  |     +-kset_prefix_arg()
  |     +-kset_last_prefix_arg() <void kset_last_prefix_arg (struct kboard kb, Lisp_Object val) at keyboard.c:461>
  |     +-kset_kbd_queue() <void kset_kbd_queue (struct kboard kb, Lisp_Object val) at keyboard.c:451>
  |     +-kset_echo_string() <void kset_echo_string (struct kboard kb, Lisp_Object val) at keyboard.c:446>
  |     +-kset_defining_kbd_macro()
  |     +-kset_last_kbd_macro()
  |     +-kset_system_key_alist()
  |     +-kset_system_key_syms() <void kset_system_key_syms (struct kboard kb, Lisp_Object val) at keyboard.c:486>
  |     +-kset_window_system()
  |     +-kset_input_decode_map()
  |     +-Fmake_sparse_keymap()
  |     +-kset_local_function_key_map() <void kset_local_function_key_map (struct kboard kb, Lisp_Object val) at keyboard.c:471>
  |     +-Fset_keymap_parent()
  |     +-KVAR()
  |     \-kset_default_minibuffer_frame()
  +-syms_of_data() <void syms_of_data (void) at data.c:3401>
  | +-DEFSYM()
  | +-pure_cons() <Lisp_Object pure_cons (Lisp_Object car, Lisp_Object cdr) at alloc.c:5203> (R) [see 624]
  | +-Fput()
  | +-build_pure_c_string()
  | +-PUT_ERROR()
  | +-Fcons()
  | +-staticpro() <void staticpro (Lisp_Object *varaddress) at alloc.c:5333> [see 344]
  | +-defsubr() <void defsubr (struct Lisp_Subr sname) at lread.c:4065> [see 602]
  | +-set_symbol_function()
  | +-XSYMBOL()
  | +-DEFVAR_LISP()
  | +-make_number()
  | \-intern_c_string()
  +-syms_of_fns() <void syms_of_fns (void) at fns.c:4858>
  | +-DEFSYM()
  | +-defsubr() <void defsubr (struct Lisp_Subr sname) at lread.c:4065> [see 602]
  | +-staticpro() <void staticpro (Lisp_Object *varaddress) at alloc.c:5333> [see 344]
  | +-Fset()
  | +-DEFVAR_LISP()
  | +-list1() <Lisp_Object list1 (Lisp_Object arg1) at alloc.c:2513> [see 598]
  | +-intern_c_string()
  | +-DEFVAR_BOOL()
  | +-hashfn_eq() <EMACS_UINT hashfn_eq (struct hash_table_test ht, Lisp_Object key) at fns.c:3536>
  | | +-XHASH()
  | | \-XTYPE()
  | +-cmpfn_eql() <bool cmpfn_eql (struct hash_table_test ht, Lisp_Object key1, Lisp_Object key2) at fns.c:3490>
  | | +-FLOATP()
  | | \-XFLOAT_DATA()
  | +-hashfn_eql() <EMACS_UINT hashfn_eql (struct hash_table_test ht, Lisp_Object key) at fns.c:3547>
  | | +-FLOATP()
  | | +-sxhash() <EMACS_UINT sxhash (Lisp_Object obj, int depth) at fns.c:4213> (R)
  | | | +-XTYPE()
  | | | +-XUINT()
  | | | +-XHASH()
  | | | +-SYMBOL_NAME()
  | | | +-sxhash_string() <EMACS_UINT sxhash_string (char const *ptr, ptrdiff_t len) at fns.c:4117>
  | | | | +-hash_string() <EMACS_UINT hash_string (char const *ptr, ptrdiff_t len) at fns.c:4097>
  | | | | | \-sxhash_combine()
  | | | | \-SXHASH_REDUCE()
  | | | +-SSDATA()
  | | | +-SBYTES()
  | | | +-VECTORP()
  | | | +-sxhash_vector() <EMACS_UINT sxhash_vector (Lisp_Object vec, int depth) at fns.c:4177> (R)
  | | | | +-ASIZE()
  | | | | +-min()
  | | | | +-sxhash() <EMACS_UINT sxhash (Lisp_Object obj, int depth) at fns.c:4213> (recursive: see 758) [see 758]
  | | | | +-AREF()
  | | | | +-sxhash_combine()
  | | | | \-SXHASH_REDUCE()
  | | | +-BOOL_VECTOR_P()
  | | | +-sxhash_bool_vector() <EMACS_UINT sxhash_bool_vector (Lisp_Object vec) at fns.c:4195>
  | | | | +-bool_vector_size()
  | | | | +-min()
  | | | | +-bool_vector_words()
  | | | | +-sxhash_combine()
  | | | | +-bool_vector_data()
  | | | | \-SXHASH_REDUCE()
  | | | +-sxhash_list() <EMACS_UINT sxhash_list (Lisp_Object list, int depth) at fns.c:4149> (R)
  | | | | +-CONSP()
  | | | | +-XCDR()
  | | | | +-sxhash() <EMACS_UINT sxhash (Lisp_Object obj, int depth) at fns.c:4213> (recursive: see 758) [see 758]
  | | | | +-XCAR()
  | | | | +-sxhash_combine()
  | | | | +-NILP()
  | | | | \-SXHASH_REDUCE()
  | | | +-sxhash_float() <EMACS_UINT sxhash_float (double val) at fns.c:4126>
  | | | | +-memset()
  | | | | +-sxhash_combine()
  | | | | \-SXHASH_REDUCE()
  | | | +-XFLOAT_DATA()
  | | | \-emacs_abort() <void emacs_abort (void) at sysdep.c:2129> (R) [see 28]
  | | +-XHASH()
  | | \-XTYPE()
  | +-cmpfn_equal() <bool cmpfn_equal (struct hash_table_test ht, Lisp_Object key1, Lisp_Object key2) at fns.c:3505>
  | | +-NILP()
  | | \-Fequal()
  | \-hashfn_equal() <EMACS_UINT hashfn_equal (struct hash_table_test ht, Lisp_Object key) at fns.c:3562>
  |   \-sxhash() <EMACS_UINT sxhash (Lisp_Object obj, int depth) at fns.c:4213> (R) [see 758]
  +-syms_of_fileio() <void syms_of_fileio (void) at fileio.c:5815>
  | +-DEFSYM()
  | +-Fset()
  | +-DEFVAR_LISP()
  | +-Fput()
  | +-Fpurecopy()
  | +-list2() <Lisp_Object list2 (Lisp_Object arg1, Lisp_Object arg2) at alloc.c:2519> [see 702]
  | +-build_pure_c_string()
  | +-list3() <Lisp_Object list3 (Lisp_Object arg1, Lisp_Object arg2, Lisp_Object arg3) at alloc.c:2526>
  | | \-Fcons()
  | +-staticpro() <void staticpro (Lisp_Object *varaddress) at alloc.c:5333> [see 344]
  | +-DEFVAR_BOOL()
  | +-intern_c_string()
  | \-defsubr() <void defsubr (struct Lisp_Subr sname) at lread.c:4065> [see 602]
  +-syms_of_alloc() <void syms_of_alloc (void) at alloc.c:6882>
  | +-DEFVAR_INT()
  | +-DEFVAR_LISP()
  | +-make_float() <Lisp_Object make_float (double float_value) at alloc.c:2351> (R)
  | | +-XSETFLOAT()
  | | +-lisp_align_malloc() <void *lisp_align_malloc (size_t nbytes, enum mem_type type) at alloc.c:1057> (R) [see 316]
  | | +-memset()
  | | +-XFLOAT_INIT() <void XFLOAT_INIT (Lisp_Object f, double n) at alloc.c:401> [see 644]
  | | +-eassert()
  | | +-FLOAT_MARKED_P()
  | | \-XFLOAT()
  | +-DEFVAR_BOOL()
  | +-DEFSYM()
  | +-listn() <Lisp_Object listn (enum constype type, ptrdiff_t count, Lisp_Object arg, ...) at alloc.c:2551> [see 618]
  | +-build_pure_c_string()
  | \-defsubr() <void defsubr (struct Lisp_Subr sname) at lread.c:4065> [see 602]
  +-init_print_once() <void init_print_once (void) at print.c:2193>
  | +-DEFSYM()
  | \-defsubr() <void defsubr (struct Lisp_Subr sname) at lread.c:4065> [see 602]
  +-syms_of_charset() <void syms_of_charset (void) at charset.c:2354>
  | +-DEFSYM()
  | +-staticpro() <void staticpro (Lisp_Object *varaddress) at alloc.c:5333> [see 344]
  | +-intern_c_string()
  | +-Fmake_hash_table()
  | +-defsubr() <void defsubr (struct Lisp_Subr sname) at lread.c:4065> [see 602]
  | +-DEFVAR_LISP()
  | +-DEFVAR_BOOL()
  | \-define_charset_internal() <int define_charset_internal (Lisp_Object name, int dimension, const char *code_space_chars, unsigned min_code, unsigned max_code, int iso_final, int iso_revision, int emacs_mule_id, bool ascii_compatible, bool supplementary, int code_offset) at charset.c:1254>
  |   +-make_number()
  |   +-make_uninit_vector()
  |   +-ASET()
  |   +-listn() <Lisp_Object listn (enum constype type, ptrdiff_t count, Lisp_Object arg, ...) at alloc.c:2551> [see 618]
  |   +-intern_c_string()
  |   +-Fdefine_charset_internal()
  |   +-XINT()
  |   \-CHARSET_SYMBOL_ID()
  +-syms_of_coding() <void syms_of_coding (void) at coding.c:10819>
  | +-staticpro() <void staticpro (Lisp_Object *varaddress) at alloc.c:5333> [see 344]
  | +-Fmake_hash_table()
  | +-build_pure_c_string()
  | +-DEFSYM()
  | +-Fset()
  | +-Fput()
  | +-make_number()
  | +-listn() <Lisp_Object listn (enum constype type, ptrdiff_t count, Lisp_Object arg, ...) at alloc.c:2551> [see 618]
  | +-Fmake_vector()
  | +-ASET()
  | +-intern_c_string()
  | +-defsubr() <void defsubr (struct Lisp_Subr sname) at lread.c:4065> [see 602]
  | +-DEFVAR_LISP()
  | +-Fcons()
  | +-AREF()
  | +-DEFVAR_BOOL()
  | +-Flist()
  | +-Fdefine_coding_system_internal()
  | \-setup_coding_system() <void setup_coding_system (Lisp_Object coding_system, struct coding_system coding) at coding.c:5748> (R)
  |   +-NILP()
  |   +-CHECK_CODING_SYSTEM_GET_ID()
  |   +-CODING_ID_ATTRS()
  |   +-CODING_ID_EOL_TYPE()
  |   +-VECTORP()
  |   +-EQ()
  |   +-CODING_ATTR_POST_READ()
  |   +-CODING_ATTR_PRE_WRITE()
  |   +-CODING_ATTR_FOR_UNIBYTE()
  |   +-CODING_ATTR_SAFE_CHARSETS()
  |   +-SCHARS()
  |   +-SDATA()
  |   +-XINT()
  |   +-CODING_ATTR_DEFAULT_CHAR()
  |   +-CODING_ATTR_TYPE()
  |   +-decode_coding_raw_text() <void decode_coding_raw_text (struct coding_system coding) at coding.c:5343>
  |   | +-EQ()
  |   | +-CODING_ID_EOL_TYPE()
  |   | \-record_conversion_result() <void record_conversion_result (struct coding_system coding, enum coding_result_code result) at coding.c:853>
  |   |   \-intern()
  |   +-encode_coding_raw_text() <bool encode_coding_raw_text (struct coding_system coding) at coding.c:5362>
  |   | +-ASSURE_DESTINATION()
  |   | +-ASCII_CHAR_P()
  |   | +-EMIT_ONE_ASCII_BYTE()
  |   | +-CHAR_BYTE8_P() <if ( ! CHAR_BYTE8_P (c1)) at regex.c:5485>
  |   | +-CHAR_TO_BYTE8()
  |   | +-EMIT_ONE_BYTE()
  |   | +-CHAR_STRING_ADVANCE()
  |   | \-record_conversion_result() <void record_conversion_result (struct coding_system coding, enum coding_result_code result) at coding.c:853> [see 894]
  |   +-encode_inhibit_flag() <int encode_inhibit_flag (Lisp_Object flag) at coding.c:658>
  |   | +-NILP()
  |   | \-EQ()
  |   +-AREF()
  |   +-CODING_ISO_INVOCATION()
  |   +-CODING_ISO_DESIGNATION()
  |   +-CODING_ISO_INITIAL()
  |   +-CODING_ISO_SINGLE_SHIFTING()
  |   +-CODING_ISO_BOL()
  |   +-detect_coding_iso_2022() <bool detect_coding_iso_2022 (struct coding_system coding, struct coding_detection_info detect_info) at coding.c:3006> (R)
  |   | +-CODING_ID_ATTRS()
  |   | +-CODING_ISO_FLAGS()
  |   | +-EQ()
  |   | +-CODING_ATTR_CHARSET_LIST()
  |   | +-setup_iso_safe_charsets() <void setup_iso_safe_charsets (Lisp_Object attrs) at coding.c:2938> (R)
  |   | | +-XINT()
  |   | | +-AREF()
  |   | | +-CODING_ATTR_CHARSET_LIST()
  |   | | +-EQ()
  |   | | +-ASET()
  |   | | +-STRINGP()
  |   | | +-CONSP()
  |   | | +-XCDR()
  |   | | +-XCAR()
  |   | | +-make_uninit_string() <Lisp_Object make_uninit_string (EMACS_INT length) at alloc.c:2235> (R)
  |   | | | +-make_uninit_multibyte_string() <Lisp_Object make_uninit_multibyte_string (EMACS_INT nchars, EMACS_INT nbytes) at alloc.c:2251> (R)
  |   | | | | +-emacs_abort() <void emacs_abort (void) at sysdep.c:2129> (R) [see 28]
  |   | | | | +-allocate_string() <struct Lisp_String allocate_string (void) at alloc.c:1643>
  |   | | | | +-allocate_string_data() <void allocate_string_data (struct Lisp_String s, EMACS_INT nchars, EMACS_INT nbytes) at alloc.c:1708> (R)
  |   | | | | \-XSETSTRING()
  |   | | | \-STRING_SET_UNIBYTE()
  |   | | +-memset()
  |   | | +-SDATA()
  |   | | +-CHARSET_FROM_ID()
  |   | | +-Fcdr()
  |   | | +-Fassq()
  |   | | +-NILP()
  |   | | \-SSET()
  |   | +-CODING_ATTR_SAFE_CHARSETS()
  |   | +-SCHARS()
  |   | +-SDATA()
  |   | +-ONE_MORE_BYTE()
  |   | +-SAFE_CHARSET_P()
  |   | +-VECTORP()
  |   | +-NILP()
  |   | \-AREF()
  |   +-decode_coding_iso_2022() <void decode_coding_iso_2022 (struct coding_system coding) at coding.c:3532> (R)
  |   | +-CODING_ISO_INVOKED_CHARSET()
  |   | +-CODING_ISO_CMP_STATUS()
  |   | +-CODING_ID_ATTRS()
  |   | +-EQ()
  |   | +-CODING_ID_EOL_TYPE()
  |   | +-setup_iso_safe_charsets() <void setup_iso_safe_charsets (Lisp_Object attrs) at coding.c:2938> (R) [see 919]
  |   | +-SDATA()
  |   | +-CODING_ATTR_SAFE_CHARSETS()
  |   | +-emacs_abort() <void emacs_abort (void) at sysdep.c:2129> (R) [see 28]
  |   | +-ONE_MORE_BYTE()
  |   | +-CODING_ISO_EXTSEGMENT_LEN()
  |   | +-ASCII_BYTE_P()
  |   | +-BYTE8_TO_CHAR()
  |   | +-CODING_ISO_EMBEDDED_UTF_8()
  |   | +-DECODE_COMPOSITION_RULE()
  |   | +-STORE_COMPOSITION_RULE()
  |   | +-CHARSET_ISO_CHARS_96()
  |   | +-CHARSET_FROM_ID()
  |   | +-CODING_ISO_FLAGS()
  |   | +-MAYBE_FINISH_COMPOSITION()
  |   | +-CODING_ISO_DESIGNATION()
  |   | +-CODING_ISO_INVOCATION()
  |   | +-DECODE_DESIGNATION()
  |   | +-ADD_CHARSET_DATA()
  |   | +-DECODE_COMPOSITION_START()
  |   | +-DECODE_COMPOSITION_END()
  |   | +-CHARSET_DIMENSION()
  |   | +-CODING_DECODE_CHAR()
  |   | \-STORE_COMPOSITION_CHAR()
  |   +-encode_coding_iso_2022() <bool encode_coding_iso_2022 (struct coding_system coding) at coding.c:4439> (R)
  |   | +-CODING_ISO_FLAGS()
  |   | +-CODING_ISO_BOL()
  |   | +-CODING_GET_INFO()
  |   | +-CODING_ID_EOL_TYPE()
  |   | +-VECTORP()
  |   | +-setup_iso_safe_charsets() <void setup_iso_safe_charsets (Lisp_Object attrs) at coding.c:2938> (R) [see 919]
  |   | +-CODING_ATTR_CHARSET_LIST()
  |   | +-SDATA()
  |   | +-CODING_ATTR_SAFE_CHARSETS()
  |   | +-NILP()
  |   | +-CODING_ATTR_ASCII_COMPAT()
  |   | +-ASSURE_DESTINATION()
  |   | +-encode_designation_at_bol() <ptrdiff_t encode_designation_at_bol (struct coding_system coding, int *charbuf, int *charbuf_end, unsigned char *dst) at coding.c:4386>
  |   | | +-CODING_ID_ATTRS()
  |   | | +-CODING_ATTR_CHARSET_LIST()
  |   | | +-EQ()
  |   | | +-char_charset() <struct charset char_charset (int c, Lisp_Object charset_list, unsigned int *code_return) at charset.c:1985>
  |   | | +-CHARSET_ID()
  |   | | +-CODING_ISO_REQUEST()
  |   | | +-CODING_ISO_DESIGNATION()
  |   | | +-ENCODE_DESIGNATION()
  |   | | \-CHARSET_FROM_ID()
  |   | +-coding_change_destination() <ptrdiff_t coding_change_destination (struct coding_system coding) at coding.c:1048>
  |   | | \-coding_set_destination() <void coding_set_destination (struct coding_system coding) at coding.c:1015>
  |   | |   +-BUFFERP()
  |   | |   +-BUF_BEG_ADDR()
  |   | |   +-XBUFFER()
  |   | |   \-BUF_GAP_END_ADDR()
  |   | +-memcpy()
  |   | +-Fmemq()
  |   | +-make_number()
  |   | +-emacs_abort() <void emacs_abort (void) at sysdep.c:2129> (R) [see 28]
  |   | +-EQ()
  |   | +-ENCODE_RESET_PLANE_AND_REGISTER()
  |   | +-CODING_ISO_DESIGNATION()
  |   | +-CODING_ISO_INITIAL()
  |   | +-EMIT_ONE_ASCII_BYTE()
  |   | +-ASCII_CHAR_P()
  |   | +-CHARSET_FROM_ID()
  |   | +-ENCODE_ISO_CHARACTER()
  |   | +-CHAR_BYTE8_P() <if ( ! CHAR_BYTE8_P (c1)) at regex.c:5485>
  |   | +-CHAR_TO_BYTE8()
  |   | +-EMIT_ONE_BYTE()
  |   | +-CODING_CHAR_CHARSET_P()
  |   | +-CODING_CHAR_CHARSET()
  |   | \-record_conversion_result() <void record_conversion_result (struct coding_system coding, enum coding_result_code result) at coding.c:853> [see 894]
  |   +-setup_iso_safe_charsets() <void setup_iso_safe_charsets (Lisp_Object attrs) at coding.c:2938> (R) [see 919]
  |   +-CODING_ISO_FLAGS()
  |   +-CODING_ISO_CMP_STATUS()
  |   +-CODING_ISO_EXTSEGMENT_LEN()
  |   +-CODING_ISO_EMBEDDED_UTF_8()
  |   +-detect_coding_charset() <bool detect_coding_charset (struct coding_system coding, struct coding_detection_info detect_info) at coding.c:5445>
  |   | +-CODING_ID_ATTRS()
  |   | +-AREF()
  |   | +-CODING_ID_NAME()
  |   | +-strncmp()
  |   | +-SSDATA()
  |   | +-SYMBOL_NAME()
  |   | +-NILP()
  |   | +-CODING_ATTR_ASCII_COMPAT()
  |   | +-ONE_MORE_BYTE()
  |   | +-VECTORP()
  |   | +-INTEGERP()
  |   | +-CHARSET_FROM_ID()
  |   | +-XFASTINT()
  |   | +-CHARSET_DIMENSION()
  |   | +-CONSP()
  |   | +-XCDR()
  |   | \-XCAR()
  |   +-decode_coding_charset() <void decode_coding_charset (struct coding_system coding) at coding.c:5548>
  |   | +-CODING_ID_ATTRS()
  |   | +-EQ()
  |   | +-CODING_ID_EOL_TYPE()
  |   | +-AREF()
  |   | +-ONE_MORE_BYTE()
  |   | +-INTEGERP()
  |   | +-CONSP()
  |   | +-CHARSET_FROM_ID()
  |   | +-XFASTINT()
  |   | +-CHARSET_DIMENSION()
  |   | +-CODING_DECODE_CHAR()
  |   | +-XCAR()
  |   | +-XCDR()
  |   | +-ADD_CHARSET_DATA()
  |   | +-ASCII_BYTE_P()
  |   | \-BYTE8_TO_CHAR()
  |   +-encode_coding_charset() <bool encode_coding_charset (struct coding_system coding) at coding.c:5676>
  |   | +-CODING_GET_INFO()
  |   | +-NILP()
  |   | +-CODING_ATTR_ASCII_COMPAT()
  |   | +-ASSURE_DESTINATION()
  |   | +-ASCII_CHAR_P()
  |   | +-EMIT_ONE_ASCII_BYTE()
  |   | +-CHAR_BYTE8_P() <if ( ! CHAR_BYTE8_P (c1)) at regex.c:5485>
  |   | +-CHAR_TO_BYTE8()
  |   | +-EMIT_ONE_BYTE()
  |   | +-CODING_CHAR_CHARSET()
  |   | +-CHARSET_DIMENSION()
  |   | +-EMIT_TWO_BYTES()
  |   | +-EMIT_THREE_BYTES()
  |   | +-EMIT_FOUR_BYTES()
  |   | \-record_conversion_result() <void record_conversion_result (struct coding_system coding, enum coding_result_code result) at coding.c:853> [see 894]
  |   +-CODING_UTF_8_BOM()
  |   +-CONSP()
  |   +-detect_coding_utf_8() <bool detect_coding_utf_8 (struct coding_system coding, struct coding_detection_info detect_info) at coding.c:1198>
  |   | +-ONE_MORE_BYTE()
  |   | +-UTF_8_1_OCTET_P()
  |   | +-UTF_8_EXTRA_OCTET_P()
  |   | +-UTF_8_2_OCTET_LEADING_P()
  |   | +-UTF_8_3_OCTET_LEADING_P()
  |   | +-UTF_8_4_OCTET_LEADING_P()
  |   | \-UTF_8_5_OCTET_LEADING_P()
  |   +-decode_coding_utf_8() <void decode_coding_utf_8 (struct coding_system coding) at coding.c:1311>
  |   | +-CODING_UTF_8_BOM()
  |   | +-EQ()
  |   | +-CODING_ID_EOL_TYPE()
  |   | +-ONE_MORE_BYTE()
  |   | +-UTF_8_3_OCTET_LEADING_P()
  |   | +-UTF_8_EXTRA_OCTET_P()
  |   | +-UTF_8_1_OCTET_P()
  |   | +-UTF_8_2_OCTET_LEADING_P()
  |   | +-UTF_8_4_OCTET_LEADING_P()
  |   | +-UTF_8_5_OCTET_LEADING_P()
  |   | +-ASCII_BYTE_P()
  |   | \-BYTE8_TO_CHAR()
  |   +-encode_coding_utf_8() <bool encode_coding_utf_8 (struct coding_system coding) at coding.c:1501>
  |   | +-CODING_UTF_8_BOM()
  |   | +-ASSURE_DESTINATION()
  |   | +-EMIT_THREE_BYTES()
  |   | +-CHAR_BYTE8_P() <if ( ! CHAR_BYTE8_P (c1)) at regex.c:5485>
  |   | +-CHAR_TO_BYTE8()
  |   | +-EMIT_ONE_BYTE()
  |   | +-CHAR_STRING_ADVANCE_NO_UNIFY()
  |   | \-record_conversion_result() <void record_conversion_result (struct coding_system coding, enum coding_result_code result) at coding.c:853> [see 894]
  |   +-CODING_UTF_16_BOM()
  |   +-CODING_UTF_16_ENDIAN()
  |   +-CODING_UTF_16_SURROGATE()
  |   +-detect_coding_utf_16() <bool detect_coding_utf_16 (struct coding_system coding, struct coding_detection_info detect_info) at coding.c:1574>
  |   | +-TWO_MORE_BYTES()
  |   | \-memset()
  |   +-decode_coding_utf_16() <void decode_coding_utf_16 (struct coding_system coding) at coding.c:1657>
  |   | +-CODING_UTF_16_BOM()
  |   | +-CODING_UTF_16_ENDIAN()
  |   | +-CODING_UTF_16_SURROGATE()
  |   | +-EQ()
  |   | +-CODING_ID_EOL_TYPE()
  |   | +-ONE_MORE_BYTE()
  |   | +-ASCII_BYTE_P()
  |   | +-BYTE8_TO_CHAR()
  |   | +-UTF_16_LOW_SURROGATE_P()
  |   | \-UTF_16_HIGH_SURROGATE_P()
  |   +-encode_coding_utf_16() <bool encode_coding_utf_16 (struct coding_system coding) at coding.c:1782>
  |   | +-CODING_UTF_16_BOM()
  |   | +-CODING_UTF_16_ENDIAN()
  |   | +-ASSURE_DESTINATION()
  |   | +-EMIT_TWO_BYTES()
  |   | +-EMIT_FOUR_BYTES()
  |   | \-record_conversion_result() <void record_conversion_result (struct coding_system coding, enum coding_result_code result) at coding.c:853> [see 894]
  |   +-detect_coding_ccl() <bool detect_coding_ccl (struct coding_system coding, struct coding_detection_info detect_info) at coding.c:5147>
  |   | +-CODING_CCL_VALIDS()
  |   | +-CODING_ID_ATTRS()
  |   | +-NILP()
  |   | +-CODING_ATTR_ASCII_COMPAT()
  |   | \-ONE_MORE_BYTE()
  |   +-decode_coding_ccl() <void decode_coding_ccl (struct coding_system coding) at coding.c:5187>
  |   | +-CODING_GET_INFO()
  |   | +-STRING_CHAR_ADVANCE()
  |   | +-ccl_driver() <void ccl_driver (struct ccl_program ccl, int *source, int *destination, int src_size, int dst_size, Lisp_Object charset_list) at ccl.c:874>
  |   | | +-NILP()
  |   | | +-GET_CCL_CODE()
  |   | | +-XINT()
  |   | | +-CCL_WRITE_CHAR()
  |   | | +-CCL_READ_CHAR()
  |   | | +-CCL_WRITE_STRING()
  |   | | +-ASIZE()
  |   | | +-AREF()
  |   | | +-VECTORP()
  |   | | +-XVECTOR()
  |   | | +-XFASTINT()
  |   | | +-GET_CCL_RANGE()
  |   | | +-SJIS_TO_JIS()
  |   | | +-JIS_TO_SJIS()
  |   | | +-CCL_ENCODE_CHAR()
  |   | | +-CCL_DECODE_CHAR()
  |   | | +-translate_char() <int translate_char (Lisp_Object table, int c) at character.c:218> (R)
  |   | | | +-CHAR_TABLE_P()
  |   | | | +-CHAR_TABLE_REF()
  |   | | | +-CHARACTERP()
  |   | | | +-XINT()
  |   | | | +-CONSP()
  |   | | | +-XCDR()
  |   | | | +-translate_char() <int translate_char (Lisp_Object table, int c) at character.c:218> (recursive: see 1166) [see 1166]
  |   | | | \-XCAR()
  |   | | +-GET_TRANSLATION_TABLE()
  |   | | +-GET_HASH_TABLE()
  |   | | +-hash_lookup() <ptrdiff_t hash_lookup (struct Lisp_Hash_Table h, Lisp_Object key, EMACS_UINT *hash) at fns.c:3795>
  |   | | | +-hashfn()
  |   | | | +-eassert()
  |   | | | +-ASIZE()
  |   | | | +-HASH_INDEX()
  |   | | | +-NILP()
  |   | | | +-XFASTINT()
  |   | | | +-EQ()
  |   | | | +-HASH_KEY()
  |   | | | +-cmpfn()
  |   | | | +-XUINT()
  |   | | | +-HASH_HASH()
  |   | | | \-HASH_NEXT()
  |   | | +-make_number()
  |   | | +-HASH_VALUE()
  |   | | +-IN_INT_RANGE()
  |   | | +-CHARACTERP()
  |   | | +-INTEGERP()
  |   | | +-CONSP()
  |   | | +-XCDR()
  |   | | +-EQ()
  |   | | +-XCAR()
  |   | | +-SYMBOLP()
  |   | | +-CCL_CALL_FOR_MAP_INSTRUCTION()
  |   | | +-PUSH_MAPPING_STACK()
  |   | | +-POP_MAPPING_STACK()
  |   | | +-TYPE_RANGED_INTEGERP()
  |   | | +-sprintf()
  |   | | \-memcpy()
  |   | +-coding_change_source() <ptrdiff_t coding_change_source (struct coding_system coding) at coding.c:1004>
  |   | | \-coding_set_source() <void coding_set_source (struct coding_system coding) at coding.c:977>
  |   | |   +-BUFFERP()
  |   | |   +-XBUFFER()
  |   | |   +-BUF_GAP_END_ADDR()
  |   | |   +-BUF_BYTE_ADDRESS()
  |   | |   +-STRINGP()
  |   | |   \-SDATA()
  |   | \-record_conversion_result() <void record_conversion_result (struct coding_system coding, enum coding_result_code result) at coding.c:853> [see 894]
  |   +-encode_coding_ccl() <bool encode_coding_ccl (struct coding_system coding) at coding.c:5266>
  |   | +-CODING_GET_INFO()
  |   | +-ccl_driver() <void ccl_driver (struct ccl_program ccl, int *source, int *destination, int src_size, int dst_size, Lisp_Object charset_list) at ccl.c:874> [see 1149]
  |   | +-coding_change_destination() <ptrdiff_t coding_change_destination (struct coding_system coding) at coding.c:1048> [see 1004]
  |   | +-ASSURE_DESTINATION()
  |   | +-EMIT_ONE_BYTE()
  |   | \-record_conversion_result() <void record_conversion_result (struct coding_system coding, enum coding_result_code result) at coding.c:853> [see 894]
  |   +-detect_coding_emacs_mule() <bool detect_coding_emacs_mule (struct coding_system coding, struct coding_detection_info detect_info) at coding.c:1919>
  |   | \-ONE_MORE_BYTE()
  |   +-decode_coding_emacs_mule() <void decode_coding_emacs_mule (struct coding_system coding) at coding.c:2383> (R)
  |   | +-EQ()
  |   | +-CODING_ID_EOL_TYPE()
  |   | +-emacs_abort() <void emacs_abort (void) at sysdep.c:2129> (R) [see 28]
  |   | +-ONE_MORE_BYTE()
  |   | +-EMACS_MULE_MAYBE_FINISH_COMPOSITION()
  |   | +-DECODE_EMACS_MULE_COMPOSITION_START()
  |   | +-emacs_mule_char() <int emacs_mule_char (struct coding_system coding, const unsigned char *src, int *nbytes, int *nchars, int *id, struct composition_status cmp_status) at coding.c:2008> (R)
  |   | | +-ONE_MORE_BYTE()
  |   | | +-ASCII_BYTE_P()
  |   | | +-emacs_abort() <void emacs_abort (void) at sysdep.c:2129> (R) [see 28]
  |   | | +-CODING_DECODE_CHAR()
  |   | | \-CHARSET_FROM_ID()
  |   | +-ADD_CHARSET_DATA()
  |   | +-EMACS_MULE_COMPOSITION_END()
  |   | +-DECODE_EMACS_MULE_COMPOSITION_RULE_20()
  |   | +-DECODE_EMACS_MULE_COMPOSITION_RULE_21()
  |   | +-ASCII_BYTE_P()
  |   | \-BYTE8_TO_CHAR()
  |   +-encode_coding_emacs_mule() <bool encode_coding_emacs_mule (struct coding_system coding) at coding.c:2643> (R)
  |   | +-CODING_GET_INFO()
  |   | +-EQ()
  |   | +-ASET()
  |   | +-ASSURE_DESTINATION()
  |   | +-NILP()
  |   | +-Fmemq()
  |   | +-make_number()
  |   | +-emacs_abort() <void emacs_abort (void) at sysdep.c:2129> (R) [see 28]
  |   | +-ASCII_CHAR_P()
  |   | +-EMIT_ONE_ASCII_BYTE()
  |   | +-CHAR_BYTE8_P() <if ( ! CHAR_BYTE8_P (c1)) at regex.c:5485>
  |   | +-CHAR_TO_BYTE8()
  |   | +-EMIT_ONE_BYTE()
  |   | +-CHARSET_FROM_ID()
  |   | +-CODING_CHAR_CHARSET_P()
  |   | +-ENCODE_CHAR()
  |   | +-CODING_CHAR_CHARSET()
  |   | +-CHARSET_DIMENSION()
  |   | +-CHARSET_EMACS_MULE_ID()
  |   | +-EMACS_MULE_LEADING_CODES()
  |   | \-record_conversion_result() <void record_conversion_result (struct coding_system coding, enum coding_result_code result) at coding.c:853> [see 894]
  |   +-CODING_ATTR_CHARSET_LIST()
  |   +-XCDR()
  |   +-XFASTINT()
  |   +-XCAR()
  |   +-make_uninit_string() <Lisp_Object make_uninit_string (EMACS_INT length) at alloc.c:2235> (R) [see 929]
  |   +-memset()
  |   +-SSET()
  |   +-detect_coding_sjis() <bool detect_coding_sjis (struct coding_system coding, struct coding_detection_info detect_info) at coding.c:4651>
  |   | +-CODING_GET_INFO()
  |   | +-XINT()
  |   | +-Flength()
  |   | \-ONE_MORE_BYTE()
  |   +-decode_coding_sjis() <void decode_coding_sjis (struct coding_system coding) at coding.c:4753>
  |   | +-EQ()
  |   | +-CODING_ID_EOL_TYPE()
  |   | +-CODING_GET_INFO()
  |   | +-CHARSET_FROM_ID()
  |   | +-XINT()
  |   | +-XCAR()
  |   | +-XCDR()
  |   | +-NILP()
  |   | +-ONE_MORE_BYTE()
  |   | +-SJIS_TO_JIS()
  |   | +-SJIS_TO_JIS2()
  |   | +-ADD_CHARSET_DATA()
  |   | +-CODING_DECODE_CHAR()
  |   | \-BYTE8_TO_CHAR()
  |   +-encode_coding_sjis() <bool encode_coding_sjis (struct coding_system coding) at coding.c:4974> (R)
  |   | +-CODING_GET_INFO()
  |   | +-XCDR()
  |   | +-CHARSET_FROM_ID()
  |   | +-XINT()
  |   | +-XCAR()
  |   | +-NILP()
  |   | +-CODING_ATTR_ASCII_COMPAT()
  |   | +-ASSURE_DESTINATION()
  |   | +-ASCII_CHAR_P()
  |   | +-EMIT_ONE_ASCII_BYTE()
  |   | +-CHAR_BYTE8_P() <if ( ! CHAR_BYTE8_P (c1)) at regex.c:5485>
  |   | +-CHAR_TO_BYTE8()
  |   | +-EMIT_ONE_BYTE()
  |   | +-CODING_CHAR_CHARSET()
  |   | +-CHARSET_INVALID_CODE()
  |   | +-emacs_abort() <void emacs_abort (void) at sysdep.c:2129> (R) [see 28]
  |   | +-JIS_TO_SJIS()
  |   | +-EMIT_TWO_BYTES()
  |   | +-JIS_TO_SJIS2()
  |   | \-record_conversion_result() <void record_conversion_result (struct coding_system coding, enum coding_result_code result) at coding.c:853> [see 894]
  |   +-detect_coding_big5() <bool detect_coding_big5 (struct coding_system coding, struct coding_detection_info detect_info) at coding.c:4707>
  |   | \-ONE_MORE_BYTE()
  |   +-decode_coding_big5() <void decode_coding_big5 (struct coding_system coding) at coding.c:4871>
  |   | +-EQ()
  |   | +-CODING_ID_EOL_TYPE()
  |   | +-CODING_GET_INFO()
  |   | +-CHARSET_FROM_ID()
  |   | +-XINT()
  |   | +-XCAR()
  |   | +-XCDR()
  |   | +-ONE_MORE_BYTE()
  |   | +-ADD_CHARSET_DATA()
  |   | +-CODING_DECODE_CHAR()
  |   | \-BYTE8_TO_CHAR()
  |   \-encode_coding_big5() <bool encode_coding_big5 (struct coding_system coding) at coding.c:5068> (R)
  |     +-CODING_GET_INFO()
  |     +-XCDR()
  |     +-CHARSET_FROM_ID()
  |     +-XINT()
  |     +-XCAR()
  |     +-NILP()
  |     +-CODING_ATTR_ASCII_COMPAT()
  |     +-ASSURE_DESTINATION()
  |     +-ASCII_CHAR_P()
  |     +-EMIT_ONE_ASCII_BYTE()
  |     +-CHAR_BYTE8_P() <if ( ! CHAR_BYTE8_P (c1)) at regex.c:5485>
  |     +-CHAR_TO_BYTE8()
  |     +-EMIT_ONE_BYTE()
  |     +-CODING_CHAR_CHARSET()
  |     +-CHARSET_INVALID_CODE()
  |     +-emacs_abort() <void emacs_abort (void) at sysdep.c:2129> (R) [see 28]
  |     +-EMIT_TWO_BYTES()
  |     \-record_conversion_result() <void record_conversion_result (struct coding_system coding, enum coding_result_code result) at coding.c:853> [see 894]
  +-init_window_once() <void init_window_once (void) at window.c:7222>
  | +-make_initial_frame() <struct frame make_initial_frame (void) at frame.c:538>
  | \-XSETFRAME()
  +-init_fringe_once()
  +-init_alloc() <void init_alloc (void) at alloc.c:6864>
  | \-make_float() <Lisp_Object make_float (double float_value) at alloc.c:2351> (R) [see 823]
  +-fixup_locale() <void fixup_locale (void) at emacs.c:2174>
  | \-setlocale() <char *setlocale (int cat, char const *locale) at emacs.c:337>
  +-init_eval() <void init_eval (void) at eval.c:238>
  | +-PUSH_HANDLER()
  | \-eassert()
  +-init_atimer() <void init_atimer (void) at atimer.c:405>
  | +-timer_create()
  | +-emacs_sigaction_init() <void emacs_sigaction_init (struct sigaction action, signal_handler_t handler) at sysdep.c:1502> [see 248]
  | +-handle_alarm_signal() <void handle_alarm_signal (int sig) at atimer.c:371>
  | \-sigaction()
  +-init_random() <void init_random (void) at sysdep.c:2028>
  | +-current_timespec()
  | +-getpid()
  | \-seed_random() <void seed_random (void *seed, ptrdiff_t seed_size) at sysdep.c:2004>
  |   +-srandom()
  |   +-srand48()
  |   \-srand()
  +-ns_alloc_autorelease_pool()
  +-strncmp()
  +-memmove()
  +-init_dosfns()
  +-init_environment()
  +-tzset()
  +-globals_of_gfilenotify()
  +-globals_of_w32()
  +-globals_of_w32notify()
  +-init_ntproc()
  +-syms_of_callproc() <void syms_of_callproc (void) at callproc.c:1687>
  | +-build_string()
  | +-staticpro() <void staticpro (Lisp_Object *varaddress) at alloc.c:5333> [see 344]
  | +-make_number()
  | +-DEFVAR_LISP()
  | \-defsubr() <void defsubr (struct Lisp_Subr sname) at lread.c:4065> [see 602]
  +-set_initial_environment() <void set_initial_environment (void) at callproc.c:1675>
  | +-Fcons()
  | +-build_string()
  | \-Fcopy_sequence()
  +-init_buffer() <void init_buffer (void) at buffer.c:5340>
  | +-FOR_EACH_BUFFER()
  | +-enlarge_buffer_text() <void enlarge_buffer_text (struct buffer b, ptrdiff_t delta) at buffer.c:5100> (R)
  | | +-BUF_Z_BYTE()
  | | +-BUF_BEG_BYTE()
  | | +-BUF_GAP_SIZE()
  | | +-block_input()
  | | +-mmap_realloc() <void *mmap_realloc (void **var, size_t nbytes) at buffer.c:4992> (R)
  | | | +-mmap_init() <void mmap_init (void) at buffer.c:4760> (R)
  | | | | +-emacs_open() <int emacs_open (const char *file, int oflags, int mode) at sysdep.c:2142> [see 198]
  | | | | +-fatal() <void fatal (const char *str, ...) at term.c:4460> [see 130]
  | | | | +-emacs_strerror() <char *emacs_strerror (int error_number) at coding.c:11375> (R)
  | | | | | +-synchronize_system_messages_locale() <void synchronize_system_messages_locale (void) at emacs.c:2206>
  | | | | | | \-synchronize_locale() <void synchronize_locale (int category, Lisp_Object *plocale, Lisp_Object desired_locale) at emacs.c:2184>
  | | | | | +-strerror()
  | | | | | +-NILP()
  | | | | | +-code_convert_string_norecord() <Lisp_Object code_convert_string_norecord (Lisp_Object string, Lisp_Object coding_system, bool encodep) at coding.c:9508> (R)
  | | | | | | \-code_convert_string() <Lisp_Object code_convert_string (Lisp_Object string, Lisp_Object coding_system, Lisp_Object dst_object, bool encodep, bool nocopy, bool norecord) at coding.c:9450> (R)
  | | | | | +-build_string()
  | | | | | \-SSDATA()
  | | | | \-getpagesize()
  | | | +-mmap_alloc() <void *mmap_alloc (void **var, size_t nbytes) at buffer.c:4933> (R)
  | | | | +-mmap_init() <void mmap_init (void) at buffer.c:4760> (R) [see 1397]
  | | | | +-ROUND()
  | | | | +-mmap()
  | | | | +-fprintf()
  | | | | +-emacs_strerror() <char *emacs_strerror (int error_number) at coding.c:11375> (R) [see 1400]
  | | | | \-MMAP_USER_AREA()
  | | | +-mmap_free() <void mmap_free (void **var) at buffer.c:4974> (R)
  | | | | +-mmap_init() <void mmap_init (void) at buffer.c:4760> (R) [see 1397]
  | | | | +-mmap_free_1() <void mmap_free_1 (struct mmap_region r) at buffer.c:4819> (R)
  | | | | | +-munmap()
  | | | | | +-fprintf()
  | | | | | \-emacs_strerror() <char *emacs_strerror (int error_number) at coding.c:11375> (R) [see 1400]
  | | | | \-MMAP_REGION()
  | | | +-MMAP_REGION()
  | | | +-mmap_enlarge() <bool mmap_enlarge (struct mmap_region r, int npages) at buffer.c:4837> (R)
  | | | | +-munmap()
  | | | | +-fprintf()
  | | | | +-emacs_strerror() <char *emacs_strerror (int error_number) at coding.c:11375> (R) [see 1400]
  | | | | +-MMAP_ALLOCATED_P()
  | | | | \-mmap()
  | | | +-ROUND()
  | | | +-memcpy()
  | | | \-mmap_free_1() <void mmap_free_1 (struct mmap_region r) at buffer.c:4819> (R) [see 1419]
  | | +-r_re_alloc()
  | | +-xrealloc() <void *xrealloc (void *block, size_t size) at regex.c:225>
  | | | +-malloc()
  | | | +-realloc()
  | | | +-write()
  | | | \-exit()
  | | +-unblock_input() <void unblock_input (void) at keyboard.c:7137> (R)
  | | | \-unblock_input_to() <void unblock_input_to (int level) at keyboard.c:7114> (R) [see 32]
  | | +-memory_full() <void memory_full (size_t nbytes) at alloc.c:3717> (R) [see 5]
  | | \-BUF_BEG_ADDR()
  | +-Fset_buffer()
  | +-Fget_buffer_create()
  | +-build_string()
  | +-NILP()
  | +-BVAR()
  | +-Fset_buffer_multibyte()
  | +-get_current_dir_name() <char *get_current_dir_name (void) at sysdep.c:132> [see 157]
  | +-fatal() <void fatal (const char *str, ...) at term.c:4460> [see 130]
  | +-strerror()
  | +-strlen()
  | +-IS_DIRECTORY_SEP()
  | +-realloc()
  | +-bset_directory()
  | +-make_unibyte_string() <Lisp_Object make_unibyte_string (const char *contents, ptrdiff_t length) at alloc.c:2165> (R)
  | | +-make_uninit_string() <Lisp_Object make_uninit_string (EMACS_INT length) at alloc.c:2235> (R) [see 929]
  | | +-memcpy()
  | | \-SDATA()
  | +-Ffind_file_name_handler()
  | +-strcmp()
  | +-SSDATA()
  | +-concat2() <Lisp_Object concat2 (Lisp_Object s1, Lisp_Object s2) at fns.c:380> (R)
  | | \-concat() <Lisp_Object concat (ptrdiff_t nargs, Lisp_Object *args, enum Lisp_Type target_type, bool last_special) at fns.c:469> (R)
  | |   +-CONSP()
  | |   +-NILP()
  | |   +-VECTORP()
  | |   +-STRINGP()
  | |   +-COMPILEDP()
  | |   +-BOOL_VECTOR_P()
  | |   +-wrong_type_argument() <Lisp_Object wrong_type_argument (register Lisp_Object predicate, register Lisp_Object value) at data.c:196> (R)
  | |   | \-xsignal2() <void xsignal2 (Lisp_Object error_symbol, Lisp_Object arg1, Lisp_Object arg2) at eval.c:1600> (R)
  | |   |   +-xsignal() <void xsignal (Lisp_Object error_symbol, Lisp_Object data) at eval.c:1579> (R) [see 26]
  | |   |   \-list2() <Lisp_Object list2 (Lisp_Object arg1, Lisp_Object arg2) at alloc.c:2519> [see 702]
  | |   +-XFASTINT()
  | |   +-Flength()
  | |   +-AREF()
  | |   +-CHECK_CHARACTER()
  | |   +-CHAR_BYTES()
  | |   +-string_overflow() <void string_overflow (void) at alloc.c:2028> (R) [see 108]
  | |   +-ASCII_CHAR_P()
  | |   +-CHAR_BYTE8_P() <if ( ! CHAR_BYTE8_P (c1)) at regex.c:5485>
  | |   +-bool_vector_size()
  | |   +-Faref()
  | |   +-make_number()
  | |   +-XCDR()
  | |   +-XCAR()
  | |   +-STRING_MULTIBYTE()
  | |   +-SBYTES()
  | |   +-count_size_as_multibyte() <ptrdiff_t count_size_as_multibyte (const unsigned char *str, ptrdiff_t len) at character.c:683> (R)
  | |   | +-INT_ADD_OVERFLOW()
  | |   | \-string_overflow() <void string_overflow (void) at alloc.c:2028> (R) [see 108]
  | |   +-SDATA()
  | |   +-SCHARS()
  | |   +-memory_full() <void memory_full (size_t nbytes) at alloc.c:3717> (R) [see 5]
  | |   +-Fmake_list()
  | |   +-Fmake_vector()
  | |   +-make_uninit_multibyte_string() <Lisp_Object make_uninit_multibyte_string (EMACS_INT nchars, EMACS_INT nbytes) at alloc.c:2251> (R) [see 930]
  | |   +-make_uninit_string() <Lisp_Object make_uninit_string (EMACS_INT length) at alloc.c:2235> (R) [see 929]
  | |   +-EQ()
  | |   +-SAFE_NALLOCA()
  | |   +-XINT()
  | |   +-memcpy()
  | |   +-string_intervals()
  | |   +-copy_text() <ptrdiff_t copy_text (const unsigned char *from_addr, unsigned char *to_addr, ptrdiff_t nbytes, bool from_multibyte, bool to_multibyte) at insdel.c:489>
  | |   | +-memcpy()
  | |   | +-STRING_CHAR_AND_LENGTH()
  | |   | +-ASCII_CHAR_P()
  | |   | +-BYTE8_TO_CHAR()
  | |   | \-CHAR_STRING()
  | |   +-FETCH_STRING_CHAR_ADVANCE_NO_CHECK()
  | |   +-SREF()
  | |   +-BYTE8_TO_CHAR()
  | |   +-XSETFASTINT()
  | |   +-bool_vector_ref()
  | |   +-XSETCAR()
  | |   +-ASET()
  | |   +-CHAR_STRING()
  | |   +-SSET()
  | |   +-XSETCDR()
  | |   +-text_property_list() <Lisp_Object text_property_list (Lisp_Object object, Lisp_Object start, Lisp_Object end, Lisp_Object prop) at textprop.c:2003> (R)
  | |   | +-validate_interval_range() <INTERVAL validate_interval_range (Lisp_Object object, Lisp_Object *begin, Lisp_Object *end, bool force) at textprop.c:153> (R)
  | |   | | +-CHECK_STRING_OR_BUFFER() <void CHECK_STRING_OR_BUFFER (Lisp_Object x) at textprop.c:121>
  | |   | | | +-CHECK_TYPE()
  | |   | | | +-STRINGP()
  | |   | | | \-BUFFERP()
  | |   | | +-CHECK_NUMBER_COERCE_MARKER()
  | |   | | +-EQ()
  | |   | | +-XINT()
  | |   | | +-BUFFERP()
  | |   | | +-XBUFFER()
  | |   | | +-BUF_BEGV()
  | |   | | +-BUF_ZV()
  | |   | | +-args_out_of_range() <void args_out_of_range (Lisp_Object a1, Lisp_Object a2) at data.c:215> (R)
  | |   | | | \-xsignal2() <void xsignal2 (Lisp_Object error_symbol, Lisp_Object arg1, Lisp_Object arg2) at eval.c:1600> (R) [see 1473]
  | |   | | +-buffer_intervals()
  | |   | | +-SCHARS()
  | |   | | +-XSETFASTINT()
  | |   | | +-XFASTINT()
  | |   | | +-string_intervals()
  | |   | | +-create_root_interval() <INTERVAL create_root_interval (Lisp_Object parent) at intervals.c:90> (R)
  | |   | | | +-CHECK_IMPURE()
  | |   | | | +-make_interval() <INTERVAL make_interval (void) at alloc.c:1244> (R)
  | |   | | | +-BUFFERP()
  | |   | | | +-BUF_Z()
  | |   | | | +-XBUFFER()
  | |   | | | +-BUF_BEG()
  | |   | | | +-eassert()
  | |   | | | +-TOTAL_LENGTH()
  | |   | | | +-set_buffer_intervals()
  | |   | | | +-STRINGP()
  | |   | | | +-SCHARS()
  | |   | | | +-set_string_intervals()
  | |   | | | +-LENGTH() <LENGTH at ccl.c:219>
  | |   | | | \-set_interval_object()
  | |   | | \-find_interval() <INTERVAL find_interval (register INTERVAL tree, register ptrdiff_t position) at intervals.c:656>
  | |   | |   +-INTERVAL_HAS_OBJECT()
  | |   | |   +-GET_INTERVAL_OBJECT()
  | |   | |   +-BUFFERP()
  | |   | |   +-BUF_BEG()
  | |   | |   +-XBUFFER()
  | |   | |   +-eassert()
  | |   | |   +-TOTAL_LENGTH()
  | |   | |   +-balance_possible_root_interval() <INTERVAL balance_possible_root_interval (INTERVAL interval) at intervals.c:472>
  | |   | |   +-LEFT_TOTAL_LENGTH()
  | |   | |   +-NULL_RIGHT_CHILD()
  | |   | |   \-RIGHT_TOTAL_LENGTH()
  | |   | +-XINT()
  | |   | +-LENGTH() <LENGTH at ccl.c:219>
  | |   | +-NILP()
  | |   | +-CONSP()
  | |   | +-Fcdr()
  | |   | +-XCDR()
  | |   | +-EQ()
  | |   | +-XCAR()
  | |   | +-list2() <Lisp_Object list2 (Lisp_Object arg1, Lisp_Object arg2) at alloc.c:2519> [see 702]
  | |   | +-Fcar()
  | |   | +-Fcons()
  | |   | +-list3() <Lisp_Object list3 (Lisp_Object arg1, Lisp_Object arg2, Lisp_Object arg3) at alloc.c:2526> [see 814]
  | |   | +-make_number()
  | |   | \-next_interval() <INTERVAL next_interval (register INTERVAL interval) at intervals.c:709>
  | |   |   +-LENGTH() <LENGTH at ccl.c:219>
  | |   |   +-NULL_RIGHT_CHILD()
  | |   |   +-NULL_LEFT_CHILD()
  | |   |   +-NULL_PARENT()
  | |   |   +-AM_LEFT_CHILD()
  | |   |   \-INTERVAL_PARENT()
  | |   +-make_composition_value_copy() <void make_composition_value_copy (Lisp_Object list) at composite.c:603>
  | |   | +-CONSP()
  | |   | +-XCDR()
  | |   | +-XCAR()
  | |   | +-EQ()
  | |   | +-XSETCAR()
  | |   | \-Fcons()
  | |   +-add_text_properties_from_list() <void add_text_properties_from_list (Lisp_Object object, Lisp_Object list, Lisp_Object delta) at textprop.c:2058>
  | |   | +-GCPRO2()
  | |   | +-CONSP()
  | |   | +-XCDR()
  | |   | +-XCAR()
  | |   | +-make_number()
  | |   | +-XINT()
  | |   | \-Fadd_text_properties()
  | |   \-SAFE_FREE()
  | +-get_minibuffer() <Lisp_Object get_minibuffer (EMACS_INT depth) at minibuf.c:764>
  | | +-XSETFASTINT()
  | | +-Fnthcdr()
  | | +-NILP()
  | | +-list1() <Lisp_Object list1 (Lisp_Object arg1) at alloc.c:2513> [see 598]
  | | +-nconc2() <Lisp_Object nconc2 (Lisp_Object s1, Lisp_Object s2) at fns.c:2214>
  | | | \-Fnconc()
  | | +-Fcar()
  | | +-BUFFER_LIVE_P()
  | | +-XBUFFER()
  | | +-Fget_buffer_create()
  | | +-make_formatted_string() <Lisp_Object make_formatted_string (char *buf, const char *format, ...) at alloc.c:2273> (R)
  | | | +-va_start()
  | | | +-vsprintf()
  | | | +-va_end()
  | | | \-make_string() <Lisp_Object make_string (const char *contents, ptrdiff_t nbytes) at alloc.c:2145> (R) [see 89]
  | | +-Fbuffer_enable_undo()
  | | +-XSETCAR()
  | | +-SPECPDL_INDEX()
  | | +-delete_all_overlays() <void delete_all_overlays (struct buffer b) at buffer.c:897>
  | | | +-drop_overlay() <void drop_overlay (struct buffer b, struct Lisp_Overlay ov) at buffer.c:884>
  | | | | +-eassert()
  | | | | +-XBUFFER()
  | | | | +-Fmarker_buffer()
  | | | | +-modify_overlay() <void modify_overlay (struct buffer buf, ptrdiff_t start, ptrdiff_t end) at buffer.c:3933>
  | | | | | +-BUF_COMPUTE_UNCHANGED()
  | | | | | +-bset_redisplay() <void bset_redisplay (struct buffer b) at xdisp.c:653> (R)
  | | | | | | +-buffer_window_count()
  | | | | | | +-XBUFFER()
  | | | | | | +-XWINDOW()
  | | | | | | +-redisplay_other_windows() <void redisplay_other_windows (void) at xdisp.c:630>
  | | | | | | \-redisplay() <void redisplay (void) at xdisp.c:13227> (R)
  | | | | | \-BUF_OVERLAY_MODIFF()
  | | | | +-marker_position() <ptrdiff_t marker_position (Lisp_Object marker) at marker.c:645> (R)
  | | | | | +-XMARKER()
  | | | | | +-error() <void error (const char *m, ...) at eval.c:1782> (R) [see 85]
  | | | | | +-eassert()
  | | | | | +-BUF_BEG()
  | | | | | \-BUF_Z()
  | | | | +-unchain_marker() <void unchain_marker (register struct Lisp_Marker *marker) at marker.c:605> (R)
  | | | | | +-eassert()
  | | | | | +-BUFFER_LIVE_P()
  | | | | | +-BUF_MARKERS()
  | | | | | \-emacs_abort() <void emacs_abort (void) at sysdep.c:2129> (R) [see 28]
  | | | | \-XMARKER()
  | | | +-set_buffer_overlays_before() <void set_buffer_overlays_before (struct buffer b, struct Lisp_Overlay o) at buffer.c:650>
  | | | \-set_buffer_overlays_after() <void set_buffer_overlays_after (struct buffer b, struct Lisp_Overlay o) at buffer.c:656>
  | | +-reset_buffer() <void reset_buffer (register struct buffer *b) at buffer.c:929> [see 473]
  | | +-record_unwind_current_buffer()
  | | +-Fset_buffer()
  | | +-Ffboundp()
  | | +-intern()
  | | +-call0() <Lisp_Object call0 (Lisp_Object fn) at eval.c:2590>
  | | | +-GCPRO1()
  | | | +-RETURN_UNGCPRO()
  | | | \-Ffuncall()
  | | +-Fkill_all_local_variables()
  | | \-unbind_to() <Lisp_Object unbind_to (ptrdiff_t count, Lisp_Object value) at eval.c:3281> (R)
  | |   +-GCPRO2()
  | |   +-func()
  | |   +-XSYMBOL()
  | |   +-specpdl_symbol() <Lisp_Object specpdl_symbol (union specbinding pdl) at eval.c:117>
  | |   | \-eassert()
  | |   +-SET_SYMBOL_VAL()
  | |   +-specpdl_old_value() <Lisp_Object specpdl_old_value (union specbinding pdl) at eval.c:124>
  | |   | \-eassert()
  | |   +-Fset_default()
  | |   +-specpdl_where() <Lisp_Object specpdl_where (union specbinding pdl) at eval.c:138>
  | |   | \-eassert()
  | |   +-eassert()
  | |   +-BUFFERP()
  | |   +-NILP()
  | |   +-Flocal_variable_p()
  | |   \-set_internal() <void set_internal (Lisp_Object symbol, Lisp_Object newval, Lisp_Object where, bool bindflag) at data.c:1187> (R)
  | |     +-EQ()
  | |     +-CHECK_SYMBOL()
  | |     +-SYMBOL_CONSTANT_P()
  | |     +-NILP()
  | |     +-Fkeywordp()
  | |     +-Fsymbol_value()
  | |     +-xsignal1() <void xsignal1 (Lisp_Object error_symbol, Lisp_Object arg) at eval.c:1594> (R) [see 91]
  | |     +-XSYMBOL()
  | |     +-indirect_variable() <struct Lisp_Symbol indirect_variable (struct Lisp_Symbol symbol) at data.c:880>
  | |     +-SET_SYMBOL_VAL()
  | |     +-SYMBOL_BLV()
  | |     +-XSETBUFFER()
  | |     +-set_blv_value() <void set_blv_value (struct Lisp_Buffer_Local_Value blv, Lisp_Object val) at data.c:160>
  | |     | \-XSETCDR()
  | |     +-do_symval_forwarding() <Lisp_Object do_symval_forwarding (register union Lisp_Fwd *valcontents) at data.c:932> (R)
  | |     | +-XFWDTYPE()
  | |     | +-XSETINT()
  | |     | +-XINTFWD() <struct Lisp_Intfwd XINTFWD (union Lisp_Fwd a) at data.c:128>
  | |     | +-XBOOLFWD() <struct Lisp_Boolfwd XBOOLFWD (union Lisp_Fwd a) at data.c:116>
  | |     | +-XOBJFWD() <struct Lisp_Objfwd XOBJFWD (union Lisp_Fwd a) at data.c:134>
  | |     | +-per_buffer_value()
  | |     | +-XBUFFER_OBJFWD()
  | |     | +-XKBOARD_OBJFWD() <struct Lisp_Kboard_Objfwd XKBOARD_OBJFWD (union Lisp_Fwd a) at data.c:122>
  | |     | +-FRAME_KBOARD()
  | |     | +-SELECTED_FRAME()
  | |     | \-emacs_abort() <void emacs_abort (void) at sysdep.c:2129> (R) [see 28]
  | |     +-XSETSYMBOL()
  | |     +-assq_no_quit() <Lisp_Object assq_no_quit (Lisp_Object key, Lisp_Object list) at fns.c:1411>
  | |     | +-CONSP()
  | |     | +-XCAR()
  | |     | +-EQ()
  | |     | +-XCDR()
  | |     | \-CAR_SAFE()
  | |     +-XFRAME()
  | |     +-BVAR()
  | |     +-XBUFFER()
  | |     +-set_blv_where() <void set_blv_where (struct Lisp_Buffer_Local_Value blv, Lisp_Object val) at data.c:166>
  | |     +-let_shadows_buffer_binding_p() <bool let_shadows_buffer_binding_p (struct Lisp_Symbol symbol) at eval.c:3081>
  | |     | +-Fcurrent_buffer()
  | |     | +-XSYMBOL()
  | |     | +-specpdl_symbol() <Lisp_Object specpdl_symbol (union specbinding pdl) at eval.c:117> [see 1666]
  | |     | +-eassert()
  | |     | +-EQ()
  | |     | \-specpdl_where() <Lisp_Object specpdl_where (union specbinding pdl) at eval.c:138> [see 1672]
  | |     +-eassert()
  | |     +-Fcons()
  | |     +-XCDR()
  | |     +-bset_local_var_alist()
  | |     +-set_blv_valcell() <void set_blv_valcell (struct Lisp_Buffer_Local_Value blv, Lisp_Object val) at data.c:178>
  | |     +-store_symval_forwarding() <void store_symval_forwarding (union Lisp_Fwd valcontents, register Lisp_Object newval, struct buffer buf) at data.c:978> (R)
  | |     | +-XFWDTYPE()
  | |     | +-CHECK_NUMBER()
  | |     | +-XINTFWD() <struct Lisp_Intfwd XINTFWD (union Lisp_Fwd a) at data.c:128>
  | |     | +-XINT()
  | |     | +-XBOOLFWD() <struct Lisp_Boolfwd XBOOLFWD (union Lisp_Fwd a) at data.c:116>
  | |     | +-NILP()
  | |     | +-XOBJFWD() <struct Lisp_Objfwd XOBJFWD (union Lisp_Fwd a) at data.c:134>
  | |     | +-PER_BUFFER_IDX()
  | |     | +-FOR_EACH_LIVE_BUFFER()
  | |     | +-XBUFFER()
  | |     | +-PER_BUFFER_VALUE_P()
  | |     | +-set_per_buffer_value()
  | |     | +-XBUFFER_OBJFWD()
  | |     | +-call1() <Lisp_Object call1 (Lisp_Object fn, Lisp_Object arg1) at eval.c:2601>
  | |     | | +-GCPRO1()
  | |     | | +-RETURN_UNGCPRO()
  | |     | | \-Ffuncall()
  | |     | +-wrong_type_argument() <Lisp_Object wrong_type_argument (register Lisp_Object predicate, register Lisp_Object value) at data.c:196> (R) [see 1472]
  | |     | +-FRAME_KBOARD()
  | |     | +-SELECTED_FRAME()
  | |     | +-XKBOARD_OBJFWD() <struct Lisp_Kboard_Objfwd XKBOARD_OBJFWD (union Lisp_Fwd a) at data.c:122>
  | |     | \-emacs_abort() <void emacs_abort (void) at sysdep.c:2129> (R) [see 28]
  | |     +-BUFFERP()
  | |     +-SYMBOL_FWD()
  | |     +-BUFFER_OBJFWDP()
  | |     +-XBUFFER_OBJFWD()
  | |     +-PER_BUFFER_IDX()
  | |     +-SET_PER_BUFFER_VALUE_P()
  | |     \-emacs_abort() <void emacs_abort (void) at sysdep.c:2129> (R) [see 28]
  | +-XBUFFER()
  | \-free()
  +-init_callproc_1() <void init_callproc_1 (void) at callproc.c:1534>
  | +-ns_etc_directory()
  | +-ns_exec_path()
  | +-decode_env_path() <Lisp_Object decode_env_path (const char *evarname, const char *defalt, bool empty) at emacs.c:2217>
  | | +-build_string()
  | | +-strlen()
  | | +-egetenv() <char *egetenv (const char *var) at callproc.c:1519>
  | | | +-getenv_internal() <bool getenv_internal (const char *var, ptrdiff_t varlen, char **value, ptrdiff_t *valuelen, Lisp_Object frame) at callproc.c:1457>
  | | | | +-getenv_internal_1() <bool getenv_internal_1 (const char *var, ptrdiff_t varlen, char **value, ptrdiff_t *valuelen, Lisp_Object env) at callproc.c:1422>
  | | | | | +-CONSP()
  | | | | | +-XCDR()
  | | | | | +-XCAR()
  | | | | | +-STRINGP()
  | | | | | +-SBYTES()
  | | | | | +-strnicmp()
  | | | | | +-SDATA()
  | | | | | +-memcmp()
  | | | | | +-SREF()
  | | | | | \-SSDATA()
  | | | | +-strcmp()
  | | | | +-Fframe_parameter()
  | | | | +-NILP()
  | | | | +-STRINGP()
  | | | | +-SSDATA()
  | | | | \-SBYTES()
  | | | \-strlen()
  | | +-filename_from_ansi()
  | | +-getenv()
  | | +-alloca()
  | | +-strcpy()
  | | +-dostounix_filename()
  | | +-strchr()
  | | +-make_unibyte_string() <Lisp_Object make_unibyte_string (const char *contents, ptrdiff_t length) at alloc.c:2165> (R) [see 1457]
  | | +-NILP()
  | | +-strncmp()
  | | +-Fexpand_file_name()
  | | +-Fsubstring()
  | | +-make_number()
  | | +-build_unibyte_string()
  | | +-Ffind_file_name_handler()
  | | +-SYMBOLP()
  | | +-Fget()
  | | +-intern()
  | | +-concat2() <Lisp_Object concat2 (Lisp_Object s1, Lisp_Object s2) at fns.c:380> (R) [see 1464]
  | | +-Fcons()
  | | \-Fnreverse()
  | +-Ffile_name_as_directory()
  | +-Fcar()
  | \-nconc2() <Lisp_Object nconc2 (Lisp_Object s1, Lisp_Object s2) at fns.c:2214> [see 1610]
  +-init_cmdargs() <void init_cmdargs (int argc, char **argv, int skip_args, char *original_pwd) at emacs.c:385>
  | +-SPECPDL_INDEX()
  | +-filename_from_ansi()
  | +-build_unibyte_string()
  | +-Ffind_file_name_handler()
  | +-NILP()
  | +-concat2() <Lisp_Object concat2 (Lisp_Object s1, Lisp_Object s2) at fns.c:380> (R) [see 1464]
  | +-build_string()
  | +-Ffile_name_nondirectory()
  | +-Ffile_name_directory()
  | +-openp() <int openp (Lisp_Object path, Lisp_Object str, Lisp_Object suffixes, Lisp_Object *storeptr, Lisp_Object predicate, bool newer) at lread.c:1462> (R)
  | | +-make_timespec()
  | | +-TYPE_MINIMUM()
  | | +-CHECK_STRING()
  | | +-CONSP()
  | | +-XCDR()
  | | +-CHECK_STRING_CAR()
  | | +-max()
  | | +-SBYTES()
  | | +-XCAR()
  | | +-GCPRO7()
  | | +-complete_filename_p() <bool complete_filename_p (Lisp_Object pathname) at lread.c:1407>
  | | | +-SDATA()
  | | | +-IS_DIRECTORY_SEP()
  | | | +-SCHARS()
  | | | \-IS_DEVICE_SEP()
  | | +-Fexpand_file_name()
  | | +-BVAR()
  | | +-alloca()
  | | +-NILP()
  | | +-list1() <Lisp_Object list1 (Lisp_Object arg1) at alloc.c:2513> [see 598]
  | | +-SCHARS()
  | | +-SREF()
  | | +-memcpy()
  | | +-SDATA()
  | | +-STRING_MULTIBYTE()
  | | +-make_unibyte_string() <Lisp_Object make_unibyte_string (const char *contents, ptrdiff_t length) at alloc.c:2165> (R) [see 1457]
  | | +-make_string() <Lisp_Object make_string (const char *contents, ptrdiff_t nbytes) at alloc.c:2145> (R) [see 89]
  | | +-Ffind_file_name_handler()
  | | +-NATNUMP()
  | | +-Ffile_readable_p()
  | | +-call1() <Lisp_Object call1 (Lisp_Object fn, Lisp_Object arg1) at eval.c:2601> [see 1742]
  | | +-EQ()
  | | +-Ffile_directory_p()
  | | +-ENCODE_FILE()
  | | +-SSDATA()
  | | +-XFASTINT()
  | | +-faccessat()
  | | +-file_directory_p() <bool file_directory_p (char const *file) at fileio.c:2725>
  | | | +-faccessat()
  | | | +-stat()
  | | | \-S_ISDIR()
  | | +-emacs_open() <int emacs_open (const char *file, int oflags, int mode) at sysdep.c:2142> [see 198]
  | | +-fstat()
  | | +-S_ISDIR()
  | | +-emacs_close() <int emacs_close (int fd) at sysdep.c:2242> [see 193]
  | | +-get_stat_mtime()
  | | \-timespec_cmp()
  | +-make_number()
  | +-Ffile_name_absolute_p()
  | +-Fexpand_file_name()
  | +-SBYTES()
  | +-strcmp()
  | +-SSDATA()
  | +-Ffile_exists_p()
  | +-Ffile_name_as_directory()
  | +-Ffile_symlink_p()
  | +-Fcons()
  | \-unbind_to() <Lisp_Object unbind_to (ptrdiff_t count, Lisp_Object value) at eval.c:3281> (R) [see 1662]
  +-XSETFASTINT()
  +-message_dolog() <void message_dolog (const char *m, ptrdiff_t nbytes, bool nlflag, bool multibyte) at xdisp.c:9989> (R)
  | +-NILP()
  | +-Fget_buffer()
  | +-Fset_buffer()
  | +-Fget_buffer_create()
  | +-Ffboundp()
  | +-intern()
  | +-call0() <Lisp_Object call0 (Lisp_Object fn) at eval.c:2590> [see 1657]
  | +-bset_undo_list()
  | +-bset_cache_long_scans()
  | +-set_marker_restricted_both() <Lisp_Object set_marker_restricted_both (Lisp_Object marker, Lisp_Object buffer, ptrdiff_t charpos, ptrdiff_t bytepos) at marker.c:578> (R)
  | | +-live_buffer() <struct buffer live_buffer (Lisp_Object buffer) at marker.c:456>
  | | +-CHECK_MARKER() <void CHECK_MARKER (Lisp_Object x) at marker.c:131>
  | | | +-CHECK_TYPE()
  | | | \-MARKERP()
  | | +-XMARKER()
  | | +-attach_marker() <void attach_marker (struct Lisp_Marker m, struct buffer b, ptrdiff_t charpos, ptrdiff_t bytepos) at marker.c:429> (R)
  | | | +-BUF_Z()
  | | | +-BUF_Z_BYTE()
  | | | +-eassert()
  | | | +-unchain_marker() <void unchain_marker (register struct Lisp_Marker *marker) at marker.c:605> (R) [see 1644]
  | | | \-BUF_MARKERS()
  | | +-clip_to_bounds()
  | | +-BUF_BEGV()
  | | +-BUF_ZV()
  | | +-BUF_BEGV_BYTE()
  | | +-BUF_ZV_BYTE()
  | | \-unchain_marker() <void unchain_marker (register struct Lisp_Marker *marker) at marker.c:605> (R) [see 1644]
  | +-GCPRO1()
  | +-TEMP_SET_PT_BOTH()
  | +-BVAR()
  | +-string_char_and_length() <int string_char_and_length (const unsigned char *str, int *len) at xdisp.c:1768>
  | | +-STRING_CHAR_AND_LENGTH()
  | | \-CHAR_VALID_P()
  | +-ASCII_CHAR_P()
  | +-multibyte_char_to_unibyte() <int multibyte_char_to_unibyte (int c) at character.c:240>
  | | +-CHAR_BYTE8_P() <if ( ! CHAR_BYTE8_P (c1)) at regex.c:5485>
  | | \-CHAR_TO_BYTE8()
  | +-insert_1_both() <void insert_1_both (const char *string, ptrdiff_t nchars, ptrdiff_t nbytes, bool inherit, bool prepare, bool before_markers) at insdel.c:757> (R)
  | | +-NILP()
  | | +-BVAR()
  | | +-prepare_to_modify_buffer() <void prepare_to_modify_buffer (ptrdiff_t start, ptrdiff_t end, ptrdiff_t *preserve_ptr) at insdel.c:1844> (R)
  | | | +-prepare_to_modify_buffer_1() <void prepare_to_modify_buffer_1 (ptrdiff_t start, ptrdiff_t end, ptrdiff_t *preserve_ptr) at insdel.c:1774> (R)
  | | | | +-NILP()
  | | | | +-BVAR()
  | | | | +-Fbarf_if_buffer_read_only()
  | | | | +-bset_redisplay() <void bset_redisplay (struct buffer b) at xdisp.c:653> (R) [see 1631]
  | | | | +-buffer_intervals()
  | | | | +-Fcopy_marker()
  | | | | +-make_number()
  | | | | +-GCPRO1()
  | | | | +-verify_interval_modification() <void verify_interval_modification (struct buffer buf, ptrdiff_t start, ptrdiff_t end) at textprop.c:2143> (R)
  | | | | | +-buffer_intervals()
  | | | | | +-find_interval() <INTERVAL find_interval (register INTERVAL tree, register ptrdiff_t position) at intervals.c:656> [see 1557]
  | | | | | +-BUF_BEGV()
  | | | | | +-previous_interval() <INTERVAL previous_interval (register INTERVAL interval) at intervals.c:748>
  | | | | | | +-NULL_LEFT_CHILD()
  | | | | | | +-NULL_RIGHT_CHILD()
  | | | | | | +-LENGTH() <LENGTH at ccl.c:219>
  | | | | | | +-NULL_PARENT()
  | | | | | | +-AM_RIGHT_CHILD()
  | | | | | | \-INTERVAL_PARENT()
  | | | | | +-BUF_ZV()
  | | | | | +-NILP()
  | | | | | +-CONSP()
  | | | | | +-textget() <Lisp_Object textget (Lisp_Object plist, register Lisp_Object prop) at intervals.c:1747>
  | | | | | | \-lookup_char_property() <Lisp_Object lookup_char_property (Lisp_Object plist, Lisp_Object prop, bool textprop) at intervals.c:1753>
  | | | | | +-Fmemq()
  | | | | | +-TMEM()
  | | | | | +-Fplist_get()
  | | | | | +-text_read_only() <_Noreturn void text_read_only (Lisp_Object propval) at textprop.c:88> (R)
  | | | | | | +-STRINGP()
  | | | | | | +-xsignal1() <void xsignal1 (Lisp_Object error_symbol, Lisp_Object arg) at eval.c:1594> (R) [see 91]
  | | | | | | \-xsignal0() <void xsignal0 (Lisp_Object error_symbol) at eval.c:1588> (R) [see 256]
  | | | | | +-INTERVAL_WRITABLE_P()
  | | | | | +-EQ()
  | | | | | +-Fcons()
  | | | | | +-next_interval() <INTERVAL next_interval (register INTERVAL interval) at intervals.c:709> [see 1582]
  | | | | | +-GCPRO1()
  | | | | | +-Fnreverse()
  | | | | | +-call_mod_hooks() <void call_mod_hooks (Lisp_Object list, Lisp_Object start, Lisp_Object end) at textprop.c:2122>
  | | | | | | +-GCPRO1()
  | | | | | | +-NILP()
  | | | | | | +-call2() <Lisp_Object call2 (Lisp_Object fn, Lisp_Object arg1, Lisp_Object arg2) at eval.c:2616> [see 431]
  | | | | | | +-Fcar()
  | | | | | | \-Fcdr()
  | | | | | +-Fcar()
  | | | | | +-make_number()
  | | | | | \-Fcdr()
  | | | | +-marker_position() <ptrdiff_t marker_position (Lisp_Object marker) at marker.c:645> (R) [see 1638]
  | | | | +-unchain_marker() <void unchain_marker (register struct Lisp_Marker *marker) at marker.c:605> (R) [see 1644]
  | | | | +-XMARKER()
  | | | | +-lock_file() <void lock_file (Lisp_Object fn) at filelock.c:671> (R)
  | | | | | +-NILP()
  | | | | | +-GCPRO1()
  | | | | | +-Fexpand_file_name()
  | | | | | +-dostounix_filename()
  | | | | | +-SSDATA()
  | | | | | +-ENCODE_FILE()
  | | | | | +-MAKE_LOCK_NAME()
  | | | | | +-get_truename_buffer() <Lisp_Object get_truename_buffer (register Lisp_Object filename) at buffer.c:500>
  | | | | | | +-FOR_EACH_LIVE_BUFFER()
  | | | | | | +-STRINGP()
  | | | | | | +-BVAR()
  | | | | | | +-XBUFFER()
  | | | | | | +-NILP()
  | | | | | | \-Fstring_equal()
  | | | | | +-Fverify_visited_file_modtime()
  | | | | | +-Ffile_exists_p()
  | | | | | +-call1() <Lisp_Object call1 (Lisp_Object fn, Lisp_Object arg1) at eval.c:2601> [see 1742]
  | | | | | +-intern()
  | | | | | +-lock_if_free() <int lock_if_free (lock_info_type *clasher, char *lfname) at filelock.c:631> (R)
  | | | | | | +-lock_file_1() <int lock_file_1 (char *lfname, bool force) at filelock.c:454> (R)
  | | | | | | \-current_lock_owner() <int current_lock_owner (lock_info_type *owner, char *lfname) at filelock.c:538> (R)
  | | | | | +-memmove()
  | | | | | +-strcpy()
  | | | | | +-memcpy()
  | | | | | +-call2() <Lisp_Object call2 (Lisp_Object fn, Lisp_Object arg1, Lisp_Object arg2) at eval.c:2616> [see 431]
  | | | | | +-build_string()
  | | | | | +-lock_file_1() <int lock_file_1 (char *lfname, bool force) at filelock.c:454> (R) [see 1991]
  | | | | | \-SAFE_FREE()
  | | | | +-Fverify_visited_file_modtime()
  | | | | +-Fcurrent_buffer()
  | | | | +-Ffile_exists_p()
  | | | | +-call1() <Lisp_Object call1 (Lisp_Object fn, Lisp_Object arg1) at eval.c:2601> [see 1742]
  | | | | +-intern()
  | | | | +-EQ()
  | | | | +-CAR_SAFE()
  | | | | +-Fsymbol_value()
  | | | | \-signal_before_change() <void signal_before_change (ptrdiff_t start_int, ptrdiff_t end_int, ptrdiff_t *preserve_ptr) at insdel.c:1955> (R)
  | | | |   +-SPECPDL_INDEX()
  | | | |   +-make_number()
  | | | |   +-GCPRO3()
  | | | |   +-specbind() <void specbind (Lisp_Object symbol, Lisp_Object value) at eval.c:3124> (R)
  | | | |   | +-CHECK_SYMBOL()
  | | | |   | +-XSYMBOL()
  | | | |   | +-indirect_variable() <struct Lisp_Symbol indirect_variable (struct Lisp_Symbol symbol) at data.c:880>
  | | | |   | +-XSETSYMBOL()
  | | | |   | +-SYMBOL_VAL()
  | | | |   | +-grow_specpdl() <void grow_specpdl (void) at eval.c:2010> (R)
  | | | |   | +-SET_SYMBOL_VAL()
  | | | |   | +-set_internal() <void set_internal (Lisp_Object symbol, Lisp_Object newval, Lisp_Object where, bool bindflag) at data.c:1187> (R) [see 1678]
  | | | |   | +-SYMBOL_BLV()
  | | | |   | +-error() <void error (const char *m, ...) at eval.c:1782> (R) [see 85]
  | | | |   | +-find_symbol_value() <Lisp_Object find_symbol_value (Lisp_Object symbol) at data.c:1130> (R)
  | | | |   | +-Fcurrent_buffer()
  | | | |   | +-eassert()
  | | | |   | +-EQ()
  | | | |   | +-blv_found()
  | | | |   | +-BUFFER_OBJFWDP()
  | | | |   | +-SYMBOL_FWD()
  | | | |   | +-NILP()
  | | | |   | +-Flocal_variable_p()
  | | | |   | +-Fset_default()
  | | | |   | \-emacs_abort() <void emacs_abort (void) at sysdep.c:2129> (R) [see 28]
  | | | |   +-NILP()
  | | | |   +-Frun_hooks()
  | | | |   +-record_unwind_protect_ptr() <void record_unwind_protect_ptr (void (*function) (void *), void *arg) at eval.c:3205> (R)
  | | | |   | +-func()
  | | | |   | \-grow_specpdl() <void grow_specpdl (void) at eval.c:2010> (R) [see 2018]
  | | | |   +-reset_var_on_error() <void reset_var_on_error (void *ptr) at insdel.c:1941>
  | | | |   +-Frun_hook_with_args()
  | | | |   +-buffer_has_overlays()
  | | | |   +-report_overlay_modification() <void report_overlay_modification (Lisp_Object start, Lisp_Object end, bool after, Lisp_Object arg1, Lisp_Object arg2, Lisp_Object arg3) at buffer.c:4458> (R)
  | | | |   | +-XFASTINT()
  | | | |   | +-EQ()
  | | | |   | +-XSETMISC()
  | | | |   | +-OVERLAY_START()
  | | | |   | +-OVERLAY_END()
  | | | |   | +-OVERLAY_POSITION()
  | | | |   | +-Foverlay_get()
  | | | |   | +-NILP()
  | | | |   | +-add_overlay_mod_hooklist() <void add_overlay_mod_hooklist (Lisp_Object functionlist, Lisp_Object overlay) at buffer.c:4430> (R)
  | | | |   | +-GCPRO4()
  | | | |   | +-alloca()
  | | | |   | +-memcpy()
  | | | |   | +-XVECTOR()
  | | | |   | \-call_overlay_mod_hooks() <void call_overlay_mod_hooks (Lisp_Object list, Lisp_Object overlay, bool after, Lisp_Object arg1, Lisp_Object arg2, Lisp_Object arg3) at buffer.c:4584>
  | | | |   +-free_marker() <void free_marker (Lisp_Object marker) at alloc.c:3658> (R)
  | | | |   | +-unchain_marker() <void unchain_marker (register struct Lisp_Marker *marker) at marker.c:605> (R) [see 1644]
  | | | |   | +-XMARKER()
  | | | |   | \-free_misc() <void free_misc (Lisp_Object misc) at alloc.c:3479>
  | | | |   \-unbind_to() <Lisp_Object unbind_to (ptrdiff_t count, Lisp_Object value) at eval.c:3281> (R) [see 1662]
  | | | \-invalidate_buffer_caches() <void invalidate_buffer_caches (struct buffer buf, ptrdiff_t start, ptrdiff_t end) at insdel.c:1854> (R)
  | | |   +-BUF_BEG()
  | | |   +-buf_charpos_to_bytepos() <ptrdiff_t buf_charpos_to_bytepos (struct buffer b, ptrdiff_t charpos) at marker.c:139> (R)
  | | |   | +-eassert()
  | | |   | +-BUF_BEG()
  | | |   | +-BUF_Z()
  | | |   | +-BUF_Z_BYTE()
  | | |   | +-CONSIDER()
  | | |   | +-BUF_PT()
  | | |   | +-BUF_PT_BYTE()
  | | |   | +-BUF_GPT()
  | | |   | +-BUF_GPT_BYTE()
  | | |   | +-BUF_BEGV()
  | | |   | +-BUF_BEGV_BYTE()
  | | |   | +-BUF_ZV()
  | | |   | +-BUF_ZV_BYTE()
  | | |   | +-BUF_MODIFF()
  | | |   | +-BUF_MARKERS()
  | | |   | +-BUF_INC_POS()
  | | |   | +-build_marker() <Lisp_Object build_marker (struct buffer buf, ptrdiff_t charpos, ptrdiff_t bytepos) at alloc.c:3632> (R)
  | | |   | | +-eassert()
  | | |   | | +-BUFFER_LIVE_P()
  | | |   | | +-allocate_misc() <Lisp_Object allocate_misc (enum Lisp_Misc_Type type) at alloc.c:3441> (R)
  | | |   | | +-XMARKER()
  | | |   | | \-BUF_MARKERS()
  | | |   | +-byte_char_debug_check() <void byte_char_debug_check (struct buffer b, ptrdiff_t charpos, ptrdiff_t bytepos) at marker.c:45> (R)
  | | |   | | +-NILP()
  | | |   | | +-BVAR()
  | | |   | | +-BUF_GPT_BYTE()
  | | |   | | +-multibyte_chars_in_text() <ptrdiff_t multibyte_chars_in_text (const unsigned char *ptr, ptrdiff_t nbytes) at character.c:537> (R)
  | | |   | | +-BUF_BEG_ADDR()
  | | |   | | +-BUF_BEG_BYTE()
  | | |   | | +-BUF_GAP_END_ADDR()
  | | |   | | \-emacs_abort() <void emacs_abort (void) at sysdep.c:2129> (R) [see 28]
  | | |   | \-BUF_DEC_POS()
  | | |   +-BUF_FETCH_BYTE()
  | | |   +-set_buffer_internal()
  | | |   +-find_newline_no_quit() <ptrdiff_t find_newline_no_quit (ptrdiff_t from, ptrdiff_t frombyte, ptrdiff_t cnt, ptrdiff_t *bytepos) at search.c:997> (R)
  | | |   | \-find_newline() <ptrdiff_t find_newline (ptrdiff_t start, ptrdiff_t start_byte, ptrdiff_t end, ptrdiff_t end_byte, ptrdiff_t count, ptrdiff_t *shortage, ptrdiff_t *bytepos, bool allow_quit) at search.c:674> (R)
  | | |   |   +-CHAR_TO_BYTE()
  | | |   |   +-newline_cache_on_off() <struct region_cache newline_cache_on_off (struct buffer buf) at search.c:606>
  | | |   |   +-region_cache_forward() <int region_cache_forward (struct buffer buf, struct region_cache c, ptrdiff_t pos, ptrdiff_t *next) at region-cache.c:682> (R)
  | | |   |   +-min()
  | | |   |   +-FETCH_BYTE()
  | | |   |   +-BUFFER_CEILING_OF()
  | | |   |   +-BYTE_POS_ADDR()
  | | |   |   +-memchr()
  | | |   |   +-know_region_cache() <void know_region_cache (struct buffer buf, struct region_cache c, ptrdiff_t start, ptrdiff_t end) at region-cache.c:666> (R)
  | | |   |   +-BYTE_TO_CHAR()
  | | |   |   +-region_cache_backward() <int region_cache_backward (struct buffer buf, struct region_cache c, ptrdiff_t pos, ptrdiff_t *next) at region-cache.c:720> (R)
  | | |   |   +-max()
  | | |   |   +-BUFFER_FLOOR_OF()
  | | |   |   +-memrchr()
  | | |   |   \-eassert()
  | | |   +-invalidate_region_cache() <void invalidate_region_cache (struct buffer buf, struct region_cache c, ptrdiff_t head, ptrdiff_t tail) at region-cache.c:459> (R)
  | | |   | +-BUF_BEG()
  | | |   | +-BUF_Z()
  | | |   | \-revalidate_region_cache() <void revalidate_region_cache (struct buffer buf, struct region_cache c) at region-cache.c:538> (R)
  | | |   |   +-move_cache_gap() <void move_cache_gap (struct region_cache c, ptrdiff_t pos, ptrdiff_t min_size) at region-cache.c:208> (R)
  | | |   |   +-find_cache_boundary() <ptrdiff_t find_cache_boundary (struct region_cache c, ptrdiff_t pos) at region-cache.c:175>
  | | |   |   +-BUF_BEG()
  | | |   |   +-BUF_Z()
  | | |   |   +-set_cache_region() <void set_cache_region (struct region_cache c, ptrdiff_t start, ptrdiff_t end, int value) at region-cache.c:360> (R)
  | | |   |   +-BOUNDARY_POS()
  | | |   |   +-BOUNDARY_VALUE()
  | | |   |   +-delete_cache_boundaries() <void delete_cache_boundaries (struct region_cache c, ptrdiff_t start, ptrdiff_t end) at region-cache.c:312> (R)
  | | |   |   \-SET_BOUNDARY_VALUE()
  | | |   \-BUF_Z()
  | | +-move_gap_both() <void move_gap_both (ptrdiff_t charpos, ptrdiff_t bytepos) at insdel.c:91>
  | | | +-eassert()
  | | | +-BYTE_TO_CHAR()
  | | | +-CHAR_TO_BYTE()
  | | | +-gap_left() <void gap_left (ptrdiff_t charpos, ptrdiff_t bytepos, bool newgap) at insdel.c:107>
  | | | | +-BUF_COMPUTE_UNCHANGED()
  | | | | +-BYTE_TO_CHAR()
  | | | | +-memmove()
  | | | | \-eassert()
  | | | \-gap_right() <void gap_right (ptrdiff_t charpos, ptrdiff_t bytepos) at insdel.c:161>
  | | |   +-BUF_COMPUTE_UNCHANGED()
  | | |   +-BYTE_TO_CHAR()
  | | |   +-memmove()
  | | |   \-eassert()
  | | +-make_gap() <void make_gap (ptrdiff_t nbytes_added) at insdel.c:458> (R)
  | | | +-make_gap_larger() <void make_gap_larger (ptrdiff_t nbytes_added) at insdel.c:351> (R)
  | | | | +-buffer_overflow() <void buffer_overflow (void) at insdel.c:343> (R)
  | | | | | \-error() <void error (const char *m, ...) at eval.c:1782> (R) [see 85]
  | | | | +-min()
  | | | | +-enlarge_buffer_text() <void enlarge_buffer_text (struct buffer b, ptrdiff_t delta) at buffer.c:5100> (R) [see 1391]
  | | | | \-gap_left() <void gap_left (ptrdiff_t charpos, ptrdiff_t bytepos, bool newgap) at insdel.c:107> [see 2134]
  | | | \-make_gap_smaller() <void make_gap_smaller (ptrdiff_t nbytes_removed) at insdel.c:401> (R)
  | | |   +-memset()
  | | |   +-gap_right() <void gap_right (ptrdiff_t charpos, ptrdiff_t bytepos) at insdel.c:161> [see 2139]
  | | |   \-enlarge_buffer_text() <void enlarge_buffer_text (struct buffer b, ptrdiff_t delta) at buffer.c:5100> (R) [see 1391]
  | | +-count_combining_before() <int count_combining_before (const unsigned char *string, ptrdiff_t length, ptrdiff_t pos, ptrdiff_t pos_byte) at insdel.c:643>
  | | | +-NILP()
  | | | +-CHAR_HEAD_P()
  | | | +-BYTE_POS_ADDR()
  | | | +-LEADING_CODE_P()
  | | | \-BYTES_BY_CHAR_HEAD()
  | | +-count_combining_after() <int count_combining_after (const unsigned char *string, ptrdiff_t length, ptrdiff_t pos, ptrdiff_t pos_byte) at insdel.c:688>
  | | | +-NILP()
  | | | +-ASCII_BYTE_P()
  | | | +-BYTE_POS_ADDR()
  | | | +-CHAR_HEAD_P()
  | | | +-LEADING_CODE_P()
  | | | \-BYTES_BY_CHAR_HEAD()
  | | +-emacs_abort() <void emacs_abort (void) at sysdep.c:2129> (R) [see 28]
  | | +-record_insert() <void record_insert (ptrdiff_t beg, ptrdiff_t length) at undo.c:100>
  | | | +-EQ()
  | | | +-BVAR()
  | | | +-record_point() <void record_point (ptrdiff_t pt) at undo.c:56>
  | | | | +-NILP()
  | | | | +-Fcons()
  | | | | +-Fundo_boundary()
  | | | | +-CONSP()
  | | | | +-BVAR()
  | | | | +-XCAR()
  | | | | +-record_first_change() <void record_first_change (void) at undo.c:230>
  | | | | | +-EQ()
  | | | | | +-BVAR()
  | | | | | +-Fundo_boundary()
  | | | | | +-bset_undo_list()
  | | | | | +-Fcons()
  | | | | | \-Fvisited_file_modtime()
  | | | | +-bset_undo_list()
  | | | | \-make_number()
  | | | +-CONSP()
  | | | +-XCAR()
  | | | +-INTEGERP()
  | | | +-XCDR()
  | | | +-XINT()
  | | | +-XSETCDR()
  | | | +-make_number()
  | | | +-XSETFASTINT()
  | | | +-XSETINT()
  | | | +-bset_undo_list()
  | | | \-Fcons()
  | | +-memcpy()
  | | +-eassert()
  | | +-adjust_overlays_for_insert() <void adjust_overlays_for_insert (ptrdiff_t pos, ptrdiff_t length) at buffer.c:3596>
  | | +-adjust_markers_for_insert() <void adjust_markers_for_insert (ptrdiff_t from, ptrdiff_t from_byte, ptrdiff_t to, ptrdiff_t to_byte, bool before_markers) at insdel.c:251>
  | | | +-BUF_MARKERS()
  | | | +-eassert()
  | | | +-fix_start_end_in_overlays() <void fix_start_end_in_overlays (register ptrdiff_t start, register ptrdiff_t end) at buffer.c:3630>
  | | | | +-XSETMISC()
  | | | | +-OVERLAY_POSITION()
  | | | | +-OVERLAY_END()
  | | | | +-OVERLAY_START()
  | | | | +-Fset_marker()
  | | | | +-make_number()
  | | | | +-set_buffer_overlays_before() <void set_buffer_overlays_before (struct buffer b, struct Lisp_Overlay o) at buffer.c:650>
  | | | | +-set_buffer_overlays_after() <void set_buffer_overlays_after (struct buffer b, struct Lisp_Overlay o) at buffer.c:656>
  | | | | \-recenter_overlay_lists() <void recenter_overlay_lists (struct buffer buf, ptrdiff_t pos) at buffer.c:3477>
  | | | |   +-XSETMISC()
  | | | |   +-eassert()
  | | | |   +-OVERLAYP()
  | | | |   +-OVERLAY_START()
  | | | |   +-OVERLAY_END()
  | | | |   +-OVERLAY_POSITION()
  | | | |   +-set_buffer_overlays_before() <void set_buffer_overlays_before (struct buffer b, struct Lisp_Overlay o) at buffer.c:650>
  | | | |   \-set_buffer_overlays_after() <void set_buffer_overlays_after (struct buffer b, struct Lisp_Overlay o) at buffer.c:656>
  | | | \-fix_overlays_before() <void fix_overlays_before (struct buffer bp, ptrdiff_t prev, ptrdiff_t pos) at buffer.c:3776>
  | | |   +-IF_LINT()
  | | |   +-XSETMISC()
  | | |   +-OVERLAY_POSITION()
  | | |   +-OVERLAY_END()
  | | |   \-set_buffer_overlays_before() <void set_buffer_overlays_before (struct buffer b, struct Lisp_Overlay o) at buffer.c:650>
  | | +-offset_intervals() <void offset_intervals (struct buffer buffer, ptrdiff_t start, ptrdiff_t length) at intervals.c:1399> (R)
  | | | +-buffer_intervals()
  | | | +-adjust_intervals_for_insertion() <INTERVAL adjust_intervals_for_insertion (INTERVAL tree, ptrdiff_t position, ptrdiff_t length) at intervals.c:843> (R)
  | | | | +-eassert()
  | | | | +-TOTAL_LENGTH()
  | | | | +-GET_INTERVAL_OBJECT()
  | | | | +-BUFFERP()
  | | | | +-BUF_BEG()
  | | | | +-XBUFFER()
  | | | | +-find_interval() <INTERVAL find_interval (register INTERVAL tree, register ptrdiff_t position) at intervals.c:656> [see 1557]
  | | | | +-textget() <Lisp_Object textget (Lisp_Object plist, register Lisp_Object prop) at intervals.c:1747> [see 1944]
  | | | | +-CONSP()
  | | | | +-NILP()
  | | | | +-Fcdr()
  | | | | +-XCDR()
  | | | | +-XCAR()
  | | | | +-Fmemq()
  | | | | +-Fassq()
  | | | | +-split_interval_right() <INTERVAL split_interval_right (INTERVAL interval, ptrdiff_t offset) at intervals.c:547> (R)
  | | | | | +-make_interval() <INTERVAL make_interval (void) at alloc.c:1244> (R) [see 1544]
  | | | | | +-LENGTH() <LENGTH at ccl.c:219>
  | | | | | +-set_interval_parent()
  | | | | | +-NULL_RIGHT_CHILD()
  | | | | | +-set_interval_right() <void set_interval_right (INTERVAL i, INTERVAL right) at intervals.c:72>
  | | | | | +-eassert()
  | | | | | +-balance_an_interval() <INTERVAL balance_an_interval (INTERVAL i) at intervals.c:432> (R)
  | | | | | | +-eassert()
  | | | | | | +-LENGTH() <LENGTH at ccl.c:219>
  | | | | | | +-TOTAL_LENGTH()
  | | | | | | +-LEFT_TOTAL_LENGTH()
  | | | | | | +-RIGHT_TOTAL_LENGTH()
  | | | | | | +-eabs()
  | | | | | | +-rotate_right() <INTERVAL rotate_right (INTERVAL A) at intervals.c:336>
  | | | | | | +-balance_an_interval() <INTERVAL balance_an_interval (INTERVAL i) at intervals.c:432> (recursive: see 2254) [see 2254]
  | | | | | | \-rotate_left() <INTERVAL rotate_left (INTERVAL A) at intervals.c:387>
  | | | | | \-balance_possible_root_interval() <INTERVAL balance_possible_root_interval (INTERVAL interval) at intervals.c:472> [see 1565]
  | | | | +-copy_properties() <void copy_properties (register INTERVAL source, register INTERVAL target) at intervals.c:123>
  | | | | | +-DEFAULT_INTERVAL_P()
  | | | | | +-COPY_INTERVAL_CACHE()
  | | | | | +-set_interval_plist()
  | | | | | \-Fcopy_sequence()
  | | | | +-previous_interval() <INTERVAL previous_interval (register INTERVAL interval) at intervals.c:748> [see 1934]
  | | | | +-INTERVAL_PARENT_OR_NULL()
  | | | | +-balance_possible_root_interval() <INTERVAL balance_possible_root_interval (INTERVAL interval) at intervals.c:472> [see 1565]
  | | | | +-RESET_INTERVAL()
  | | | | +-set_interval_plist()
  | | | | +-merge_properties_sticky() <Lisp_Object merge_properties_sticky (Lisp_Object pleft, Lisp_Object pright) at intervals.c:1065>
  | | | | | +-textget() <Lisp_Object textget (Lisp_Object plist, register Lisp_Object prop) at intervals.c:1747> [see 1944]
  | | | | | +-CONSP()
  | | | | | +-Fcdr()
  | | | | | +-XCDR()
  | | | | | +-XCAR()
  | | | | | +-EQ()
  | | | | | +-Fcar()
  | | | | | +-NILP()
  | | | | | +-Fassq()
  | | | | | +-TMEM()
  | | | | | +-Fcons()
  | | | | | +-Fnreverse()
  | | | | | +-SYMBOLP()
  | | | | | \-Fget()
  | | | | +-intervals_equal() <bool intervals_equal (INTERVAL i0, INTERVAL i1) at intervals.c:174>
  | | | | | +-DEFAULT_INTERVAL_P()
  | | | | | +-CONSP()
  | | | | | +-XCAR()
  | | | | | +-XCDR()
  | | | | | +-EQ()
  | | | | | \-NILP()
  | | | | +-split_interval_left() <INTERVAL split_interval_left (INTERVAL interval, ptrdiff_t offset) at intervals.c:591> (R)
  | | | | | +-make_interval() <INTERVAL make_interval (void) at alloc.c:1244> (R) [see 1544]
  | | | | | +-set_interval_parent()
  | | | | | +-NULL_LEFT_CHILD()
  | | | | | +-set_interval_left() <void set_interval_left (INTERVAL i, INTERVAL left) at intervals.c:66>
  | | | | | +-eassert()
  | | | | | +-LENGTH() <LENGTH at ccl.c:219>
  | | | | | +-balance_an_interval() <INTERVAL balance_an_interval (INTERVAL i) at intervals.c:432> (R) [see 2254]
  | | | | | \-balance_possible_root_interval() <INTERVAL balance_possible_root_interval (INTERVAL interval) at intervals.c:472> [see 1565]
  | | | | \-merge_interval_right() <INTERVAL merge_interval_right (register INTERVAL i) at intervals.c:1421> (R)
  | | | |   +-LENGTH() <LENGTH at ccl.c:219>
  | | | |   +-NULL_RIGHT_CHILD()
  | | | |   +-NULL_LEFT_CHILD()
  | | | |   +-eassert()
  | | | |   +-delete_interval() <void delete_interval (register INTERVAL i) at intervals.c:1234> (R)
  | | | |   | +-LENGTH() <LENGTH at ccl.c:219>
  | | | |   | +-eassert()
  | | | |   | +-ROOT_INTERVAL_P()
  | | | |   | +-GET_INTERVAL_OBJECT()
  | | | |   | +-delete_node() <INTERVAL delete_node (register INTERVAL i) at intervals.c:1200>
  | | | |   | +-set_interval_object()
  | | | |   | +-BUFFERP()
  | | | |   | +-set_buffer_intervals()
  | | | |   | +-XBUFFER()
  | | | |   | +-STRINGP()
  | | | |   | +-set_string_intervals()
  | | | |   | +-emacs_abort() <void emacs_abort (void) at sysdep.c:2129> (R) [see 28]
  | | | |   | +-INTERVAL_PARENT()
  | | | |   | +-AM_LEFT_CHILD()
  | | | |   | +-set_interval_left() <void set_interval_left (INTERVAL i, INTERVAL left) at intervals.c:66>
  | | | |   | +-set_interval_parent()
  | | | |   | \-set_interval_right() <void set_interval_right (INTERVAL i, INTERVAL right) at intervals.c:72>
  | | | |   +-TOTAL_LENGTH()
  | | | |   +-NULL_PARENT()
  | | | |   +-AM_LEFT_CHILD()
  | | | |   +-INTERVAL_PARENT()
  | | | |   \-emacs_abort() <void emacs_abort (void) at sysdep.c:2129> (R) [see 28]
  | | | \-adjust_intervals_for_deletion() <void adjust_intervals_for_deletion (struct buffer buffer, ptrdiff_t start, ptrdiff_t length) at intervals.c:1348> (R)
  | | |   +-buffer_intervals()
  | | |   +-GET_INTERVAL_OBJECT()
  | | |   +-BUFFERP()
  | | |   +-BUF_BEG()
  | | |   +-XBUFFER()
  | | |   +-eassert()
  | | |   +-TOTAL_LENGTH()
  | | |   +-set_buffer_intervals()
  | | |   +-ONLY_INTERVAL_P()
  | | |   +-LENGTH() <LENGTH at ccl.c:219>
  | | |   \-interval_deletion_adjustment() <ptrdiff_t interval_deletion_adjustment (register INTERVAL tree, register ptrdiff_t from, register ptrdiff_t amount) at intervals.c:1287> (R)
  | | |     +-LEFT_TOTAL_LENGTH()
  | | |     +-interval_deletion_adjustment() <ptrdiff_t interval_deletion_adjustment (register INTERVAL tree, register ptrdiff_t from, register ptrdiff_t amount) at intervals.c:1287> (recursive: see 2345) [see 2345]
  | | |     +-eassert()
  | | |     +-LENGTH() <LENGTH at ccl.c:219>
  | | |     +-TOTAL_LENGTH()
  | | |     +-RIGHT_TOTAL_LENGTH()
  | | |     \-delete_interval() <void delete_interval (register INTERVAL i) at intervals.c:1234> (R) [see 2311]
  | | +-buffer_intervals()
  | | +-set_text_properties() <Lisp_Object set_text_properties (Lisp_Object start, Lisp_Object end, Lisp_Object properties, Lisp_Object object, Lisp_Object coherent_change_p) at textprop.c:1377> (R)
  | | | +-validate_plist() <Lisp_Object validate_plist (Lisp_Object list) at textprop.c:220> (R)
  | | | | +-NILP()
  | | | | +-CONSP()
  | | | | +-XCDR()
  | | | | +-error() <void error (const char *m, ...) at eval.c:1782> (R) [see 85]
  | | | | \-list2() <Lisp_Object list2 (Lisp_Object arg1, Lisp_Object arg2) at alloc.c:2519> [see 702]
  | | | +-NILP()
  | | | +-XSETBUFFER()
  | | | +-STRINGP()
  | | | +-XFASTINT()
  | | | +-SCHARS()
  | | | +-string_intervals()
  | | | +-set_string_intervals()
  | | | +-validate_interval_range() <INTERVAL validate_interval_range (Lisp_Object object, Lisp_Object *begin, Lisp_Object *end, bool force) at textprop.c:153> (R) [see 1523]
  | | | +-BUFFERP()
  | | | +-modify_text_properties() <void modify_text_properties (Lisp_Object buffer, Lisp_Object start, Lisp_Object end) at textprop.c:99> (R)
  | | | | +-XINT()
  | | | | +-XBUFFER()
  | | | | +-set_buffer_internal()
  | | | | +-prepare_to_modify_buffer_1() <void prepare_to_modify_buffer_1 (ptrdiff_t start, ptrdiff_t end, ptrdiff_t *preserve_ptr) at insdel.c:1774> (R) [see 1921]
  | | | | +-BUF_COMPUTE_UNCHANGED()
  | | | | +-record_first_change() <void record_first_change (void) at undo.c:230> [see 2179]
  | | | | \-bset_point_before_scroll()
  | | | +-set_text_properties_1() <void set_text_properties_1 (Lisp_Object start, Lisp_Object end, Lisp_Object properties, Lisp_Object object, INTERVAL i) at textprop.c:1441> (R)
  | | | | +-XINT()
  | | | | +-eassert()
  | | | | +-split_interval_right() <INTERVAL split_interval_right (INTERVAL interval, ptrdiff_t offset) at intervals.c:547> (R) [see 2247]
  | | | | +-LENGTH() <LENGTH at ccl.c:219>
  | | | | +-copy_properties() <void copy_properties (register INTERVAL source, register INTERVAL target) at intervals.c:123> [see 2265]
  | | | | +-split_interval_left() <INTERVAL split_interval_left (INTERVAL interval, ptrdiff_t offset) at intervals.c:591> (R) [see 2297]
  | | | | +-set_properties() <void set_properties (Lisp_Object properties, INTERVAL interval, Lisp_Object object) at textprop.c:344>
  | | | | | +-BUFFERP()
  | | | | | +-PLIST_ELT_P()
  | | | | | +-XCDR()
  | | | | | +-EQ()
  | | | | | +-property_value() <Lisp_Object property_value (Lisp_Object plist, Lisp_Object prop) at textprop.c:326>
  | | | | | | +-PLIST_ELT_P()
  | | | | | | +-EQ()
  | | | | | | +-XCAR()
  | | | | | | \-XCDR()
  | | | | | +-XCAR()
  | | | | | +-record_property_change() <void record_property_change (ptrdiff_t beg, ptrdiff_t length, Lisp_Object prop, Lisp_Object value, Lisp_Object buffer) at undo.c:253>
  | | | | | | +-XBUFFER()
  | | | | | | +-EQ()
  | | | | | | +-BVAR()
  | | | | | | +-NILP()
  | | | | | | +-Fcons()
  | | | | | | +-Fundo_boundary()
  | | | | | | +-record_first_change() <void record_first_change (void) at undo.c:230> [see 2179]
  | | | | | | +-XSETINT()
  | | | | | | \-bset_undo_list()
  | | | | | +-LENGTH() <LENGTH at ccl.c:219>
  | | | | | +-set_interval_plist()
  | | | | | \-Fcopy_sequence()
  | | | | +-next_interval() <INTERVAL next_interval (register INTERVAL interval) at intervals.c:709> [see 1582]
  | | | | \-merge_interval_left() <INTERVAL merge_interval_left (register INTERVAL i) at intervals.c:1477> (R)
  | | | |   +-LENGTH() <LENGTH at ccl.c:219>
  | | | |   +-NULL_LEFT_CHILD()
  | | | |   +-NULL_RIGHT_CHILD()
  | | | |   +-eassert()
  | | | |   +-delete_interval() <void delete_interval (register INTERVAL i) at intervals.c:1234> (R) [see 2311]
  | | | |   +-TOTAL_LENGTH()
  | | | |   +-NULL_PARENT()
  | | | |   +-AM_RIGHT_CHILD()
  | | | |   +-INTERVAL_PARENT()
  | | | |   \-emacs_abort() <void emacs_abort (void) at sysdep.c:2129> (R) [see 28]
  | | | +-signal_after_change() <void signal_after_change (ptrdiff_t charpos, ptrdiff_t lendel, ptrdiff_t lenins) at insdel.c:2035> (R)
  | | | | +-SPECPDL_INDEX()
  | | | | +-NILP()
  | | | | +-buffer_has_overlays()
  | | | | +-XBUFFER()
  | | | | +-Fcombine_after_change_execute()
  | | | | +-list3i()
  | | | | +-Fcons()
  | | | | +-Fcurrent_buffer()
  | | | | +-specbind() <void specbind (Lisp_Object symbol, Lisp_Object value) at eval.c:3124> (R) [see 2012]
  | | | | +-record_unwind_protect_ptr() <void record_unwind_protect_ptr (void (*function) (void *), void *arg) at eval.c:3205> (R) [see 2036]
  | | | | +-reset_var_on_error() <void reset_var_on_error (void *ptr) at insdel.c:1941> [see 2039]
  | | | | +-XSETFASTINT()
  | | | | +-Frun_hook_with_args()
  | | | | +-report_overlay_modification() <void report_overlay_modification (Lisp_Object start, Lisp_Object end, bool after, Lisp_Object arg1, Lisp_Object arg2, Lisp_Object arg3) at buffer.c:4458> (R) [see 2042]
  | | | | +-make_number()
  | | | | +-report_interval_modification() <void report_interval_modification (Lisp_Object start, Lisp_Object end) at textprop.c:2322>
  | | | | | +-NILP()
  | | | | | +-call_mod_hooks() <void call_mod_hooks (Lisp_Object list, Lisp_Object start, Lisp_Object end) at textprop.c:2122> [see 1959]
  | | | | | \-EQ()
  | | | | \-unbind_to() <Lisp_Object unbind_to (ptrdiff_t count, Lisp_Object value) at eval.c:3281> (R) [see 1662]
  | | | \-XINT()
  | | +-make_number()
  | | +-adjust_point() <void adjust_point (ptrdiff_t nchars, ptrdiff_t nbytes) at insdel.c:302>
  | | | +-SET_BUF_PT_BOTH()
  | | | \-eassert()
  | | \-check_markers() <void check_markers (void) at insdel.c:63> (R)
  | |   +-NILP()
  | |   +-BVAR()
  | |   +-BUF_MARKERS()
  | |   +-emacs_abort() <void emacs_abort (void) at sysdep.c:2129> (R) [see 28]
  | |   +-CHAR_HEAD_P()
  | |   \-FETCH_BYTE()
  | +-MAKE_CHAR_MULTIBYTE()
  | +-CHAR_STRING()
  | +-chars_in_text() <ptrdiff_t chars_in_text (const unsigned char *ptr, ptrdiff_t nbytes) at character.c:521> (R)
  | | +-NILP()
  | | +-BVAR()
  | | \-multibyte_chars_in_text() <ptrdiff_t multibyte_chars_in_text (const unsigned char *ptr, ptrdiff_t nbytes) at character.c:537> (R) [see 2091]
  | +-scan_newline() <ptrdiff_t scan_newline (ptrdiff_t start, ptrdiff_t start_byte, ptrdiff_t limit, ptrdiff_t limit_byte, ptrdiff_t count, bool allow_quit) at search.c:979> (R)
  | | +-find_newline() <ptrdiff_t find_newline (ptrdiff_t start, ptrdiff_t start_byte, ptrdiff_t end, ptrdiff_t end_byte, ptrdiff_t count, ptrdiff_t *shortage, ptrdiff_t *bytepos, bool allow_quit) at search.c:674> (R) [see 2100]
  | | \-TEMP_SET_PT_BOTH()
  | +-message_log_check_duplicate() <intmax_t message_log_check_duplicate (ptrdiff_t prev_bol_byte, ptrdiff_t this_bol_byte) at xdisp.c:10184>
  | | +-BUF_BYTE_ADDRESS()
  | | +-strtoimax()
  | | \-strncmp()
  | +-del_range_both() <void del_range_both (ptrdiff_t from, ptrdiff_t from_byte, ptrdiff_t to, ptrdiff_t to_byte, bool prepare) at insdel.c:1619> (R)
  | | +-prepare_to_modify_buffer() <void prepare_to_modify_buffer (ptrdiff_t start, ptrdiff_t end, ptrdiff_t *preserve_ptr) at insdel.c:1844> (R) [see 1920]
  | | +-CHAR_TO_BYTE()
  | | +-del_range_2() <Lisp_Object del_range_2 (ptrdiff_t from, ptrdiff_t from_byte, ptrdiff_t to, ptrdiff_t to_byte, bool ret_string) at insdel.c:1665> (R)
  | | | +-check_markers() <void check_markers (void) at insdel.c:63> (R) [see 2447]
  | | | +-gap_right() <void gap_right (ptrdiff_t charpos, ptrdiff_t bytepos) at insdel.c:161> [see 2139]
  | | | +-gap_left() <void gap_left (ptrdiff_t charpos, ptrdiff_t bytepos, bool newgap) at insdel.c:107> [see 2134]
  | | | +-count_combining_before() <int count_combining_before (const unsigned char *string, ptrdiff_t length, ptrdiff_t pos, ptrdiff_t pos_byte) at insdel.c:643> [see 2155]
  | | | +-BUF_BYTE_ADDRESS()
  | | | +-emacs_abort() <void emacs_abort (void) at sysdep.c:2129> (R) [see 28]
  | | | +-EQ()
  | | | +-BVAR()
  | | | +-make_buffer_string_both() <Lisp_Object make_buffer_string_both (ptrdiff_t start, ptrdiff_t start_byte, ptrdiff_t end, ptrdiff_t end_byte, bool props) at editfns.c:2488> (R)
  | | | | +-move_gap_both() <void move_gap_both (ptrdiff_t charpos, ptrdiff_t bytepos) at insdel.c:91> [see 2130]
  | | | | +-NILP()
  | | | | +-BVAR()
  | | | | +-make_uninit_multibyte_string() <Lisp_Object make_uninit_multibyte_string (EMACS_INT nchars, EMACS_INT nbytes) at alloc.c:2251> (R) [see 930]
  | | | | +-make_uninit_string() <Lisp_Object make_uninit_string (EMACS_INT length) at alloc.c:2235> (R) [see 929]
  | | | | +-memcpy()
  | | | | +-SDATA()
  | | | | +-BYTE_POS_ADDR()
  | | | | +-update_buffer_properties() <void update_buffer_properties (ptrdiff_t start, ptrdiff_t end) at editfns.c:2522>
  | | | | | +-NILP()
  | | | | | +-XSETINT()
  | | | | | +-Ftext_property_any()
  | | | | | \-Frun_hook_with_args()
  | | | | +-Fnext_property_change()
  | | | | +-make_number()
  | | | | +-Ftext_properties_at()
  | | | | +-XINT()
  | | | | \-copy_intervals_to_string() <void copy_intervals_to_string (Lisp_Object string, struct buffer buffer, ptrdiff_t position, ptrdiff_t length) at intervals.c:2300> (R)
  | | | |   +-copy_intervals() <INTERVAL copy_intervals (INTERVAL tree, ptrdiff_t start, ptrdiff_t length) at intervals.c:2260> (R)
  | | | |   | +-find_interval() <INTERVAL find_interval (register INTERVAL tree, register ptrdiff_t position) at intervals.c:656> [see 1557]
  | | | |   | +-eassert()
  | | | |   | +-LENGTH() <LENGTH at ccl.c:219>
  | | | |   | +-DEFAULT_INTERVAL_P()
  | | | |   | +-make_interval() <INTERVAL make_interval (void) at alloc.c:1244> (R) [see 1544]
  | | | |   | +-TOTAL_LENGTH()
  | | | |   | +-copy_properties() <void copy_properties (register INTERVAL source, register INTERVAL target) at intervals.c:123> [see 2265]
  | | | |   | +-next_interval() <INTERVAL next_interval (register INTERVAL interval) at intervals.c:709> [see 1582]
  | | | |   | +-split_interval_right() <INTERVAL split_interval_right (INTERVAL interval, ptrdiff_t offset) at intervals.c:547> (R) [see 2247]
  | | | |   | \-balance_an_interval() <INTERVAL balance_an_interval (INTERVAL i) at intervals.c:432> (R) [see 2254]
  | | | |   +-buffer_intervals()
  | | | |   +-set_interval_object()
  | | | |   \-set_string_intervals()
  | | | +-record_delete() <void record_delete (ptrdiff_t beg, Lisp_Object string, bool record_markers) at undo.c:185>
  | | | | +-EQ()
  | | | | +-BVAR()
  | | | | +-SCHARS()
  | | | | +-XSETINT()
  | | | | +-record_point() <void record_point (ptrdiff_t pt) at undo.c:56> [see 2172]
  | | | | +-XSETFASTINT()
  | | | | +-record_marker_adjustments() <void record_marker_adjustments (ptrdiff_t from, ptrdiff_t to) at undo.c:138>
  | | | | | +-NILP()
  | | | | | +-Fcons()
  | | | | | +-Fundo_boundary()
  | | | | | +-BUF_MARKERS()
  | | | | | +-eassert()
  | | | | | +-XSETMISC()
  | | | | | +-bset_undo_list()
  | | | | | +-make_number()
  | | | | | \-BVAR()
  | | | | +-bset_undo_list()
  | | | | \-Fcons()
  | | | +-adjust_markers_for_delete() <void adjust_markers_for_delete (ptrdiff_t from, ptrdiff_t from_byte, ptrdiff_t to, ptrdiff_t to_byte) at insdel.c:214>
  | | | | +-BUF_MARKERS()
  | | | | \-eassert()
  | | | +-adjust_point() <void adjust_point (ptrdiff_t nchars, ptrdiff_t nbytes) at insdel.c:302> [see 2444]
  | | | +-offset_intervals() <void offset_intervals (struct buffer buffer, ptrdiff_t start, ptrdiff_t length) at intervals.c:1399> (R) [see 2229]
  | | | +-adjust_overlays_for_delete() <void adjust_overlays_for_delete (ptrdiff_t pos, ptrdiff_t length) at buffer.c:3605>
  | | | | \-recenter_overlay_lists() <void recenter_overlay_lists (struct buffer buf, ptrdiff_t pos) at buffer.c:3477> [see 2214]
  | | | +-eassert()
  | | | \-evaporate_overlays() <void evaporate_overlays (ptrdiff_t pos) at buffer.c:4605>
  | | |   +-XSETMISC()
  | | |   +-OVERLAY_POSITION()
  | | |   +-OVERLAY_END()
  | | |   +-OVERLAY_START()
  | | |   +-NILP()
  | | |   +-Foverlay_get()
  | | |   +-Fcons()
  | | |   +-CONSP()
  | | |   +-XCDR()
  | | |   +-Fdelete_overlay()
  | | |   \-XCAR()
  | | +-signal_after_change() <void signal_after_change (ptrdiff_t charpos, ptrdiff_t lendel, ptrdiff_t lenins) at insdel.c:2035> (R) [see 2421]
  | | \-update_compositions() <void update_compositions (ptrdiff_t from, ptrdiff_t to, int check_mask) at composite.c:497> (R)
  | |   +-find_composition() <bool find_composition (ptrdiff_t pos, ptrdiff_t limit, ptrdiff_t *start, ptrdiff_t *end, Lisp_Object *prop, Lisp_Object object) at composite.c:425> (R)
  | |   | +-get_property_and_range() <bool get_property_and_range (ptrdiff_t pos, Lisp_Object prop, Lisp_Object *val, ptrdiff_t *start, ptrdiff_t *end, Lisp_Object object) at intervals.c:2171> (R)
  | |   | | +-NILP()
  | |   | | +-find_interval() <INTERVAL find_interval (register INTERVAL tree, register ptrdiff_t position) at intervals.c:656> [see 1557]
  | |   | | +-buffer_intervals()
  | |   | | +-BUFFERP()
  | |   | | +-XBUFFER()
  | |   | | +-STRINGP()
  | |   | | +-string_intervals()
  | |   | | +-emacs_abort() <void emacs_abort (void) at sysdep.c:2129> (R) [see 28]
  | |   | | +-LENGTH() <LENGTH at ccl.c:219>
  | |   | | +-textget() <Lisp_Object textget (Lisp_Object plist, register Lisp_Object prop) at intervals.c:1747> [see 1944]
  | |   | | +-previous_interval() <INTERVAL previous_interval (register INTERVAL interval) at intervals.c:748> [see 1934]
  | |   | | +-EQ()
  | |   | | \-next_interval() <INTERVAL next_interval (register INTERVAL interval) at intervals.c:709> [see 1582]
  | |   | +-Fnext_single_property_change()
  | |   | +-make_number()
  | |   | +-XINT()
  | |   | \-Fprevious_single_property_change()
  | |   +-composition_valid_p()
  | |   +-Fput_text_property()
  | |   +-make_number()
  | |   +-Fcons()
  | |   +-XCAR()
  | |   +-XCDR()
  | |   +-run_composition_function() <void run_composition_function (ptrdiff_t from, ptrdiff_t to, Lisp_Object prop) at composite.c:465> (R)
  | |   | +-func()
  | |   | +-COMPOSITION_MODIFICATION_FUNC()
  | |   | +-find_composition() <bool find_composition (ptrdiff_t pos, ptrdiff_t limit, ptrdiff_t *start, ptrdiff_t *end, Lisp_Object *prop, Lisp_Object object) at composite.c:425> (R) [see 2553]
  | |   | +-composition_valid_p()
  | |   | +-NILP()
  | |   | +-Ffboundp()
  | |   | +-call2() <Lisp_Object call2 (Lisp_Object fn, Lisp_Object arg1, Lisp_Object arg2) at eval.c:2616> [see 431]
  | |   | \-make_number()
  | |   +-SPECPDL_INDEX()
  | |   +-specbind() <void specbind (Lisp_Object symbol, Lisp_Object value) at eval.c:3124> (R) [see 2012]
  | |   +-Fremove_list_of_text_properties()
  | |   +-list1() <Lisp_Object list1 (Lisp_Object arg1) at alloc.c:2513> [see 598]
  | |   \-unbind_to() <Lisp_Object unbind_to (ptrdiff_t count, Lisp_Object value) at eval.c:3281> (R) [see 1662]
  | +-sprintf()
  | +-NATNUMP()
  | +-XFASTINT()
  | +-marker_position() <ptrdiff_t marker_position (Lisp_Object marker) at marker.c:645> (R) [see 1638]
  | +-marker_byte_position() <ptrdiff_t marker_byte_position (Lisp_Object marker) at marker.c:661> (R)
  | | +-XMARKER()
  | | +-error() <void error (const char *m, ...) at eval.c:1782> (R) [see 85]
  | | +-eassert()
  | | +-BUF_BEG_BYTE()
  | | \-BUF_Z_BYTE()
  | +-unchain_marker() <void unchain_marker (register struct Lisp_Marker *marker) at marker.c:605> (R) [see 1644]
  | +-XMARKER()
  | +-bset_redisplay() <void bset_redisplay (struct buffer b) at xdisp.c:653> (R) [see 1631]
  | \-set_buffer_internal()
  +-init_callproc() <void init_callproc (void) at callproc.c:1570>
  | +-egetenv() <char *egetenv (const char *var) at callproc.c:1519> [see 1766]
  | +-ns_etc_directory()
  | +-alloca()
  | +-strlen()
  | +-strcpy()
  | +-NILP()
  | +-Fexpand_file_name()
  | +-build_string()
  | +-Fmember()
  | +-ns_exec_path()
  | +-decode_env_path() <Lisp_Object decode_env_path (const char *evarname, const char *defalt, bool empty) at emacs.c:2217> [see 1763]
  | +-Fcons()
  | +-nconc2() <Lisp_Object nconc2 (Lisp_Object s1, Lisp_Object s2) at fns.c:2214> [see 1610]
  | +-Ffile_name_as_directory()
  | +-Fcar()
  | +-Ffile_exists_p()
  | +-Fequal()
  | +-Fdirectory_file_name()
  | +-file_accessible_directory_p() <bool file_accessible_directory_p (char const *file) at fileio.c:2771>
  | | +-file_directory_p() <bool file_directory_p (char const *file) at fileio.c:2725> [see 1857]
  | | +-strlen()
  | | +-SAFE_ALLOCA()
  | | +-memcpy()
  | | +-strcpy()
  | | +-check_existing() <bool check_existing (const char *filename) at fileio.c:168>
  | | | \-faccessat()
  | | \-SAFE_FREE()
  | +-SSDATA()
  | +-dir_warning() <void dir_warning (char const *use, Lisp_Object dirname) at lread.c:4426>
  | | +-fprintf()
  | | +-SSDATA()
  | | +-strerror()
  | | +-emacs_strerror() <char *emacs_strerror (int error_number) at coding.c:11375> (R) [see 1400]
  | | +-SAFE_ALLOCA()
  | | +-strlen()
  | | +-SBYTES()
  | | +-esprintf() <ptrdiff_t esprintf (char *buf, char const *format, ...) at doprnt.c:475>
  | | | +-va_start()
  | | | +-doprnt() <ptrdiff_t doprnt (char *buffer, ptrdiff_t bufsize, const char *format, const char *format_end, va_list ap) at doprnt.c:129> (R) [see 80]
  | | | +-TYPE_MAXIMUM()
  | | | \-va_end()
  | | +-message_dolog() <void message_dolog (const char *m, ptrdiff_t nbytes, bool nlflag, bool multibyte) at xdisp.c:9989> (R) [see 1879]
  | | +-STRING_MULTIBYTE()
  | | \-SAFE_FREE()
  | +-getenv()
  | +-build_unibyte_string()
  | \-Ffile_accessible_directory_p()
  +-init_fileio() <void init_fileio (void) at fileio.c:5788>
  | \-umask()
  +-init_lread() <void init_lread (void) at lread.c:4342>
  | +-NILP()
  | +-egetenv() <char *egetenv (const char *var) at callproc.c:1519> [see 1766]
  | +-decode_env_path() <Lisp_Object decode_env_path (const char *evarname, const char *defalt, bool empty) at emacs.c:2217> [see 1763]
  | +-load_path_check() <void load_path_check (Lisp_Object lpath) at lread.c:4161>
  | | +-NILP()
  | | +-XCDR()
  | | +-Fcar()
  | | +-STRINGP()
  | | +-Fdirectory_file_name()
  | | +-file_accessible_directory_p() <bool file_accessible_directory_p (char const *file) at fileio.c:2771> [see 2625]
  | | +-SSDATA()
  | | +-dir_warning() <void dir_warning (char const *use, Lisp_Object dirname) at lread.c:4426> [see 2635]
  | | \-XCAR()
  | +-Fmemq()
  | +-load_path_default() <Lisp_Object load_path_default (void) at lread.c:4212>
  | | +-ns_load_path()
  | | +-decode_env_path() <Lisp_Object decode_env_path (const char *evarname, const char *defalt, bool empty) at emacs.c:2217> [see 1763]
  | | +-NILP()
  | | +-Fexpand_file_name()
  | | +-build_string()
  | | +-Ffile_accessible_directory_p()
  | | +-Fmember()
  | | +-list1() <Lisp_Object list1 (Lisp_Object arg1) at alloc.c:2513> [see 598]
  | | +-nconc2() <Lisp_Object nconc2 (Lisp_Object s1, Lisp_Object s2) at fns.c:2214> [see 1610]
  | | +-Fcons()
  | | +-Fequal()
  | | \-Ffile_exists_p()
  | +-nconc2() <Lisp_Object nconc2 (Lisp_Object s1, Lisp_Object s2) at fns.c:2214> [see 1610]
  | +-CONSP()
  | +-XCAR()
  | +-XCDR()
  | +-Fcons()
  | \-Fappend()
  +-check_windows_init_file()
  +-syms_of_chartab() <void syms_of_chartab (void) at chartab.c:1414>
  | +-DEFSYM()
  | +-defsubr() <void defsubr (struct Lisp_Subr sname) at lread.c:4065> [see 602]
  | \-DEFVAR_LISP()
  +-syms_of_lread() <void syms_of_lread (void) at lread.c:4448>
  | +-defsubr() <void defsubr (struct Lisp_Subr sname) at lread.c:4065> [see 602]
  | +-DEFVAR_LISP()
  | +-XSYMBOL()
  | +-intern()
  | +-list2() <Lisp_Object list2 (Lisp_Object arg1, Lisp_Object arg2) at alloc.c:2519> [see 702]
  | +-build_pure_c_string()
  | +-list1() <Lisp_Object list1 (Lisp_Object arg1) at alloc.c:2513> [see 598]
  | +-DEFVAR_BOOL()
  | +-DEFSYM()
  | +-Fexpand_file_name()
  | +-build_string()
  | +-Fcar()
  | +-decode_env_path() <Lisp_Object decode_env_path (const char *evarname, const char *defalt, bool empty) at emacs.c:2217> [see 1763]
  | +-Fmake_variable_buffer_local()
  | \-staticpro() <void staticpro (Lisp_Object *varaddress) at alloc.c:5333> [see 344]
  +-syms_of_print() <void syms_of_print (void) at print.c:2200>
  | +-DEFSYM()
  | +-DEFVAR_LISP()
  | +-DEFVAR_BOOL()
  | +-staticpro() <void staticpro (Lisp_Object *varaddress) at alloc.c:5333> [see 344]
  | \-defsubr() <void defsubr (struct Lisp_Subr sname) at lread.c:4065> [see 602]
  +-syms_of_eval() <void syms_of_eval (void) at eval.c:3712>
  | +-DEFVAR_INT()
  | +-DEFVAR_LISP()
  | +-DEFSYM()
  | +-DEFVAR_BOOL()
  | +-Funintern()
  | +-staticpro() <void staticpro (Lisp_Object *varaddress) at alloc.c:5333> [see 344]
  | \-defsubr() <void defsubr (struct Lisp_Subr sname) at lread.c:4065> [see 602]
  +-syms_of_floatfns() <void syms_of_floatfns (void) at floatfns.c:545>
  | \-defsubr() <void defsubr (struct Lisp_Subr sname) at lread.c:4065> [see 602]
  +-syms_of_buffer() <void syms_of_buffer (void) at buffer.c:5447>
  | +-staticpro() <void staticpro (Lisp_Object *varaddress) at alloc.c:5333> [see 344]
  | +-Fmake_vector()
  | +-make_number()
  | +-DEFSYM()
  | +-Fput()
  | +-listn() <Lisp_Object listn (enum constype type, ptrdiff_t count, Lisp_Object arg, ...) at alloc.c:2551> [see 618]
  | +-build_pure_c_string()
  | +-DEFVAR_BUFFER_DEFAULTS()
  | +-DEFVAR_PER_BUFFER()
  | +-BVAR()
  | +-XSYMBOL()
  | +-intern_c_string()
  | +-DEFVAR_LISP()
  | \-defsubr() <void defsubr (struct Lisp_Subr sname) at lread.c:4065> [see 602]
  +-syms_of_bytecode() <void syms_of_bytecode (void) at bytecode.c:2034>
  | +-defsubr() <void defsubr (struct Lisp_Subr sname) at lread.c:4065> [see 602]
  | +-DEFVAR_LISP()
  | +-DEFVAR_BOOL()
  | +-Fmake_vector()
  | +-make_number()
  | +-DEFSYM()
  | \-ASET()
  +-syms_of_callint() <void syms_of_callint (void) at callint.c:866>
  | +-Fmake_marker()
  | +-staticpro() <void staticpro (Lisp_Object *varaddress) at alloc.c:5333> [see 344]
  | +-listn() <Lisp_Object listn (enum constype type, ptrdiff_t count, Lisp_Object arg, ...) at alloc.c:2551> [see 618]
  | +-intern_c_string()
  | +-DEFSYM()
  | +-DEFVAR_KBOARD()
  | +-DEFVAR_LISP()
  | \-defsubr() <void defsubr (struct Lisp_Subr sname) at lread.c:4065> [see 602]
  +-syms_of_casefiddle() <void syms_of_casefiddle (void) at casefiddle.c:426>
  | +-DEFSYM()
  | \-defsubr() <void defsubr (struct Lisp_Subr sname) at lread.c:4065> [see 602]
  +-syms_of_casetab() <void syms_of_casetab (void) at casetab.c:290>
  | +-DEFSYM()
  | +-staticpro() <void staticpro (Lisp_Object *varaddress) at alloc.c:5333> [see 344]
  | \-defsubr() <void defsubr (struct Lisp_Subr sname) at lread.c:4065> [see 602]
  +-syms_of_category() <void syms_of_category (void) at category.c:456>
  | +-DEFSYM()
  | +-DEFVAR_LISP()
  | \-defsubr() <void defsubr (struct Lisp_Subr sname) at lread.c:4065> [see 602]
  +-syms_of_ccl() <void syms_of_ccl (void) at ccl.c:2296>
  | +-staticpro() <void staticpro (Lisp_Object *varaddress) at alloc.c:5333> [see 344]
  | +-Fmake_vector()
  | +-make_number()
  | +-DEFSYM()
  | +-DEFVAR_LISP()
  | \-defsubr() <void defsubr (struct Lisp_Subr sname) at lread.c:4065> [see 602]
  +-syms_of_character() <void syms_of_character (void) at character.c:1018>
  | +-DEFSYM()
  | +-staticpro() <void staticpro (Lisp_Object *varaddress) at alloc.c:5333> [see 344]
  | +-defsubr() <void defsubr (struct Lisp_Subr sname) at lread.c:4065> [see 602]
  | +-DEFVAR_LISP()
  | +-Fmake_vector()
  | +-make_number()
  | +-Fmake_char_table()
  | +-CHAR_TABLE_SET()
  | +-char_table_set_range() <void char_table_set_range (Lisp_Object table, int from, int to, Lisp_Object val) at chartab.c:496>
  | | +-XCHAR_TABLE()
  | | +-char_table_set() <void char_table_set (Lisp_Object table, int c, Lisp_Object val) at chartab.c:432>
  | | | +-XCHAR_TABLE()
  | | | +-ASCII_CHAR_P()
  | | | +-SUB_CHAR_TABLE_P()
  | | | +-set_sub_char_table_contents()
  | | | +-CHARTAB_IDX()
  | | | +-make_sub_char_table() <Lisp_Object make_sub_char_table (int depth, int min_char, Lisp_Object defalt) at chartab.c:141> [see 410]
  | | | +-set_char_table_contents()
  | | | +-sub_char_table_set() <void sub_char_table_set (Lisp_Object table, int c, Lisp_Object val, bool is_uniprop) at chartab.c:402> (R)
  | | | | +-XSUB_CHAR_TABLE()
  | | | | +-XINT()
  | | | | +-CHARTAB_IDX()
  | | | | +-set_sub_char_table_contents()
  | | | | +-SUB_CHAR_TABLE_P()
  | | | | +-UNIPROP_COMPRESSED_FORM_P()
  | | | | +-uniprop_table_uncompress() <Lisp_Object uniprop_table_uncompress (Lisp_Object table, int idx) at chartab.c:1147> [see 407]
  | | | | +-make_sub_char_table() <Lisp_Object make_sub_char_table (int depth, int min_char, Lisp_Object defalt) at chartab.c:141> [see 410]
  | | | | \-sub_char_table_set() <void sub_char_table_set (Lisp_Object table, int c, Lisp_Object val, bool is_uniprop) at chartab.c:402> (recursive: see 2796) [see 2796]
  | | | +-UNIPROP_TABLE_P()
  | | | +-set_char_table_ascii() <void set_char_table_ascii (Lisp_Object table, Lisp_Object val) at chartab.c:94>
  | | | | \-XCHAR_TABLE()
  | | | \-char_table_ascii() <Lisp_Object char_table_ascii (Lisp_Object table) at chartab.c:156>
  | | |   +-XCHAR_TABLE()
  | | |   +-SUB_CHAR_TABLE_P()
  | | |   +-XSUB_CHAR_TABLE()
  | | |   +-UNIPROP_TABLE_P()
  | | |   +-UNIPROP_COMPRESSED_FORM_P()
  | | |   \-uniprop_table_uncompress() <Lisp_Object uniprop_table_uncompress (Lisp_Object table, int idx) at chartab.c:1147> [see 407]
  | | +-UNIPROP_TABLE_P()
  | | +-CHARTAB_IDX()
  | | +-set_char_table_contents()
  | | +-SUB_CHAR_TABLE_P()
  | | +-make_sub_char_table() <Lisp_Object make_sub_char_table (int depth, int min_char, Lisp_Object defalt) at chartab.c:141> [see 410]
  | | +-sub_char_table_set_range() <void sub_char_table_set_range (Lisp_Object table, int from, int to, Lisp_Object val, bool is_uniprop) at chartab.c:457> (R)
  | | | +-XSUB_CHAR_TABLE()
  | | | +-XINT()
  | | | +-CHARTAB_IDX()
  | | | +-set_sub_char_table_contents()
  | | | +-SUB_CHAR_TABLE_P()
  | | | +-UNIPROP_COMPRESSED_FORM_P()
  | | | +-uniprop_table_uncompress() <Lisp_Object uniprop_table_uncompress (Lisp_Object table, int idx) at chartab.c:1147> [see 407]
  | | | +-make_sub_char_table() <Lisp_Object make_sub_char_table (int depth, int min_char, Lisp_Object defalt) at chartab.c:141> [see 410]
  | | | \-sub_char_table_set_range() <void sub_char_table_set_range (Lisp_Object table, int from, int to, Lisp_Object val, bool is_uniprop) at chartab.c:457> (recursive: see 2821) [see 2821]
  | | +-ASCII_CHAR_P()
  | | +-set_char_table_ascii() <void set_char_table_ascii (Lisp_Object table, Lisp_Object val) at chartab.c:94> [see 2807]
  | | \-char_table_ascii() <Lisp_Object char_table_ascii (Lisp_Object table) at chartab.c:156> [see 2809]
  | +-Fset_char_table_range()
  | +-Fcons()
  | \-Fput()
  +-syms_of_cmds() <void syms_of_cmds (void) at cmds.c:525>
  | +-DEFSYM()
  | +-DEFVAR_LISP()
  | \-defsubr() <void defsubr (struct Lisp_Subr sname) at lread.c:4065> [see 602]
  +-syms_of_dired() <void syms_of_dired (void) at dired.c:1064>
  | +-DEFSYM()
  | +-defsubr() <void defsubr (struct Lisp_Subr sname) at lread.c:4065> [see 602]
  | \-DEFVAR_LISP()
  +-syms_of_display() <void syms_of_display (void) at dispnew.c:6275>
  | +-defsubr() <void defsubr (struct Lisp_Subr sname) at lread.c:4065> [see 602]
  | +-Fmake_vector()
  | +-make_number()
  | +-staticpro() <void staticpro (Lisp_Object *varaddress) at alloc.c:5333> [see 344]
  | +-DEFSYM()
  | +-DEFVAR_INT()
  | +-DEFVAR_BOOL()
  | +-DEFVAR_LISP()
  | \-DEFVAR_KBOARD()
  +-syms_of_doc() <void syms_of_doc (void) at doc.c:959>
  | +-DEFSYM()
  | +-DEFVAR_LISP()
  | \-defsubr() <void defsubr (struct Lisp_Subr sname) at lread.c:4065> [see 602]
  +-syms_of_editfns() <void syms_of_editfns (void) at editfns.c:4783>
  | +-DEFSYM()
  | +-DEFVAR_LISP()
  | +-Fcurrent_buffer()
  | +-Fset_buffer()
  | +-Fset()
  | +-Fmake_local_variable()
  | +-intern_c_string()
  | \-defsubr() <void defsubr (struct Lisp_Subr sname) at lread.c:4065> [see 602]
  +-syms_of_emacs() <void syms_of_emacs (void) at emacs.c:2404>
  | +-DEFSYM()
  | +-defsubr() <void defsubr (struct Lisp_Subr sname) at lread.c:4065> [see 602]
  | +-DEFVAR_LISP()
  | +-intern_c_string()
  | +-build_string()
  | +-DEFVAR_BOOL()
  | +-make_string() <Lisp_Object make_string (const char *contents, ptrdiff_t nbytes) at alloc.c:2145> (R) [see 89]
  | +-Fput()
  | \-staticpro() <void staticpro (Lisp_Object *varaddress) at alloc.c:5333> [see 344]
  +-syms_of_filelock() <void syms_of_filelock (void) at filelock.c:843>
  | +-DEFVAR_LISP()
  | +-DEFVAR_BOOL()
  | \-defsubr() <void defsubr (struct Lisp_Subr sname) at lread.c:4065> [see 602]
  +-syms_of_indent() <void syms_of_indent (void) at indent.c:2181>
  | +-DEFVAR_BOOL()
  | \-defsubr() <void defsubr (struct Lisp_Subr sname) at lread.c:4065> [see 602]
  +-syms_of_insdel() <void syms_of_insdel (void) at insdel.c:2199>
  | +-staticpro() <void staticpro (Lisp_Object *varaddress) at alloc.c:5333> [see 344]
  | +-DEFVAR_LISP()
  | +-DEFVAR_BOOL()
  | +-DEFSYM()
  | \-defsubr() <void defsubr (struct Lisp_Subr sname) at lread.c:4065> [see 602]
  +-syms_of_macros() <void syms_of_macros (void) at macros.c:371>
  | +-DEFSYM()
  | +-DEFVAR_LISP()
  | +-defsubr() <void defsubr (struct Lisp_Subr sname) at lread.c:4065> [see 602]
  | +-DEFVAR_KBOARD()
  | \-DEFVAR_INT()
  +-syms_of_marker() <void syms_of_marker (void) at marker.c:772>
  | \-defsubr() <void defsubr (struct Lisp_Subr sname) at lread.c:4065> [see 602]
  +-syms_of_minibuf() <void syms_of_minibuf (void) at minibuf.c:1905>
  | +-staticpro() <void staticpro (Lisp_Object *varaddress) at alloc.c:5333> [see 344]
  | +-DEFSYM()
  | +-Fset()
  | +-DEFVAR_LISP()
  | +-DEFVAR_BOOL()
  | +-XSETFASTINT()
  | +-list2() <Lisp_Object list2 (Lisp_Object arg1, Lisp_Object arg2) at alloc.c:2519> [see 702]
  | +-intern_c_string()
  | \-defsubr() <void defsubr (struct Lisp_Subr sname) at lread.c:4065> [see 602]
  +-syms_of_process() <void syms_of_process (void) at process.c:7205>
  | +-DEFSYM()
  | +-staticpro() <void staticpro (Lisp_Object *varaddress) at alloc.c:5333> [see 344]
  | +-DEFVAR_BOOL()
  | +-DEFVAR_LISP()
  | \-defsubr() <void defsubr (struct Lisp_Subr sname) at lread.c:4065> [see 602]
  +-syms_of_search() <void syms_of_search (void) at search.c:3300>
  | +-xmalloc() <void *xmalloc (size_t size) at regex.c:213> [see 120]
  | +-staticpro() <void staticpro (Lisp_Object *varaddress) at alloc.c:5333> [see 344]
  | +-DEFSYM()
  | +-Fput()
  | +-listn() <Lisp_Object listn (enum constype type, ptrdiff_t count, Lisp_Object arg, ...) at alloc.c:2551> [see 618]
  | +-build_pure_c_string()
  | +-DEFVAR_LISP()
  | \-defsubr() <void defsubr (struct Lisp_Subr sname) at lread.c:4065> [see 602]
  +-syms_of_frame() <void syms_of_frame (void) at frame.c:4518>
  | +-DEFSYM()
  | +-intern_c_string()
  | +-staticpro() <void staticpro (Lisp_Object *varaddress) at alloc.c:5333> [see 344]
  | +-Fput()
  | +-make_number()
  | +-DEFVAR_LISP()
  | +-build_string()
  | +-DEFVAR_BOOL()
  | +-DEFVAR_KBOARD()
  | \-defsubr() <void defsubr (struct Lisp_Subr sname) at lread.c:4065> [see 602]
  +-syms_of_syntax() <void syms_of_syntax (void) at syntax.c:3583>
  | +-DEFSYM()
  | +-staticpro() <void staticpro (Lisp_Object *varaddress) at alloc.c:5333> [see 344]
  | +-Fput()
  | +-listn() <Lisp_Object listn (enum constype type, ptrdiff_t count, Lisp_Object arg, ...) at alloc.c:2551> [see 618]
  | +-build_pure_c_string()
  | +-DEFVAR_BOOL()
  | +-DEFVAR_LISP()
  | +-Fmake_char_table()
  | \-defsubr() <void defsubr (struct Lisp_Subr sname) at lread.c:4065> [see 602]
  +-syms_of_terminal() <void syms_of_terminal (void) at terminal.c:547>
  | +-DEFVAR_LISP()
  | +-DEFSYM()
  | +-defsubr() <void defsubr (struct Lisp_Subr sname) at lread.c:4065> [see 602]
  | +-Fprovide()
  | \-intern_c_string()
  +-syms_of_term() <void syms_of_term (void) at term.c:4527>
  | +-DEFVAR_BOOL()
  | +-DEFVAR_LISP()
  | +-defsubr() <void defsubr (struct Lisp_Subr sname) at lread.c:4065> [see 602]
  | \-DEFSYM()
  +-syms_of_undo() <void syms_of_undo (void) at undo.c:461>
  | +-DEFSYM()
  | +-staticpro() <void staticpro (Lisp_Object *varaddress) at alloc.c:5333> [see 344]
  | +-defsubr() <void defsubr (struct Lisp_Subr sname) at lread.c:4065> [see 602]
  | +-DEFVAR_INT()
  | +-DEFVAR_LISP()
  | +-make_number()
  | \-DEFVAR_BOOL()
  +-syms_of_sound() <void syms_of_sound (void) at sound.c:1426>
  | +-DEFSYM()
  | \-defsubr() <void defsubr (struct Lisp_Subr sname) at lread.c:4065> [see 602]
  +-syms_of_textprop() <void syms_of_textprop (void) at textprop.c:2333>
  | +-DEFVAR_LISP()
  | +-list2() <Lisp_Object list2 (Lisp_Object arg1, Lisp_Object arg2) at alloc.c:2519> [see 702]
  | +-Fcons()
  | +-intern_c_string()
  | +-staticpro() <void staticpro (Lisp_Object *varaddress) at alloc.c:5333> [see 344]
  | +-DEFSYM()
  | \-defsubr() <void defsubr (struct Lisp_Subr sname) at lread.c:4065> [see 602]
  +-syms_of_composite() <void syms_of_composite (void) at composite.c:1902>
  | +-DEFSYM()
  | +-make_number()
  | +-Fmake_hash_table()
  | +-staticpro() <void staticpro (Lisp_Object *varaddress) at alloc.c:5333> [see 344]
  | +-make_uninit_vector()
  | +-ASET()
  | +-Fmake_vector()
  | +-Fcons()
  | +-DEFVAR_LISP()
  | +-intern_c_string()
  | +-Fmake_char_table()
  | \-defsubr() <void defsubr (struct Lisp_Subr sname) at lread.c:4065> [see 602]
  +-syms_of_ntproc()
  +-syms_of_cygw32()
  +-syms_of_window() <void syms_of_window (void) at window.c:7240>
  | +-DEFSYM()
  | +-Fput()
  | +-staticpro() <void staticpro (Lisp_Object *varaddress) at alloc.c:5333> [see 344]
  | +-DEFVAR_LISP()
  | +-DEFVAR_BOOL()
  | +-DEFVAR_INT()
  | +-list1() <Lisp_Object list1 (Lisp_Object arg1) at alloc.c:2513> [see 598]
  | +-Fcons()
  | \-defsubr() <void defsubr (struct Lisp_Subr sname) at lread.c:4065> [see 602]
  +-syms_of_xdisp() <void syms_of_xdisp (void) at xdisp.c:30328>
  | +-staticpro() <void staticpro (Lisp_Object *varaddress) at alloc.c:5333> [see 344]
  | +-DEFSYM()
  | +-Fmake_marker()
  | +-defsubr() <void defsubr (struct Lisp_Subr sname) at lread.c:4065> [see 602]
  | +-list1() <Lisp_Object list1 (Lisp_Object arg1) at alloc.c:2513> [see 598]
  | +-list2() <Lisp_Object list2 (Lisp_Object arg1, Lisp_Object arg2) at alloc.c:2519> [see 702]
  | +-intern_c_string()
  | +-build_pure_c_string()
  | +-DEFVAR_BOOL()
  | +-DEFVAR_LISP()
  | +-DEFVAR_INT()
  | +-make_float() <Lisp_Object make_float (double float_value) at alloc.c:2351> (R) [see 823]
  | +-make_number()
  | +-listn() <Lisp_Object listn (enum constype type, ptrdiff_t count, Lisp_Object arg, ...) at alloc.c:2551> [see 618]
  | +-Fmake_variable_buffer_local()
  | +-intern()
  | +-Fput()
  | +-Fmake_char_table()
  | +-Fset_char_table_extra_slot()
  | \-Fmake_vector()
  +-syms_of_font() <void syms_of_font (void) at font.c:5070>
  | +-staticpro() <void staticpro (Lisp_Object *varaddress) at alloc.c:5333> [see 344]
  | +-DEFSYM()
  | +-Ffont_spec()
  | +-Fmake_vector()
  | +-make_number()
  | +-defsubr() <void defsubr (struct Lisp_Subr sname) at lread.c:4065> [see 602]
  | +-DEFVAR_LISP()
  | +-DEFVAR_LISP_NOPRO()
  | +-BUILD_STYLE_TABLE()
  | +-XSYMBOL()
  | +-intern_c_string()
  | +-make_uninit_vector()
  | +-ASET()
  | +-syms_of_ftfont()
  | +-syms_of_xfont()
  | +-syms_of_ftxfont()
  | +-syms_of_xftfont()
  | +-syms_of_bdffont()
  | \-syms_of_w32font()
  +-syms_of_fringe()
  +-syms_of_image()
  +-syms_of_xterm()
  +-syms_of_xfns()
  +-syms_of_xmenu()
  +-syms_of_fontset()
  +-syms_of_xsettings()
  +-syms_of_xsmfns()
  +-syms_of_xselect()
  +-syms_of_xml() <void syms_of_xml (void) at xml.c:281>
  | +-defsubr() <void defsubr (struct Lisp_Subr sname) at lread.c:4065> [see 602]
  | \-DEFSYM()
  +-syms_of_decompress() <void syms_of_decompress (void) at decompress.c:225>
  | +-DEFSYM()
  | \-defsubr() <void defsubr (struct Lisp_Subr sname) at lread.c:4065> [see 602]
  +-syms_of_menu() <void syms_of_menu (void) at menu.c:1625>
  | +-staticpro() <void staticpro (Lisp_Object *varaddress) at alloc.c:5333> [see 344]
  | \-defsubr() <void defsubr (struct Lisp_Subr sname) at lread.c:4065> [see 602]
  +-syms_of_w32term()
  +-syms_of_w32fns()
  +-syms_of_w32menu()
  +-syms_of_w32select()
  +-syms_of_dosfns()
  +-syms_of_msdos()
  +-syms_of_win16select()
  +-syms_of_nsterm()
  +-syms_of_nsfns()
  +-syms_of_nsmenu()
  +-syms_of_nsselect()
  +-syms_of_gnutls() <void syms_of_gnutls (void) at gnutls.c:1198>
  | +-DEFSYM()
  | +-Fput()
  | +-make_number()
  | +-defsubr() <void defsubr (struct Lisp_Subr sname) at lread.c:4065> [see 602]
  | \-DEFVAR_INT()
  +-syms_of_gfilenotify()
  +-syms_of_inotify() <void syms_of_inotify (void) at inotify.c:399>
  | +-DEFSYM()
  | +-defsubr() <void defsubr (struct Lisp_Subr sname) at lread.c:4065> [see 602]
  | +-staticpro() <void staticpro (Lisp_Object *varaddress) at alloc.c:5333> [see 344]
  | +-Fprovide()
  | \-intern_c_string()
  +-syms_of_dbusbind()
  +-syms_of_ntterm()
  +-syms_of_w32notify()
  +-syms_of_profiler() <void syms_of_profiler (void) at profiler.c:559>
  | +-DEFVAR_INT()
  | +-DEFSYM()
  | +-cmpfn_profiler() <bool cmpfn_profiler (struct hash_table_test t, Lisp_Object bt1, Lisp_Object bt2) at profiler.c:519>
  | | +-VECTORP()
  | | +-ASIZE()
  | | +-NILP()
  | | +-Ffunction_equal()
  | | +-AREF()
  | | \-EQ()
  | +-hashfn_profiler() <EMACS_UINT hashfn_profiler (struct hash_table_test ht, Lisp_Object bt) at profiler.c:537>
  | | +-VECTORP()
  | | +-ASIZE()
  | | +-AREF()
  | | +-COMPILEDP()
  | | +-XHASH()
  | | +-CONSP()
  | | +-XCDR()
  | | +-EQ()
  | | +-XCAR()
  | | +-sxhash_combine()
  | | \-SXHASH_REDUCE()
  | +-defsubr() <void defsubr (struct Lisp_Subr sname) at lread.c:4065> [see 602]
  | \-staticpro() <void staticpro (Lisp_Object *varaddress) at alloc.c:5333> [see 344]
  +-keys_of_casefiddle() <void keys_of_casefiddle (void) at casefiddle.c:443>
  | +-initial_define_key() <void initial_define_key (Lisp_Object keymap, int key, const char *defname) at keymap.c:167>
  | | +-store_in_keymap() <Lisp_Object store_in_keymap (Lisp_Object keymap, register Lisp_Object idx, Lisp_Object def) at keymap.c:796>
  | | | +-EQ()
  | | | +-error() <void error (const char *m, ...) at eval.c:1782> (R) [see 85]
  | | | +-CONSP()
  | | | +-PURE_P()
  | | | +-XCAR()
  | | | +-STRINGP()
  | | | +-Fcons()
  | | | +-XCDR()
  | | | +-CHARACTERP()
  | | | +-CHECK_CHARACTER_CDR()
  | | | +-EVENT_HEAD()
  | | | +-SYMBOLP()
  | | | +-reorder_modifiers() <Lisp_Object reorder_modifiers (Lisp_Object symbol) at keyboard.c:6440> (R)
  | | | | +-parse_modifiers() <Lisp_Object parse_modifiers (Lisp_Object symbol) at keyboard.c:6305> (R)
  | | | | | +-INTEGERP()
  | | | | | +-list2i()
  | | | | | +-KEY_TO_CHAR()
  | | | | | +-XINT()
  | | | | | +-SYMBOLP()
  | | | | | +-Fget()
  | | | | | +-CONSP()
  | | | | | +-parse_modifiers_uncached() <int parse_modifiers_uncached (Lisp_Object symbol, ptrdiff_t *modifier_end) at keyboard.c:6112>
  | | | | | | +-CHECK_SYMBOL()
  | | | | | | +-SYMBOL_NAME()
  | | | | | | +-SBYTES()
  | | | | | | +-SREF()
  | | | | | | +-SINGLE_LETTER_MOD()
  | | | | | | +-MULTI_LETTER_MOD()
  | | | | | | +-memcmp()
  | | | | | | \-SDATA()
  | | | | | +-Fintern()
  | | | | | +-make_string() <Lisp_Object make_string (const char *contents, ptrdiff_t nbytes) at alloc.c:2145> (R) [see 89]
  | | | | | +-SSDATA()
  | | | | | +-SYMBOL_NAME()
  | | | | | +-SBYTES()
  | | | | | +-emacs_abort() <void emacs_abort (void) at sysdep.c:2129> (R) [see 28]
  | | | | | +-XSETFASTINT()
  | | | | | +-list2() <Lisp_Object list2 (Lisp_Object arg1, Lisp_Object arg2) at alloc.c:2519> [see 702]
  | | | | | +-Fput()
  | | | | | +-Fcons()
  | | | | | \-lispy_modifier_list() <Lisp_Object lispy_modifier_list (int modifiers) at keyboard.c:6280>
  | | | | |   +-Fcons()
  | | | | |   \-AREF()
  | | | | +-apply_modifiers() <Lisp_Object apply_modifiers (int modifiers, Lisp_Object base) at keyboard.c:6371> (R)
  | | | | | +-INTEGERP()
  | | | | | +-make_number()
  | | | | | +-XINT()
  | | | | | +-Fget()
  | | | | | +-XSETFASTINT()
  | | | | | +-assq_no_quit() <Lisp_Object assq_no_quit (Lisp_Object key, Lisp_Object list) at fns.c:1411> [see 1706]
  | | | | | +-CONSP()
  | | | | | +-XCDR()
  | | | | | +-apply_modifiers_uncached() <Lisp_Object apply_modifiers_uncached (int modifiers, char *base, int base_len, int base_len_byte) at keyboard.c:6222> (R)
  | | | | | | +-emacs_abort() <void emacs_abort (void) at sysdep.c:2129> (R) [see 28]
  | | | | | | +-strcpy()
  | | | | | | +-make_uninit_multibyte_string() <Lisp_Object make_uninit_multibyte_string (EMACS_INT nchars, EMACS_INT nbytes) at alloc.c:2251> (R) [see 930]
  | | | | | | +-memcpy()
  | | | | | | +-SDATA()
  | | | | | | \-Fintern()
  | | | | | +-SSDATA()
  | | | | | +-SYMBOL_NAME()
  | | | | | +-SCHARS()
  | | | | | +-SBYTES()
  | | | | | +-Fcons()
  | | | | | +-Fput()
  | | | | | \-NILP()
  | | | | +-XFASTINT()
  | | | | +-XCAR()
  | | | | \-XCDR()
  | | | +-INTEGERP()
  | | | +-XSETFASTINT()
  | | | +-XINT()
  | | | +-VECTORP()
  | | | +-NATNUMP()
  | | | +-XFASTINT()
  | | | +-ASIZE()
  | | | +-CHECK_IMPURE()
  | | | +-ASET()
  | | | +-CHAR_TABLE_P()
  | | | +-Faset()
  | | | +-NILP()
  | | | +-Fset_char_table_range()
  | | | +-XSETCDR()
  | | | \-Fmake_char_table()
  | | +-make_number()
  | | \-intern_c_string()
  | +-Ctl()
  | +-Fput()
  | \-intern()
  +-keys_of_cmds() <void keys_of_cmds (void) at cmds.c:550>
  | +-initial_define_key() <void initial_define_key (Lisp_Object keymap, int key, const char *defname) at keymap.c:167> [see 3111]
  | \-Ctl()
  +-keys_of_buffer() <void keys_of_buffer (void) at buffer.c:6379>
  | +-initial_define_key() <void initial_define_key (Lisp_Object keymap, int key, const char *defname) at keymap.c:167> [see 3111]
  | +-Fput()
  | \-intern_c_string()
  +-keys_of_keyboard() <void keys_of_keyboard (void) at keyboard.c:11696>
  | +-initial_define_key() <void initial_define_key (Lisp_Object keymap, int key, const char *defname) at keymap.c:167> [see 3111]
  | +-Ctl()
  | \-initial_define_lispy_key() <void initial_define_lispy_key (Lisp_Object keymap, const char *keyname, const char *defname) at keymap.c:173>
  |   +-store_in_keymap() <Lisp_Object store_in_keymap (Lisp_Object keymap, register Lisp_Object idx, Lisp_Object def) at keymap.c:796> [see 3112]
  |   \-intern_c_string()
  +-keys_of_keymap() <void keys_of_keymap (void) at keymap.c:3835>
  | +-initial_define_key() <void initial_define_key (Lisp_Object keymap, int key, const char *defname) at keymap.c:167> [see 3111]
  | \-Ctl()
  +-keys_of_window() <void keys_of_window (void) at window.c:7546>
  | +-initial_define_key() <void initial_define_key (Lisp_Object keymap, int key, const char *defname) at keymap.c:167> [see 3111]
  | \-Ctl()
  +-globals_of_w32font()
  +-globals_of_w32fns()
  +-globals_of_w32menu()
  +-globals_of_w32select()
  +-init_charset() <void init_charset (void) at charset.c:2297>
  | +-Fexpand_file_name()
  | +-build_string()
  | +-file_accessible_directory_p() <bool file_accessible_directory_p (char const *file) at fileio.c:2771> [see 2625]
  | +-SSDATA()
  | +-fprintf()
  | +-SDATA()
  | +-egetenv() <char *egetenv (const char *var) at callproc.c:1519> [see 1766]
  | +-exit()
  | \-list1() <Lisp_Object list1 (Lisp_Object arg1) at alloc.c:2513> [see 598]
  +-init_editfns() <void init_editfns (void) at editfns.c:93>
  | +-init_system_name() <void init_system_name (void) at sysdep.c:1342>
  | | +-uname()
  | | +-build_string()
  | | +-gethostname()
  | | +-strlen()
  | | +-xpalloc() <void *xpalloc (void *pa, ptrdiff_t *nitems, ptrdiff_t nitems_incr_min, ptrdiff_t nitems_max, ptrdiff_t item_size) at alloc.c:798> (R)
  | | | +-max()
  | | | +-min()
  | | | +-eassert()
  | | | +-memory_full() <void memory_full (size_t nbytes) at alloc.c:3717> (R) [see 5]
  | | | \-xrealloc() <void *xrealloc (void *block, size_t size) at alloc.c:707> (R)
  | | |   +-malloc()
  | | |   +-realloc()
  | | |   +-memory_full() <void memory_full (size_t nbytes) at alloc.c:3717> (R) [see 5]
  | | |   \-MALLOC_PROBE()
  | | +-min()
  | | +-strchr()
  | | +-memset()
  | | +-getaddrinfo()
  | | +-Fsleep_for()
  | | +-make_number()
  | | +-strcmp()
  | | +-xrealloc() <void *xrealloc (void *block, size_t size) at regex.c:225> [see 1435]
  | | +-strcpy()
  | | +-freeaddrinfo()
  | | +-gethostbyname()
  | | +-xfree() <void xfree (void *block) at alloc.c:730> [see 15]
  | | \-SSDATA()
  | +-getenv()
  | +-getpwuid()
  | +-getuid()
  | +-build_string()
  | +-geteuid()
  | +-Fstring_equal()
  | +-NILP()
  | +-make_fixnum_or_float()
  | +-Fuser_full_name()
  | \-uname()
  +-init_process_emacs() <void init_process_emacs (void) at process.c:7095>
  | +-g_source_unref()
  | +-g_child_watch_source_new()
  | +-getpid()
  | +-catch_child_signal() <void catch_child_signal (void) at process.c:7074> (R)
  | | +-emacs_sigaction_init() <void emacs_sigaction_init (struct sigaction action, signal_handler_t handler) at sysdep.c:1502> [see 248]
  | | +-deliver_child_signal() <void deliver_child_signal (int sig) at process.c:6265> (R)
  | | | +-deliver_process_signal() <void deliver_process_signal (int sig, signal_handler_t handler) at sysdep.c:1551> [see 225]
  | | | \-handle_child_signal() <void handle_child_signal (int sig) at process.c:6190> (R)
  | | |   +-CONSP()
  | | |   +-XCDR()
  | | |   +-TYPE_MINIMUM()
  | | |   +-TYPE_MAXIMUM()
  | | |   +-XCAR()
  | | |   +-INTEGERP()
  | | |   +-NUMBERP()
  | | |   +-XINT()
  | | |   +-XFLOAT_DATA()
  | | |   +-child_status_changed() <pid_t child_status_changed (pid_t child, int *status, int options) at sysdep.c:333>
  | | |   | \-get_child_status() <pid_t get_child_status (pid_t child, int *status, int options, bool interruptible) at sysdep.c:278> (R)
  | | |   |   +-eassert()
  | | |   |   +-waitpid()
  | | |   |   +-emacs_abort() <void emacs_abort (void) at sysdep.c:2129> (R) [see 28]
  | | |   |   \-make_timespec()
  | | |   +-STRINGP()
  | | |   +-unlink()
  | | |   +-SSDATA()
  | | |   +-XSETCAR()
  | | |   +-FOR_EACH_PROCESS()
  | | |   +-XPROCESS()
  | | |   +-WIFSIGNALED()
  | | |   +-WIFEXITED()
  | | |   +-FD_CLR()
  | | |   +-lib_child_handler() <signal_handler_t volatile lib_child_handler at process.c:6162>
  | | |   \-catch_child_signal() <void catch_child_signal (void) at process.c:7074> (recursive: see 3278) [see 3278]
  | | +-block_child_signal() <void block_child_signal (void) at callproc.c:113>
  | | | +-sigemptyset()
  | | | +-sigaddset()
  | | | \-pthread_sigmask()
  | | +-sigaction()
  | | +-eassert()
  | | +-lib_child_handler() <signal_handler_t volatile lib_child_handler at process.c:6162>
  | | +-dummy_handler() <void dummy_handler (int sig) at process.c:6161>
  | | \-unblock_child_signal() <void unblock_child_signal (void) at callproc.c:124>
  | |   \-pthread_sigmask()
  | +-FD_ZERO()
  | +-memset()
  | +-FD_SET()
  | +-ADD_SUBFEATURE()
  | +-pure_cons() <Lisp_Object pure_cons (Lisp_Object car, Lisp_Object cdr) at alloc.c:5203> (R) [see 624]
  | +-intern_c_string()
  | +-Fprovide()
  | +-STRINGP()
  | \-SSDATA()
  +-init_keyboard() <void init_keyboard (void) at keyboard.c:10855>
  | +-Ctl()
  | +-invalid_timespec()
  | +-wipe_kboard() <void wipe_kboard (KBOARD *kb) at keyboard.c:10822>
  | | \-xfree() <void xfree (void *block) at alloc.c:730> [see 15]
  | +-init_kboard() <void init_kboard (KBOARD *kb, Lisp_Object type) at keyboard.c:10774> [see 706]
  | +-emacs_sigaction_init() <void emacs_sigaction_init (struct sigaction action, signal_handler_t handler) at sysdep.c:1502> [see 248]
  | +-deliver_interrupt_signal() <void deliver_interrupt_signal (int sig) at keyboard.c:10293>
  | | +-deliver_process_signal() <void deliver_process_signal (int sig, signal_handler_t handler) at sysdep.c:1551> [see 225]
  | | \-handle_interrupt_signal() <void handle_interrupt_signal (int sig) at keyboard.c:10266>
  | |   +-get_named_tty() <struct terminal get_named_tty (const char *name) at term.c:2175>
  | |   \-handle_interrupt() <void handle_interrupt (bool in_signal_handler) at keyboard.c:10316> (R)
  | |     +-cancel_echoing() <void cancel_echoing (void) at keyboard.c:685>
  | |     | \-kset_echo_string() <void kset_echo_string (struct kboard kb, Lisp_Object val) at keyboard.c:446> [see 715]
  | |     +-NILP()
  | |     +-get_named_tty() <struct terminal get_named_tty (const char *name) at term.c:2175>
  | |     +-sigemptyset()
  | |     +-sigaddset()
  | |     +-pthread_sigmask()
  | |     +-fflush()
  | |     +-reset_all_sys_modes() <void reset_all_sys_modes (void) at sysdep.c:1210> (R) [see 38]
  | |     +-sys_suspend() <void sys_suspend (void) at sysdep.c:447> (R)
  | |     | +-kill()
  | |     | \-sys_subshell() <void sys_subshell (void) at sysdep.c:463> (R)
  | |     |   +-SSDATA()
  | |     |   +-encode_current_directory() <Lisp_Object encode_current_directory (void) at callproc.c:136> (R)
  | |     |   +-vfork()
  | |     |   +-error() <void error (const char *m, ...) at eval.c:1782> (R) [see 85]
  | |     |   +-save_signal_handlers() <void save_signal_handlers (struct save_signal saved_handlers) at sysdep.c:571>
  | |     |   +-getcwd()
  | |     |   +-egetenv() <char *egetenv (const char *var) at callproc.c:1519> [see 1766]
  | |     |   +-chdir()
  | |     |   +-emacs_perror() <void emacs_perror (char const *message) at sysdep.c:2341> (R) [see 75]
  | |     |   +-getenv()
  | |     |   +-strcpy()
  | |     |   +-setenv()
  | |     |   +-system()
  | |     |   +-putenv()
  | |     |   +-write()
  | |     |   +-execlp()
  | |     |   +-wait_for_termination() <void wait_for_termination (pid_t child, int *status, bool interruptible) at sysdep.c:318> (R)
  | |     |   \-restore_signal_handlers() <void restore_signal_handlers (struct save_signal saved_handlers) at sysdep.c:583>
  | |     +-printf()
  | |     +-cursor_to() <void cursor_to (struct frame f, int vpos, int hpos) at terminal.c:109>
  | |     | \-FRAME_TERMINAL()
  | |     +-SELECTED_FRAME()
  | |     +-getchar()
  | |     +-Fdo_auto_save()
  | |     +-emacs_abort() <void emacs_abort (void) at sysdep.c:2129> (R) [see 28]
  | |     +-init_all_sys_modes() <void init_all_sys_modes (void) at sysdep.c:839> (R)
  | |     | \-init_sys_modes() <void init_sys_modes (struct tty_display_info tty_out) at sysdep.c:849> (R)
  | |     |   +-narrow_foreground_group() <void narrow_foreground_group (int fd) at sysdep.c:737> (R)
  | |     |   +-fileno()
  | |     |   +-xmalloc() <void *xmalloc (size_t size) at regex.c:213> [see 120]
  | |     |   +-emacs_get_tty() <void emacs_get_tty (int fd, struct emacs_tty settings) at sysdep.c:756>
  | |     |   +-XSETINT()
  | |     |   +-XSETTERMINAL()
  | |     |   +-NILP()
  | |     |   +-Fcontrolling_tty_p()
  | |     |   +-internal_terminal_init()
  | |     |   +-dos_ttraw()
  | |     |   +-emacs_set_tty() <int emacs_set_tty (int fd, struct emacs_tty settings, bool flushp) at sysdep.c:772>
  | |     |   +-ioctl()
  | |     |   +-tcflow()
  | |     |   +-fcntl()
  | |     |   +-getpid()
  | |     |   +-init_sigio() <void init_sigio (int fd) at sysdep.c:597>
  | |     |   +-setvbuf()
  | |     |   +-setbuf()
  | |     |   +-set_terminal_modes_hook()
  | |     |   +-FOR_EACH_FRAME()
  | |     |   +-FRAME_TERMCAP_P()
  | |     |   +-XFRAME()
  | |     |   +-FRAME_TTY()
  | |     |   +-init_frame_faces() <void init_frame_faces (struct frame f) at xfaces.c:664> (R)
  | |     |   +-FRAME_MSDOS_P()
  | |     |   \-FRAME_GARBAGED_P()
  | |     +-GCPRO4()
  | |     +-Fsignal()
  | |     \-quit_throw_to_read_char() <void quit_throw_to_read_char (bool from_signal) at keyboard.c:10456> (R)
  | |       +-EQ()
  | |       +-Fkill_emacs()
  | |       +-clear_waiting_for_input() <void clear_waiting_for_input (void) at keyboard.c:10252>
  | |       +-FRAMEP()
  | |       +-do_switch_frame() <Lisp_Object do_switch_frame (Lisp_Object frame, int track, int for_deletion, Lisp_Object norecord) at frame.c:784> (R)
  | |       | +-SELECTED_FRAME()
  | |       | +-CONSP()
  | |       | +-EQ()
  | |       | +-XCAR()
  | |       | +-XCDR()
  | |       | +-CHECK_FRAME()
  | |       | +-FRAME_LIVE_P()
  | |       | +-XFRAME()
  | |       | +-FRAMEP()
  | |       | +-emacs_abort() <void emacs_abort (void) at sysdep.c:2129> (R) [see 28]
  | |       | +-FRAME_FOCUS_FRAME()
  | |       | +-Fredirect_frame_focus()
  | |       | +-FRAME_WINDOW_P()
  | |       | +-x_get_focus_frame()
  | |       | +-FRAME_HAS_MINIBUF_P()
  | |       | +-resize_mini_window() <int resize_mini_window (struct window w, int exact_p) at xdisp.c:10898> (R)
  | |       | +-XWINDOW()
  | |       | +-FRAME_MINIBUF_WINDOW()
  | |       | +-FRAME_TERMCAP_P()
  | |       | +-FRAME_MSDOS_P()
  | |       | +-FRAME_TTY()
  | |       | +-SET_FRAME_VISIBLE()
  | |       | +-FRAME_COLS()
  | |       | +-FrameCols()
  | |       | +-FRAME_LINES()
  | |       | +-FrameRows()
  | |       | +-FRAME_MINIBUF_ONLY_P()
  | |       | \-Fselect_window()
  | |       +-make_lispy_switch_frame() <Lisp_Object make_lispy_switch_frame (Lisp_Object frame) at keyboard.c:6080>
  | |       | \-list2() <Lisp_Object list2 (Lisp_Object arg1, Lisp_Object arg2) at alloc.c:2519> [see 702]
  | |       \-sys_longjmp()
  | +-sigaction()
  | +-deliver_input_available_signal() <void deliver_input_available_signal (int sig) at keyboard.c:7163>
  | | +-deliver_process_signal() <void deliver_process_signal (int sig, signal_handler_t handler) at sysdep.c:1551> [see 225]
  | | \-handle_input_available_signal() <void handle_input_available_signal (int sig) at keyboard.c:7154> [see 269]
  | +-pthread_sigmask()
  | \-start_polling() <void start_polling (void) at keyboard.c:1990> [see 285]
  +-init_display() <void init_display (void) at dispnew.c:6047>
  | +-SET_CHAR_GLYPH()
  | +-emacs_sigaction_init() <void emacs_sigaction_init (struct sigaction action, signal_handler_t handler) at sysdep.c:1502> [see 248]
  | +-deliver_window_change_signal() <void deliver_window_change_signal (int sig) at dispnew.c:5450>
  | | +-deliver_process_signal() <void deliver_process_signal (int sig, signal_handler_t handler) at sysdep.c:1551> [see 225]
  | | \-handle_window_change_signal() <void handle_window_change_signal (int sig) at dispnew.c:5415>
  | |   +-get_tty_size() <void get_tty_size (int fd, int *widthp, int *heightp) at sysdep.c:1122>
  | |   | +-ioctl()
  | |   | +-GetConsoleScreenBufferInfo()
  | |   | +-GetStdHandle()
  | |   | +-Right()
  | |   | +-Left()
  | |   | +-ScreenCols()
  | |   | \-ScreenRows()
  | |   +-fileno()
  | |   +-FOR_EACH_FRAME()
  | |   +-FRAME_TERMCAP_P()
  | |   +-XFRAME()
  | |   +-FRAME_TTY()
  | |   \-change_frame_size() <void change_frame_size (struct frame f, int new_width, int new_height, bool pretend, bool delay, bool safe, bool pixelwise) at dispnew.c:5502> (R)
  | |     +-FRAME_MSDOS_P()
  | |     +-FOR_EACH_FRAME()
  | |     +-FRAME_WINDOW_P()
  | |     +-XFRAME()
  | |     \-change_frame_size_1() <void change_frame_size_1 (struct frame f, int new_width, int new_height, bool pretend, bool delay, bool safe, bool pixelwise) at dispnew.c:5523> (R)
  | |       +-WINDOW_PIXEL_WIDTH()
  | |       +-XWINDOW()
  | |       +-FRAME_ROOT_WINDOW()
  | |       +-SPECPDL_INDEX()
  | |       +-FRAME_TEXT_WIDTH()
  | |       +-FRAME_TEXT_HEIGHT()
  | |       +-FRAME_COLS()
  | |       +-FRAME_LINES()
  | |       +-FRAME_COLUMN_WIDTH()
  | |       +-FRAME_LINE_HEIGHT()
  | |       +-check_frame_size() <void check_frame_size (struct frame frame, int *width, int *height, bool pixelwise) at window.c:3250>
  | |       | +-FRAME_LINE_HEIGHT()
  | |       | +-FRAME_COLUMN_WIDTH()
  | |       | +-FRAME_MINIBUF_ONLY_P()
  | |       | +-FRAME_HAS_MINIBUF_P()
  | |       | +-FRAME_TOP_MARGIN_HEIGHT()
  | |       | +-FRAME_INTERNAL_BORDER_WIDTH()
  | |       | \-FRAME_TOP_MARGIN()
  | |       +-FRAME_SCROLL_BAR_AREA_WIDTH()
  | |       +-FRAME_TOTAL_FRINGE_WIDTH()
  | |       +-FRAME_PIXEL_HEIGHT()
  | |       +-FRAME_TEXT_TO_PIXEL_HEIGHT()
  | |       +-FRAME_PIXEL_WIDTH()
  | |       +-FRAME_TEXT_TO_PIXEL_WIDTH()
  | |       +-block_input()
  | |       +-dos_set_window_size()
  | |       +-resize_frame_windows() <void resize_frame_windows (struct frame f, int size, bool horflag, bool pixelwise) at window.c:4158>
  | |       | +-XWINDOW()
  | |       | +-FRAME_COLUMN_WIDTH()
  | |       | +-FRAME_LINE_HEIGHT()
  | |       | +-max()
  | |       | +-FRAME_TOP_MARGIN_HEIGHT()
  | |       | +-FRAME_HAS_MINIBUF_P()
  | |       | +-FRAME_MINIBUF_ONLY_P()
  | |       | +-FRAME_TOP_MARGIN()
  | |       | +-WINDOW_LEAF_P()
  | |       | +-XSETINT()
  | |       | +-resize_root_window() <Lisp_Object resize_root_window (Lisp_Object window, Lisp_Object delta, Lisp_Object horizontal, Lisp_Object ignore, Lisp_Object pixelwise) at window.c:2956>
  | |       | +-window_resize_check() <int window_resize_check (struct window w, bool horflag) at window.c:3822> (R)
  | |       | +-XINT()
  | |       | +-window_resize_apply() <void window_resize_apply (struct window w, bool horflag) at window.c:3921> (R)
  | |       | +-window_pixel_to_total() <Lisp_Object window_pixel_to_total (Lisp_Object frame, Lisp_Object horizontal) at window.c:2963>
  | |       | +-Fdelete_other_windows_internal()
  | |       | \-fset_redisplay() <void fset_redisplay (struct frame f) at xdisp.c:646>
  | |       +-FRAME_TERMCAP_P()
  | |       +-FRAME_MSDOS_P()
  | |       +-FrameRows()
  | |       +-FRAME_TTY()
  | |       +-FrameCols()
  | |       +-WINDOWP()
  | |       +-SET_FRAME_COLS()
  | |       +-FRAME_SELECTED_WINDOW()
  | |       +-window_box() <void window_box (struct window w, enum glyph_row_area area, int *box_x, int *box_y, int *box_width, int *box_height) at xdisp.c:1190>
  | |       | +-window_box_width() <int window_box_width (struct window w, enum glyph_row_area area) at xdisp.c:1035>
  | |       | +-window_box_height() <int window_box_height (struct window w) at xdisp.c:1063>
  | |       | +-window_box_left() <int window_box_left (struct window w, enum glyph_row_area area) at xdisp.c:1157>
  | |       | +-WINDOW_TOP_EDGE_Y()
  | |       | +-WINDOW_WANTS_HEADER_LINE_P()
  | |       | \-CURRENT_HEADER_LINE_HEIGHT()
  | |       +-adjust_frame_glyphs() <void adjust_frame_glyphs (struct frame f) at dispnew.c:1785> (R)
  | |       | +-block_input()
  | |       | +-FRAME_WINDOW_P()
  | |       | +-adjust_frame_glyphs_for_window_redisplay() <void adjust_frame_glyphs_for_window_redisplay (struct frame f) at dispnew.c:2070> (R)
  | |       | +-adjust_frame_glyphs_for_frame_redisplay() <void adjust_frame_glyphs_for_frame_redisplay (struct frame f) at dispnew.c:1966> (R)
  | |       | +-adjust_decode_mode_spec_buffer() <void adjust_decode_mode_spec_buffer (struct frame f) at dispnew.c:2145>
  | |       | \-unblock_input() <void unblock_input (void) at keyboard.c:7137> (R) [see 1440]
  | |       +-calculate_costs() <void calculate_costs (struct frame frame) at term.c:1140> (R)
  | |       | +-FRAME_COST_BAUD_RATE()
  | |       | +-FRAME_TERMCAP_P()
  | |       | +-FRAME_TTY()
  | |       | +-FRAME_SCROLL_REGION_COST()
  | |       | +-string_cost() <int string_cost (const char *str) at term.c:1034>
  | |       | +-max()
  | |       | +-FRAME_COLS()
  | |       | +-min()
  | |       | +-memory_full() <void memory_full (size_t nbytes) at alloc.c:3717> (R) [see 5]
  | |       | +-xrealloc() <void *xrealloc (void *block, size_t size) at regex.c:225> [see 1435]
  | |       | +-memset()
  | |       | +-do_line_insertion_deletion_costs() <void do_line_insertion_deletion_costs (struct frame frame, const char *ins_line_string, const char *multi_ins_string, const char *del_line_string, const char *multi_del_string, const char *setup_string, const char *cleanup_string, int coefficient) at scroll.c:958> (R)
  | |       | +-calculate_ins_del_char_costs() <void calculate_ins_del_char_costs (struct frame f) at term.c:1079>
  | |       | +-per_line_cost() <int per_line_cost (const char *str) at term.c:1058>
  | |       | \-cmcostinit() <void cmcostinit (struct tty_display_info tty) at cm.c:140>
  | |       +-SET_FRAME_GARBAGED()
  | |       +-unblock_input() <void unblock_input (void) at keyboard.c:7137> (R) [see 1440]
  | |       +-record_unwind_current_buffer()
  | |       +-run_window_configuration_change_hook() <void run_window_configuration_change_hook (struct frame f) at window.c:3353> (R)
  | |       | +-SPECPDL_INDEX()
  | |       | +-Fdefault_value()
  | |       | +-XSETFRAME()
  | |       | +-NILP()
  | |       | +-XBUFFER()
  | |       | +-Fwindow_buffer()
  | |       | +-record_unwind_current_buffer()
  | |       | +-Fset_buffer()
  | |       | +-SELECTED_FRAME()
  | |       | +-record_unwind_protect() <void record_unwind_protect (void (*function) (Lisp_Object), Lisp_Object arg) at eval.c:3196> (R)
  | |       | +-select_frame_norecord() <void select_frame_norecord (Lisp_Object frame) at window.c:3346>
  | |       | +-Fwindow_list()
  | |       | +-CONSP()
  | |       | +-XCDR()
  | |       | +-XCAR()
  | |       | +-Flocal_variable_p()
  | |       | +-select_window_norecord() <void select_window_norecord (Lisp_Object window) at window.c:3339>
  | |       | +-run_funs() <void run_funs (Lisp_Object funs) at window.c:3331>
  | |       | +-Fbuffer_local_value()
  | |       | \-unbind_to() <Lisp_Object unbind_to (ptrdiff_t count, Lisp_Object value) at eval.c:3281> (R) [see 1662]
  | |       \-unbind_to() <Lisp_Object unbind_to (ptrdiff_t count, Lisp_Object value) at eval.c:3281> (R) [see 1662]
  | +-sigaction()
  | +-getenv()
  | +-x_display_ok()
  | +-fprintf()
  | +-make_number()
  | +-tgetent()
  | +-isatty()
  | +-fatal() <void fatal (const char *str, ...) at term.c:4460> [see 130]
  | +-exit()
  | +-XFRAME()
  | +-init_foreground_group() <void init_foreground_group (void) at sysdep.c:686>
  | | +-getpgrp()
  | | \-getpid()
  | +-init_tty() <struct terminal init_tty (const char *name, const char *terminal_type, bool must_succeed) at term.c:3986>
  | +-emacs_abort() <void emacs_abort (void) at sysdep.c:2129> (R) [see 28]
  | +-create_tty_output() <void create_tty_output (struct frame f) at term.c:3840>
  | | +-xzalloc() <void *xzalloc (size_t size) at alloc.c:689>
  | | | +-malloc()
  | | | +-memory_full() <void memory_full (size_t nbytes) at alloc.c:3717> (R) [see 5]
  | | | +-memset()
  | | | \-MALLOC_PROBE()
  | | +-eassert()
  | | +-FRAME_TERMCAP_P()
  | | \-FRAME_TERMINAL()
  | +-change_frame_size() <void change_frame_size (struct frame f, int new_width, int new_height, bool pretend, bool delay, bool safe, bool pixelwise) at dispnew.c:5502> (R) [see 3469]
  | +-FrameCols()
  | +-FrameRows()
  | +-Fmodify_frame_parameters()
  | +-list1() <Lisp_Object list1 (Lisp_Object arg1) at alloc.c:2513> [see 598]
  | +-Fcons()
  | +-Ftty_type()
  | +-build_string()
  | +-SELECTED_FRAME()
  | +-FRAME_TOTAL_COLS()
  | +-FRAME_LINES()
  | +-INT_ADD_RANGE_OVERFLOW()
  | +-INT_MULTIPLY_RANGE_OVERFLOW()
  | +-min()
  | +-calculate_costs() <void calculate_costs (struct frame frame) at term.c:1140> (R) [see 3541]
  | +-NILP()
  | +-FRAME_FOREGROUND_PIXEL()
  | +-FRAME_BACKGROUND_PIXEL()
  | +-call0() <Lisp_Object call0 (Lisp_Object fn) at eval.c:2590> [see 1657]
  | \-intern()
  +-init_crit()
  +-init_xdisp() <void init_xdisp (void) at xdisp.c:30974>
  | +-CHARPOS()
  | +-XWINDOW()
  | +-XFRAME()
  | +-FRAME_ROOT_WINDOW()
  | +-FRAME_TOP_MARGIN()
  | +-FRAME_LINE_HEIGHT()
  | +-FRAME_COLS()
  | +-FRAME_COLUMN_WIDTH()
  | +-FRAME_LINES()
  | +-make_number()
  | \-xmalloc() <void *xmalloc (size_t size) at regex.c:213> [see 120]
  +-init_fringe()
  +-init_macros() <void init_macros (void) at macros.c:364>
  +-init_window() <void init_window (void) at window.c:7234>
  +-init_font() <void init_font (void) at font.c:5252>
  | \-egetenv() <char *egetenv (const char *var) at callproc.c:1519> [see 1766]
  +-list2() <Lisp_Object list2 (Lisp_Object arg1, Lisp_Object arg2) at alloc.c:2519> [see 702]
  +-build_unibyte_string()
  +-build_string()
  +-monstartup()
  +-moncontrol()
  \-Frecursive_edit()
